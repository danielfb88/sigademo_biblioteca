<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?
class frmMultaHistOperador extends Form
{
    protected $objMulta;
    protected $objUsuario;
    
	function frmMultaHistOperador()
	{
		global $MIOLO, $module, $item;

		$this->Form("Histórico por Operador");
		$this->EventHandler();
		$this->defaultButton = false;
		// Botão 'fechar', direcionando para o handler biblioteca/main/secretaria
		//Botão desativado pq ele pode encaminhar para 2 formulários distintos
		//$this->SetClose($this->manager->GetActionURL($module, 'main:secretaria'));
    }

	function CreateFields()
    {
		global $MIOLO, $action, $module, $item, $page;

		$periodo = array(
			new Label('Período'), 
			new CalendarField('date1','','',15), 
			new Label('a'),
			new CalendarField('date2','','',15)
		);
		$fields = Array (
			new LookupTextField('lkpOperador','','Login do Operador',20),
			new HiddenField('idusuario',NULL),
			$periodo,
		);
		$this->SetFields($fields);
		$this->SetFieldAttr('lkpOperador','module','biblioteca');
		$this->SetFieldAttr('lkpOperador','item','Usuario');
		$this->SetFieldAttr('lkpOperador','event','filler');
		$this->SetFieldAttr('lkpOperador','related','lkpOperador,"",idusuario');

		$buttons = Array(
			new FormButton('btnProcurar', 'Enviar'),
		);
		$this->SetButtons($buttons);

		// validators
		$this->AddValidator(new RequiredValidator('lkpOperador'));
	//	$this->AddValidator(new RequiredValidator('date1'));
	//	$this->AddValidator(new RequiredValidator('date2'));

		//Definindo o foco
		if (!($this->GetFieldValue('lkpOperador')))
		{
			$this->page->onLoad("MIOLO_GetElementById('lkpOperador').focus();");
		}
	}

	function btnProcurar_click()	
	
    {
    	
  	
  	$data_um = $this->GetFormValue('date1');
  	$data_dois = $this->GetFormValue('date1'); 	 	
  		
    
	if( strlen(trim($data_um)) == 0)
		{
			$this->AddError('Informe o campo "Periodo inicial".');
			
		}else if( strlen(trim($data_dois)) == 0)
		{
			$this->AddError('Informe o campo "Periodo final".');
		}
	else	
	{	
    		global $MIOLO, $module, $self, $theme, $action, $page, $item;

		$this->objUsuario = $MIOLO->GetBusiness($module,'usuario');
		$login = $this->GetFormValue('lkpOperador');
		$usuario = $this->objUsuario->GetByCodigo($login);

		$data[0] = $this->GetFormValue('idusuario');
		$data[1] = $this->GetFormValue('date1');
		$data[2] = $this->GetFormValue('date2') . ' 23:59:59';
		$data[3] = $usuario[0][1];
		if($data[0] == null)
		{
			$data[0] = $usuario[0][2];
		}

		//Instancia o objeto multa
		$this->objMulta = $MIOLO->GetBusiness($module,'multa');

		//datagrid
		$this->SetTitle("Histórico por Operador");
		$columns = array(
			new DataGridColumn('data','Data','center', true,'34%'),
			new DataGridColumn('idmulta','Código da Multa','center', true,'33%'),
			new DataGridColumn('valor','Valor','center', true,'33%'),
		);

		$query = $this->objMulta->HistoricoMultaRecebidaPorOperador($data);

		//calcula total
		$total = 0.0;
		$cf = new MCurrencyFormatter();
		if($query->result)
		{
			foreach($query->result as $r)
			{
				$total += $cf->toDecimal($r[2]);
			}
		}
		$total = 'R$ '. number_format(str_replace(',','.',$total),2,',','.');

		$href_datagrid = $MIOLO->GetActionURL($module,$action,"", array('event'=>'btnProcurar_click'));
		$page->SetAction($href_datagrid);

		$datagrid = new DataGrid2($query, $columns, $href_datagrid,25);
		$datagrid->SetTitle("Operador: " . $data[3] . " - Total: " . $total);
		$datagrid->SetWidth('99%');
		$this->AddField($datagrid);

		$buttons = Array(
			new FormButton('btnVoltar', 'Voltar', $MIOLO->GetActionURL($module = $module, $action = $action)),
   		);
		$this->SetButtons($buttons);
		$this->SetButtonAttr('btnProcurar','visible',false);
	}
	
	}
}
?>
