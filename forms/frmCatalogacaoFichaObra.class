<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?php
/**
* @package SIGA
* @subpackage Biblioteca
* @author SETEC/MEC
*/

class frmCatalogacaoFichaObra extends MForm
{
    public $obra;
    public $operacao;
    public $logOperacao;
    public $usuario;
    public $idObra;
    public $material;


    
    function __construct($data)
    {
        $this->idObra = $data->idobra;
        parent::__construct('Obra');


    
       // Botão 'fechar', direcionando para o handler biblioteca/main/catalogacao
		$this->SetClose($this->manager->GetActionURL($module, 'main:catalogacao'));
    }

    function CreateFields()
    {
		global $MIOLO, $module, $action;
		
				var_dump('hereeeee');
        
                
		$this->obra = $this->manager->getBusiness('biblioteca','obra',$this->idObra);
		$this->operacao = $this->manager->getBusiness('biblioteca','operacao');
		$this->logOperacao = $this->manager->getBusiness('biblioteca','log');

        
		$objOperacao = $this->operacao->GetIdoperacaoByMnemonico('INCOBRA');
		$query = $this->logOperacao->GetIdusuarioByIdentificadorAndIdoperacao($this->obra->idObra, $objOperacao->idoperacao);


        //Concatenação dos Assuntos da Obra , caso existam mais de uma ocorrência
     
        $assuntosArray = array();
        $r = $this->obra->GetAssuntoObra($this->idObra);
        if($r != null){
            foreach($r as $a){
                $assuntosArray[] = $a[0];
            }

            $assuntos = implode(", " , $assuntosArray); //separa todos os assuntos da obra por virgula
        }else{
            $assuntos = null;
        }
        
        $assunto_dois= $this->obra->assunto2;
       
        if ($assunto_dois != NULL  )
        {
            $assuntos .= " , ";
            $assuntos .= $assunto_dois;
        }

        //  TRATANDO CDU E CDD

        $cdu = $this->obra->cdu;
        $cdd = $this->obra->cdd;
        $cducdd      = '';
        $valorcducdd = '';


        if ($cdu != NULL  )
        {
            $cducdd = "CDU";
            $valorcducdd = $cdu;
        }
        else
        {
            if ($cdd != NULL  )
            {
                $cducdd = "CDD";
                $valorcducdd = $cdd;
            }
        }



//



        

		$idUsuario = $query->result[0][0];
		$this->usuario = $this->manager->getBusiness('common','usuario',$idUsuario);
		$opPreCatalogacao = $this->usuario->nome;

		$fields = array(
            new MTextLabel('numero', ($this->obra->numeroDaObra != null) ? $this->obra->numeroDaObra : '&nbsp;', 'Número da Obra'),
            new MTextLabel('titulo', ($this->obra->titulo != null) ? ucfirst($this->obra->titulo) : '&nbsp;', 'Título'),
            new MTextLabel('subtitulo', ($this->obra->subtitulo != null) ? ucwords(strtolower($this->obra->subtitulo)) : '&nbsp;', 'Subtítulo'),

            new MTextLabel('autor', ($this->obra->autor != null) ? ($this->obra->autor) : '&nbsp;', 'Autor'),
            new MTextLabel('cutter', ($this->obra->cutter != null) ? ($this->obra->cutter) : '&nbsp;', 'Cutter'),            

            new MTextLabel('autorsecundario', ($this->obra->descAutoresSec != null) ? $this->obra->descAutoresSec : '&nbsp;', 'Autor Secundário'),

            //new MTextLabel('autorsecundario', ($this->obra->autor != null) ? $this->obra->descAutorSec : '&nbsp;', 'Autor Secundário'),   $autoresSecundarios



            new MTextLabel('edicao', ($this->obra->edicao != null) ? $this->obra->edicao : '&nbsp;', 'Edição'),
            new MTextLabel('local', ($this->obra->localPublicacao != null) ? ucfirst(strtolower($this->obra->localPublicacao)) : '&nbsp;', 'Local de Publicação'),
            new MTextLabel('editora', ($this->obra->editora != null) ? ucfirst(strtolower($this->obra->editora)) : '&nbsp;', 'Editora'),
            new MTextLabel('data', ($this->obra->dataPublicacao != null) ? $this->obra->dataPublicacao : '&nbsp;', 'Data de Publicação'),
            new MTextLabel('descfisica', ($this->obra->descFisica != null) ? ucfirst(strtolower($this->obra->descFisica)) : '&nbsp;', 'Descrição Física'),
                           
            new MTextLabel('cducdd', ($valorcducdd != null) ? ucwords(strtolower($valorcducdd)) : '&nbsp;', $cducdd),
            
            new MTextLabel('Assunto', ($this->obra->assunto != null) ? ucwords(strtolower($assuntos)) : '&nbsp;', 'Assunto(s)'),
            
    
//            new MTextLabel('Assunto', ($this->obra->assunto != null) ? $this->obra->assunto : '&nbsp;', 'Assunto'),
                           
            new MTextLabel('opprecatalogacao', ($opPreCatalogacao != null) ? ucfirst(strtolower($opPreCatalogacao)) : '&nbsp;', 'Operador de Pré-Catalogação'),
		);
        $this->setFields($fields);
        $this->labelWidth = '25';
        $this->setAlternate('#fff','#eee');
        $this->setBackgroundColor('#FFF');

        $numerodaobra = $this->obra->numeroDaObra;
        //var_dump($numerodaobra);

		$perms = $this->manager->getPerms();
		if ( $perms->checkAccess('bib_catalog_exclusao',A_ACCESS) )
		{
			$buttons = Array(
				new MButton('btnDuplicar', 'Duplicar Obra'),
				new MButton('btnExcluir', 'Excluir Obra'),
				new MButtonWindow('btnMarc', 'MARC', $MIOLO->GetActionURL($module = $module, 'marc', $this->idObra)),
                new MButton('btnAutor', 'Autor Secundário', $MIOLO->GetActionURL($module = $module , 'catalogacaoautorsecundario', $this->idObra)),

                                  
                //new MButtonWindow('btnAssunto', 'Assunto', $MIOLO->GetActionURL($module = $module , 'main:catalogacao:catalogacaoassunto', $this->idObra)),

                
                new MButton('btnAssunto', 'Assunto', $MIOLO->GetActionURL($module = $module , 'main:catalogacao:assunto', $numerodaobra)),

                //new MButtonWindow('btnAlteracao', 'Alterar Catalogacao', $MIOLO->GetActionURL($module = $module , 'main:catalogacao:catalogacaoalteracao',  $this->idObra)),
                new MButton('btnIncluirEtiqueta2', 'Incluir Exemplar'),
//btnPost
                new MButton('btnPost', 'Alterar Catalogação'),
                            

                                 

                
                                  
    //            new MButtonWindow('btnAssunto', 'Assunto', $MIOLO->GetActionURL($module = $module , 'main:catalogacao:assunto', $this->idObra)),
    
      //      new MButtonWindow('btnEditar', 'Editar Obra', $MIOLO->GetActionURL($module = $module , 'editarobra', $this->idObra)),
     
			);
		}
		else
		{
			$buttons = Array(
				new MButton('btnDuplicar', 'Duplicar Obra'),
				new MButtonWindow('btnMarc', 'MARC', $MIOLO->GetActionURL($module = $module, 'marc', $this->idObra)),
			);
		}

		$this->SetButtons($buttons);
	}

	function btnDuplicar_click()
    {
		global $MIOLO,$module,$action,$item;
		$this->setAlternate('','');
		$this->AddField(new MSpacer(1));
		$this->AddField(new MSeparator());
		$field = new MLabel('<font size=3 color=red><b>Atenção:</b></font><font size=2> Clicando no botão <font color=blue><b>"Confirma Duplicação"</b></font> os dados catalogados para a obra número <b>' . $this->obra->numeroDaObra . '</b> serão duplicados em uma nova obra.</font>');
		$this->AddField($field);
		$buttons = Array(
			new FormButton('btnCancelar', 'Cancelar', $MIOLO->GetActionURL($module, $action, $item)),
			new MButton('btnDuplicar2', 'Confirma Duplicação'),
		);
		$this->SetButtons($buttons);
		$this->SetButtonAttr('btnDuplicar','visible',false);
		$this->SetButtonAttr('btnExcluir','visible',false);
	}



    

                function btnIncluirEtiqueta2_click()
                {
                global $MIOLO,$module,$item;
                    $item = $this->getFieldValue('idobra');
                    if ($item == NULL)
                    {
                        $obra = $this->manager->getBusiness('biblioteca','obra');
                        $obra->getByNumero($this->getFieldValue('numero'));
          //              $item = $obra->idObra;
                        $item = $this->obra->numeroDaObra;

                    }
                    if ($item != NULL)
                    {
                    
       				 $goto = $this->manager->getActionURL('biblioteca','main:catalogacao:exemplar',$item);
        
                    $this->manager->getActionURL('biblioteca','main:catalogacao:catalogacaoetiqueta',$item);
                    $this->page->redirect($goto);
                    }
                }


                
                
	function btnDuplicar2_click()
    {
		global $MIOLO,$module,$action,$item;
		$aobra = $this->manager->getBusiness('biblioteca','obra',$this->idObra);
		try
		{
			$numNovaObra = $aobra->DuplicaObra();

			$MIOLO->Information("Dados da obra $aobra->numeroDaObra duplicados com sucesso.<br>Número da nova obra: " . $numNovaObra, $MIOLO->GetActionURL($module, $action, $item));
		}
		catch (Exception $e)
		{
			$MIOLO->Error($e->getMessage(), $MIOLO->GetActionURL($module, $action, $item));
		}
	}

	function btnExcluir_click()
    {
		global $MIOLO,$module,$action,$item;
		$this->setAlternate('','');
		$this->AddField(new MSpacer(1));
		$this->AddField(new MSeparator());
		$field = new MLabel('<font size=3 color=red><b>Atenção:</b></font><font size=2> Clicando no botão <font color=blue><b>"Confirma Exclusão"</b></font> a obra número <b>' . $this->obra->numeroDaObra . '</b> será excluída da base de dados.</font>');
		$this->AddField($field);
		$buttons = Array(
			new FormButton('btnCancelar', 'Cancelar', $MIOLO->GetActionURL($module, $action, $item)),
			new MButton('btnExcluir2', 'Confirma Exclusão'),
		);
		$this->SetButtons($buttons);
		$this->SetButtonAttr('btnDuplicar','visible',false);
		$this->SetButtonAttr('btnExcluir','visible',false);
	}

    function btnPost_click()
    {
        $item = $this->getFieldValue('idobra');
        if ($item == NULL)
        {
            $obra = $this->manager->getBusiness('biblioteca','obra');
            $obra->getByNumero($this->getFieldValue('numero'));
            $item = $obra->idObra;
        }
        if ($item != NULL)
        {
            $go = $this->manager->getActionURL('biblioteca','main:catalogacao:catalogacaoalteracao',$item);
            $this->page->redirect($go);
        }
    }

    
////new MButtonWindow('btnAlteracao', 'Alterar Catalogacao', $MIOLO->GetActionURL($module = $module , 'main:catalogacao:catalogacaoalteracao',  $this->idObra)),
    
    
	function btnExcluir2_click()
	{
		global $MIOLO,$module;
		$aobra = $this->manager->getBusiness('biblioteca','obra',$this->idObra);

		try
		{
			$aobra->DeleteObra();

			$MIOLO->Information("Obra $aobra->numeroDaObra excluída com sucesso.", $MIOLO->GetActionURL($module, $action, $item));
		}
		catch (Exception $e)
		{
			$MIOLO->Error($e->getMessage(), $MIOLO->GetActionURL($module, $action, $item));
		}
	}
}




/*
function btnIncluirEtiqueta_click()
{
    //$MIOLO->Information("A obra não possui exemplares.", $MIOLO->GetActionURL($module, $action, $item));
    

    $item = $this->getFieldValue('idobra');
    if ($item == NULL)
    {
        $obra = $this->manager->getBusiness('biblioteca','obra');
        $obra->getByNumero($this->getFieldValue('numero'));
        $item = $obra->idObra;
    }
    if ($item != NULL)
    {
        $temp = $item->numerodaobra;
        $aux = ListExemplar($temp);
        
        if ($aux != NULL)
        {
            $go = $this->manager->getActionURL('biblioteca','main:catalogacao:exemplar',$item);
        
            $this->manager->getActionURL('biblioteca','main:catalogacao:catalogacaoetiqueta',$item);
            $this->page->redirect($go);
    }
        
        if($aux == NULL)
        {
            global $MIOLO,$module,$action,$item;
            try
            {
                $MIOLO->Information("A obra não tem exemplares .<br> " , $MIOLO->GetActionURL($module, $action, $item));
            }
            catch (Exception $e)
            {
                $MIOLO->Error($e->getMessage(), $MIOLO->GetActionURL($module, $action, $item));
            }
        }
    
            
            

}
        



  */  


 // Inserir informações sobre ETIQUETA E SUBCAMPOS
  function btnIncluirrtesterEtiqueta_click()
{
    global $MIOLO,$module;

    $data = $this->GetData();
    $data->idobra = $this->objObra->GetNextIdObra();
    $data->numerodaobra = $this->objObra->GetNextNumeroObra();

        //já grava o 008 na pré-catalogação
                $ficha008 = date('ymd') . '                 r               d';

        try
        {
            $this->objObra->saveObra($data);

            $this->objObra->saveSubFicha($ficha008, '008');
            $msg = "Etiqueta " . $data->numerodaobra . " inserida com sucesso. Deseja agora inserir Subcampo?";


            $MIOLO->Prompt(Prompt::Question($msg,$MIOLO->GetActionURL($module,'main:catalogacao:catalogacao:catalogacaoobra:catalogacaofichaobra', $data->idobra, ''),$MIOLO->GetActionURL($module,'main:catalogacao:precatalogacao')));

            //var_dump($this->listURL);

            //$MIOLO->GetActionURL($module,'main:admin:autor', 'autor', '')
////$lookup->AddFilterField( new MButtonWindow('btnMarc', 'MARC', $MIOLO->GetActionURL($module = $module, 'marc', $this->idAutor)));
                   
            
        }
        catch (Exception $e)
        {
            $this->addError($e->getMessage());
        }
}



?>
