<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?
class frmMarc extends Form
{

	var $objObra;
	var $objGenero;
	var $objAutor;
	var $objAssunto;

    function frmMarc()  // construtor da Classe
    {
		// Título do Formulário
		$this->Form('MARC');

		//Chama o CreateFileds, etc.
		$this->EventHandler();

		// Botão "enviar" não aparece
		$this->defaultButton = false;

		//muda o tema para mostrar apenas area de content
		$this->manager->getTheme()->setLayout('popup');
	}
   
    function CreateFields()
    {
		global $MIOLO, $module, $item;

        
		$this->objObra = $MIOLO->GetBusiness($module,'obra');
		$this->objGenero = $MIOLO->GetBusiness($module,'genero');
		$this->objAutor = $MIOLO->GetBusiness($module,'autor');
		$this->objAssunto = $MIOLO->GetBusiness($module,'assunto');

      
        
		$camposfixos =  $this->objObra->getCamposFixosByIdobra($item);
		$material = $this->objObra->getMaterialByIdobra($item);
		$indicadores = $this->objObra->getIndicadoresByIdobra($item);
		$idautor = $this->objAutor->getIdAutorByObra($item);
		$idAssunto = $this->objAssunto->getIdAssuntoByObra($item);



		$linhas = array();
		$texto = '';
		$texto_ind = '';
		$indcerq = array(17,20,22,44,80,84,250,255,256,300,310,321,500,501,502,504,506,508,515,525,530,533,534,538,546,550,580,752,754,);
		
		//acrescenta os camposfixos no tableraw
		foreach($camposfixos as $c)
		{
			$linhas[] = array($c[0], '', str_replace(' ', '&nbsp;', $c[1]));
		}

		//material[$i] = e.tag, m.ocorrencia, m.subcampo, m.linha, m.conteudo
		
		
		for($i = 0; $i <= count($material); $i++)
       		 {
   
		if( ($material[$i][0] != $material[$i-1][0]) and ($i > 0))//mudou a tag e não é a primeira
		{
		  for ($j = 0; $j <= count($indcerq);$j++)
		  {
		  	if($material[$i-1][0] == $indcerq[$j])
		  	{
		  		 $texto_ind = '#&nbsp;#';
		  	 }

		  }
		
		  
		  if(($material[$i-1][0] == 100) || ($material[$i-1][0] == 110) || ($material[$i-1][0] == 111) || ($material[$i-1][0] == 130))
		  {
		    $indAutor = $this->objAutor->GetIndicadorById($idautor[0][0]);
		    $texto_ind = "{$indAutor->result[0][0]}&nbsp;{$indAutor->result[1][0]}";
		  }

		  if(($material[$i-1][0] == 600) || ($material[$i-1][0] == 610) || ($material[$i-1][0] == 611) || ($material[$i-1][0] == 630) || 	
		      ($material[$i-1][0] == 650) || ($material[$i-1][0] == 651) || ($material[$i-1][0] == 655))
		  {
		    $indAssunto = $this->objAssunto->getIndicadorById($idAssunto[0][0]);
    		    $texto_ind = "{$indAssunto->result[0][0]}&nbsp;{$indAssunto->result[1][0]}";
		  }
	                
              //  rever  $linhas[] = array($material[$i-1][0], $texto_ind, ucwords(strtolower($texto)));   ANTES ESTAVA ASSIM  * Só a primeira maiuscula = ucfirst
              
                $linhas[] = array($material[$i-1][0], ($texto_ind), ($texto));
				$texto = '';
				$texto_ind = '';
               
			}
			
			

			//se houver texto e (mudou a tag ou mudou a ocorrencia), quebra a linha
			if( ($texto != '') and (($material[$i][0] != $material[$i-1][0]) or ($material[$i][1] != $material[$i-1][1])) )
			{
               // $texto_ind .= ($material[$i][1]);
                $texto .= '';
                
			}
            
			//prepara os dados da linha (material)
			if($material[$i][0] == '902')//para genero, busca a descricao
			{
				$texto .= '$' . $material[$i][2] . ' ' . (strtolower($this->objGenero->GetByCodigo($material[$i][4])->descricao));
			}
			else
			{
                $texto .= '$' . ($material[$i][2]) . ' ' . ($material[$i][4]) . ' ';
			}
            
			//dados dos indicadores
			if($texto_ind == '')
			{
			//	$texto_ind = $this->PreparaIndicadores($material[$i][0], $indicadores, $material[$i][1]);
                			
            }
			else
			{
				if(($material[$i][0] != $material[$i-1][0]) or ($material[$i][1] != $material[$i-1][1]))
				{
                 	   $texto_ind .= "".$this->PreparaIndicadores($material[$i][0], $indicadores, $material[$i][1]);
				}
			}
          
		}
        
		$tabela = new MTableRaw('', $linhas);
		$tabela->SetAlternate(true);  
		$fields = Array(
			$tabela
		);
		// Insere os campos
		$this->SetFields($fields);
	}

	function PreparaIndicadores($tag, $indicadores, $ocorrencia)
	{
		$texto_ind = '';

		//indicadores[$i] = e.tag, i.ocorrencia, i.indicador, i.conteudo;
		if($indicadores)
		{
			foreach($indicadores as $i) //procura o indicador 1 da tag específica no array de indicadores da obra
			{
			
				if( ($i[0] == $tag) and ($i[1] == $ocorrencia) and ($i[2] == '1') )
				{
					if(trim($i[3]) == NULL) //se indicador for = ' ', transforma para #
						$texto_ind = ($i[3]);
					else
						$texto_ind = '#';
					break;
				}
			}
		}

		//preenche com espaço para o caso de não haver indicador 1
		if($texto_ind == '')
		{
			$texto_ind = '&nbsp;';
		}

		if($indicadores)
		{
			foreach($indicadores as $i) //procura o indicador 2 da tag específica no array de indicadores da obra
			{			
				if( ($i[0] == $tag) and ($i[1] == $ocorrencia) and ($i[2] == '2') )
				{
					if(trim($i[3]) == NULL) //se indicador for = ' ', transforma para #
						$texto_ind .= "&nbsp;" . ($i[3]);
						
						
						//$texto_ind .= ucfirst($texto_ind);
						
					else
						$texto_ind .= "&nbsp;#";
					break;
				}
			}
		}

		return $texto_ind;
	}
}
?>
