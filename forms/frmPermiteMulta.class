<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versÃ£o 2 da Licença.
 *
 * Este programa é distribuí­do na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título "LICENCA.txt",
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

?>
<?php

class frmPermiteMulta extends Form
{
	var $objPermiteMulta;
	
	function __construct()
    {  
		global $MIOLO, $action,$module;

		$this->Form('Permite Multa');
		$this->defaultButton = false;
		$this->EventHandler();		
	}
	
	function CreateFields()
	{
		global $MIOLO, $module, $self, $theme, $action, $page;

		$fields = Array(
		new Text('','Por favor, selecione o tipo de empréstimo adotado pela biblioteca:'),	
		new MRadioButton('radio', 'permitir', '', false, _M( 'Emprestimo com multa, em caso de atraso na devolução, será cobrado multa' ) ),
		new MRadioButton('radio', 'naopermitir', '', true, _M( 'Emprestimo sem multa, não será cobrado multa em caso de atraso' ) ),
		new MRadioButton('radio', 'penalidade', '', false, _M( 'Emprestimo sem multa, com penalidade em caso de atraso' ) ),
		new Text('txtSelPenalidade','Por favor, selecione o tipo de penalidade adotado pela biblioteca:'),	
		new MRadioButton('radioTipoPenalidade', 'penalidadeDiasFixo', '', false, _M( 'Dias de suspensão fixo' ) ),
		new MRadioButton('radioTipoPenalidade', 'penalidadeDiasPorAtraso', '', false, _M( 'Dias de suspensão por dia de atraso' ) ),
		new TextField('edtQntDias', '', 'Quantidade de dias', 2 , "Obrigatório")
		);
		
		/*Campos inicialmente invisíveis*/
		$this->SetFieldAttr('edtQntDias', 'visible', false);
		$this->SetFieldAttr('radioTipoPenalidade', 'visible', false);
		
		$this->SetFields( $fields );

		$buttons = Array(
		new FormButton('btnEscolher', 'Escolher')
		);
		$this->SetButtons( $buttons );

	}
	
	function btnEscolher_click()
	{
		global $MIOLO, $module, $self;

		$objPermiteMulta = $MIOLO->GetBusiness( $module, 'permitemulta' );
		$escolha = $this->GetFormValue( 'radio' );

		if ( $escolha == 'permitir' )
		{
			$objPermiteMulta->UpdatePermiteMulta( 'M' );
			$ok = $MIOLO->GetActionURL( $module,'main:admin' );
			$MIOLO->Information( "Atualização realizada com sucesso!", $ok );
		}
		elseif ( $escolha == 'naopermitir' )
		{
			$msg = "Todas as multas pendentes serão liquidadas! Confirmar escolha?";
			$gotoNo = $MIOLO->GetActionURL( $module, 'main:admin' );
			$gotoYes = $MIOLO->GetActionURL( $module, $self, 'N', Array('event'=>'UpdatePermMulta_click') );
			$MIOLO->Question( $msg, $gotoYes, $gotoNo );
		}
		elseif ( $escolha == 'penalidade' )
		{
			$this->SetFieldAttr('radioTipoPenalidade', 'visible', 'true');
			$this->SetFieldAttr('edtQntDias', 'visible', true);
			
			$msg = "Todas as multas pendentes serão liquidadas. Em caso de atraso, 
			o usuário ficará impossibilitado de realizar novos empréstimos durante um tempo
			proporcional ao seu atraso. Confirmar escolha?";
			$gotoNo = $MIOLO->GetActionURL( $module, 'main:admin' );
			$gotoYes = $MIOLO->GetActionURL( $module, $self, 'P', Array('event'=>'UpdatePermMultaQnt_click') );
			$MIOLO->Question( $msg, $gotoYes, $gotoNo );
		}
		
	}
	
	function UpdatePermMulta_click()
	{
		global $module, $item;

		$objPermiteMulta = $this->manager->GetBusiness( $module, 'permitemulta' );
		$objPermiteMulta->UpdatePermiteMulta( $item );
		$go = $this->manager->GetActionURL( $module, 'main:admin' );
		$this->manager->Information( "Atualização realizada com sucesso!", $go );
	}
	
	
	// Função para adicionar dados da penalidade (tipo da penalidade e quantidade de dias) adotada pela biblioteca
	function UpdatePermMultaQnt_click()
	{
		global $module, $item;

		$tipoPenalidade = $this->GetFormValue('radioTipoPenalidade');
		$qntDias = $this->GetFormValue('edtQntDias');

		switch($tipoPenalidade)
		{		
		 case 'penalidadeDiasFixo':
		 	$tipoPenalidade = 'DF';
		 	
		 case 'penalidadeDiasPorAtraso':
		 	$tipoPenalidade = 'DA';
		}	
						
		$objPermiteMulta = $this->manager->GetBusiness( $module, 'permitemulta' );
		$objPermiteMulta->UpdatePermiteMultaQnt( $item, $tipoPenalidade, $qntDias );
		$go = $this->manager->GetActionURL( $module, 'main:admin' );
		$this->manager->Information( "Atualização realizada com sucesso!", $go );
	}
}

?>
