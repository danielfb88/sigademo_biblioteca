<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?
class frmResUsuario extends Form
{
	var $objReserva;
	var $objSitReserva;
	var $objEstado;
	var $objEmprestimo;
	var $objUsuario;
	var $objPolitica;
	var $objExemplar;

	function __construct()
    {  
		global $MIOLO, $action;
		$this->Form('Reservas');
		$this->SetTitle(NULL);
		$this->EventHandler();
  		$this->defaultButton = false;

	}

    function CreateFields()
	{	
		global $MIOLO, $module, $self, $theme, $action, $page;

		//Busca idusuario
	    //$idusuario = $this->manager->GetLogin()->idkey;
		$usuario = $this->manager->getBusiness('common','usuario');
		$usuario->getByLogin($this->manager->GetLogin()->id);
		$idusuario = $usuario->idUsuario;
						
		//Datagrid de reservas atendidas
		$columns = array(
			new DataGridColumn('idreserva','Nº Reserva','center',true, '10%',true, null, false, false),
			new DataGridColumn('numerodotombo','Exemplar','center',true, '10%',true, null, false, false),
			new DataGridColumn('titulo','Título','left',false, '20%',true, null, false, false),
			new DataGridColumn('autor','Autor','left',false, '15%',true, null, false, false),
			new DataGridColumn('datahoradareserva','Data da Reserva','center',false, '15%',true, null, false, false),
			new DataGridColumn('datahoraentrada','Data da Entrada','center',false, '15%',true, null, false, false),
			new DataGridColumn('datahoralimite','Data Limite','center',false, '15%',true, null, false, false),
			);

		//Instancia o objeto emprestimo
	    $this->objReserva = $MIOLO->GetBusiness($module,'reserva');

		$query = $this->objReserva->ListReservasAtendidas($idusuario);
		
		$datagrid = new DataGrid2($query, $columns, '',0);

		//nome do usuario
		//$this->objUsuario = $MIOLO->GetBusiness($module,'usuario');
		//$usuario = $this->objUsuario->GetById($this->manager->GetLogin()->idkey);

		//$datagrid->SetTitle('Reservas Atendidas - ' . $usuario[0][1]);
		$datagrid->SetTitle('Reservas Atendidas - ' . $usuario->nome);
		$datagrid->SetLinkType('linkbutton');
		$datagrid->SetWidth('99%');
		$datagrid->SetClose($MIOLO->GetActionURL($module,'main'));

		$href_edit = $MIOLO->GetActionURL($module,$self,'%0%',Array('event'=>'btnCancelar:click'));
		$datagrid->AddActionText('Cancelar', 'Cancelar', $href_edit);


		//Datagrid de reservas solicitadas
		$columns2 = array(
			new DataGridColumn('idreserva','Nº Reserva','center',true, '10%',true, null, false, false),
			new DataGridColumn('numerodotombo','Exemplar','center',true, '10%',true, null, false, false),
			new DataGridColumn('titulo','Título','left',false, '30%',true, null, false, false),
			new DataGridColumn('autor','Autor','left',false, '20%',true, null, false, false),
			new DataGridColumn('datahoradareserva','Data da Reserva','center',false, '15%',true, null, false, false),
			new DataGridColumn('descricao','Posição','center',true, '15%',true, null, false, false),
			);

		$query2 = $this->objReserva->ListReservasSolicitadas($idusuario);
		
		$datagrid2 = new DataGrid2($query2, $columns2, '',0);
		//$datagrid2->SetTitle('Reservas Solicitadas - ' . $usuario[0][1]);
		$datagrid2->SetTitle('Reservas Solicitadas - ' . $usuario->nome);
		$datagrid2->SetLinkType('linkbutton');
		$datagrid2->SetWidth('99%');
		$datagrid2->SetClose($MIOLO->GetActionURL($module,'main'));

		$href_edit2 = $MIOLO->GetActionURL($module,$self,'%0%',Array('event'=>'btnCancelar:click'));
		$datagrid2->AddActionText('Cancelar', 'Cancelar', $href_edit2);

		//Tabelas com as mensagens exibidas ao usuário
		$table1 = new SimpleTable('st1', "cellspacing=0 cellpadding=5 align=center border=1 width=99%", 1, 2);
		$table1->SetCell(0,0,new Text('','<font size=2><font color=red><b>Atenção:</b></font> A validade das reservas é de 24h, contadas a partir do ato da devolução do item. Vencido este prazo, não havendo a efetivação do empréstimo, as reservas serão canceladas automaticamente.'));
		$table1->SetCell(0,1,new Text('','<font size=2>Clique sobre o link para CANCELAR a reserva.'));

		$table2 = new SimpleTable('st2', "cellspacing=0 cellpadding=5 align=center border=1 width=99%", 1, 1);
		$table2->SetCell(0,0,'<font size=2>Clique sobre o link para CANCELAR a reserva.');

		$fields = array(
						$datagrid,
						$table1,
						$datagrid2,
						$table2,
			);

		$this->SetFields($fields);

	}

	function btnCancelar_click()
	{ 
		global $MIOLO,$module,$item,$action;

		$this->objReserva = $MIOLO->GetBusiness($module,'reserva');

		$Situacao = $this->objReserva->GetSituacaoById($item);

		//monta array de comandos. os metodos de gravação a seguir apenas retornam as sqls. o array é executado ao final, em estado de transação
		$commands = array();

		$commands[] = $this->objReserva->SQLCancela($item);

		$this->objSitReserva = $MIOLO->GetBusiness($module,'situacaoreserva');
		$Atendida = $this->objSitReserva->GetIdByMnemonico('ATENDIDA');

		if($Situacao == $Atendida)
		{

			$Tombo = $this->objReserva->GetTomboByIdConfirmada($item);
			$ProximaReserva = $this->objReserva->GetProximaReserva($item,$Tombo);

			if ($ProximaReserva[0]){ //Existe uma reserva na fila

				$this->objEmprestimo = $MIOLO->GetBusiness($module,'emprestimo');
				$Emprestimo = $this->objEmprestimo->GetIdemprestimoByTombo($Tombo);

				if ($Emprestimo == null){ //Exemplar não está emprestado
					
					$this->objUsuario = $MIOLO->GetBusiness($module,'usuario');
					$this->objPolitica = $MIOLO->GetBusiness($module,'politica');

					$codProxReserva = $ProximaReserva[0];
					$codProxUsuario = $ProximaReserva[1];

					//Calcula datalimite
					$grupo = $this->objUsuario->GetGrupoByIdusuario($codProxUsuario);
					$dias = $this->objPolitica->GetDiasReserva($grupo);
					$DataHoraLimite = $this->objReserva->CalculaData($dias);

					$commands[] = $this->objReserva->SQLConfirmarReserva($codProxReserva, $Atendida, $DataHoraLimite);
				}
			}
			else{
				// Se não tem nenhuma reserva o exemplar estará disponivel.
				$this->objExemplar = $MIOLO->GetBusiness($module,'exemplar');
				$this->objEstado = $MIOLO->GetBusiness($module,'estado');
				$Disponivel = $this->objEstado->GetIdByMnemonico('DISPONIVEL');

				$commands[] = $this->objExemplar->SQLAlteraEstado($Tombo, $Disponivel);
			}
		}

		try
		{
			$this->objReserva->Execute($commands);
			$this->objReserva->Log(OP_UPD,"reserva $item cancelada pelo usuario");
			$MIOLO->Prompt(Prompt::Information("Reserva cancelada com sucesso.", $MIOLO->GetActionURL($module = $module, $action = $action)));
		}
		catch (Exception $e)
		{
			$this->addError($e->getMessage());
		}
	}
}
?>
