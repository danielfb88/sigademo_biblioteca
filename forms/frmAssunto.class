<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?php
/**
 * @package SIGA
 * @subpackage Biblioteca
 * @author SETEC/MEC
 */

class frmAssunto extends MForm
{
    public $subficha;
    public $ficha;
    public $etiqueta;
    public $idassunto;
    public $assunto;
    public $obra;
    public $ocorrencia;
    public $item;
    var $objAssunto;



    function __construct($item)
    {
        global $MIOLO, $module, $subficha;
        parent::__construct('Assuntos');
        $this->subficha->idficha= 1;
        $this->subficha->idsubficha=  5;
        $this->subficha->titulo=  "Campos Variáveis";
        $this->item = $item;
        $this->EventHandler();
        $this->SetClose($this->manager->GetActionURL($module, 'main:catalogacao'));
        $this->page->AddJsCode(file_get_contents(dirname(__FILE__) . '/../ui/js/mask.js'));
    }



    function CreateFields()
    {
        global $MIOLO, $module, $item, $action;

        /*Esse código existe para a viabilização da exclusão do assunto, com mensagem de confirmação, sem que seja necessário um form auxiliar.*/
        $conf=$this->GetFormValue('conf');
        if ($conf =='sim')
        {
            $data = $this->GetData();
            $this->objAssunto = $MIOLO->GetBusiness($module,'assunto');
            if (!($data->KeyAssunto))
            {
                $this->objAssunto->GetByCodigo($item);
                $data = $this->objAssunto->GetData();
            }
            $ok = $this->objAssunto->Delete($data->idassunto);
            if ( $ok )
            $MIOLO->Information("Registro deletado da base de dados", $MIOLO->GetActionURL($module,$action) );
            else
            $MIOLO->Error("As informações não foram deletadas", $MIOLO->GetActionURL($module,$action) );
        }
        /**********/

        $this->ficha = $this->manager->getBusiness('biblioteca','ficha');
        $this->etiqueta = $MIOLO->GetBusiness('biblioteca','etiqueta');
        $this->assunto = $MIOLO->GetBusiness('biblioteca','assunto');
        $this->obra = $MIOLO->GetBusiness('biblioteca','obra');

        $idficha = 1;
        $idsubficha = 5;

        $tagAssuntos = $this->etiqueta->ListAssuntos($idficha, $idsubficha)->result;

        $x = 0;
        while ($tagAssuntos[$x][0] <> null)
        {
            $resultTag[$x] = $tagAssuntos[$x][0];
            $x++;
        }

        $array = array(
        new MHiddenField('hidFieldList',''),
        new MHiddenField('idEtiqueta',''),
        new MSelection('selEtiqueta','','Etiqueta', $resultTag),
        array(
        new TextField('txtTag','','Etiqueta', 10),
        new MButton('btnChoose','Outra etiqueta'),
        ),
        );

        $this->setFields($array);

        $buttons = array(
        new MButton('btnEdit','Inserir'),
        new MLink('btnLinkAssunto','Relação de Assuntos',$this->manager->getActionURL($module,$self,'',array('event'=>'btnList:click'))),
        );
		
		$this->setFieldAttr('selEtiqueta','visible',false);
		$this->setFieldAttr('btnEdit','visible',false);
		$this->setFieldAttr('btnLinkAssunto','visible',false);
		

        $this->setFieldAttr('btnChoose','visible',false);
        $this->setFieldAttr('txtTag','visible',false);
        $this->defaultButton = false;
        $this->SetButtons($buttons);
    }



    function addInputFields($idEtiqueta, $ocorrencia,$tag)
    {
        global $item;
        $this->setFieldAttr('btnEdit','visible',false);
        $this->setFieldAttr('lblRep','visible',false);
        $this->setFieldAttr('btnChoose','visible',true);
        $this->setFieldAttr('txtTag','visible',true);
        $this->setFieldAttr('txtTag','readonly',true);
        $this->setFieldAttr('selEtiqueta','visible',false);
        $this->setFieldAttr('btnLinkAssunto','visible',false);
        $fList = '';

        $obj = new MDummy();
        $fields = new MHContainer();

        $indicadores = $this->etiqueta->getIndicadores($idEtiqueta);

        $listaIndicadores = array();

        foreach ($indicadores as $i=>$ind)
        {
            if ($ind != 0)
            {
                $obj->indicador = $i;
                $obj->idopcao = $this->etiqueta->getOpcaoAssunto('IN' . $i, $idEtiqueta);
                $field = $this->ficha->getInputFieldInd($this->subficha->idsubficha, $obj);
                $fList .= ($fList != '' ? ',' : '') . $field->getName();
                $field->formMode = 2;
                if ($item != null)
                {
                    $indicador = $this->assunto->getIndicadorById($item);
                    if (!$indicador->eof)
                    {
                        $field->setValue($indicador->result[--$i][0]);
                    }
                }
                $fields->addControl($field);
                $listaIndicadores[] = $field->getName();
            }
        }
        $this->addField($fields);

        for($i = 0; $i < count($listaIndicadores); $i++)
        {
            $this->AddValidator(new RequiredValidator($listaIndicadores[$i]));
        }

        $campo = $this->ficha->getCampo($this->subficha->idficha,$this->subficha->idsubficha, $idEtiqueta, $ocorrencia);

        while (! $campo->eof)
        {
            $obj = $campo->getRowObject();
            $field = $this->ficha->getInputFieldVarAssunto($this->subficha->idsubficha,$obj,$tag,$item);
            $fList .= ($fList != '' ? ',' : '') . $field->getName();
            $field->formMode = 2;
            if ($item != null)
            {
                $material = $this->assunto->getAssunto($item,$obj->subcampo,$idEtiqueta);
                if (!$material->eof)
                {
                    
                    if ($field->className == 'mmultitextfield3')
                    {
                        $array = $material->chunkResultMany(1,array(1,2),'');
                        $field->setCodeValue($array);
                    }
                    else
                    {
                        $field->setValue($material->fields('conteudo'));
                    }
                }
            }
            $this->addField($field);
            $campo->moveNext();
        }

        $this->setFieldValue('hidFieldList', $fList);
        $this->setFieldValue('idEtiqueta', $idEtiqueta);
        $this->setFieldValue('txtTag',$tag);
         
        $fNew = new MTextField('classificacao','','Classificação',10);
        if ($item != null)
        {
            $class = $this->assunto->getAssunto($item, 'a', $idEtiqueta);
            $obj = $campo->getRowObject();
            $fNew->setValue($class->result[0][3]);
        }

        
        $this->addField($fNew);

        if ($this->item)
        {
            $buttons = array(
            new MButton('btnUpdate', '<b>Atualizar</b>'),
            );
        }
        else
        {
            $buttons = array(
            new MButton('btnPost', '<b>Gravar</b>'),
            );
        }
        $this->SetButtons($buttons);
    }



    function btnEdit_click()
    {
        global $MIOLO, $module, $self, $theme, $action, $page,$ocorrencia,$item;

        if($item != NULL){
            $ok = $item;
        }
        else
        {
            $ok = $this->getFormValue('selEtiqueta');
        }
		
        if (($item == NULL) && ($ok == $item))
        {
            $MIOLO->Prompt(Prompt::Error("Por favor, selecione uma etiqueta.",$MIOLO->GetActionURL($module,$action)));

            //	$idassunto = $item;
            //	$ocorrencia = $this->assunto->GetNumAssunto($this->item);
            //	$idEtiqueta = $this->assunto->GetEtiquetaById($idassunto);
            //	$tag = $this->etiqueta->GetTagById($idEtiqueta);

        }elseif($ok != $item)
        {
            $pos = (int)$this->getFormValue('selEtiqueta');
            $tag = $this->selEtiqueta->getOption($pos);
            $idEtiqueta = $this->etiqueta->GetIdByTag($tag)->result[0][0];
            $etiqueta = $this->etiqueta->getById($idEtiqueta);
            $ocorrencia = $this->assunto->GetLastNumAssunto($idEtiqueta);
        }elseif($ok == $item)
        {
            $pos = (int)$this->getFormValue('selEtiqueta');
            //$tag = $this->selEtiqueta->getOption($pos);
            $idEtiqueta = $this->assunto->GetEtiquetaById($item);
            $etiqueta = $this->etiqueta->getById($idEtiqueta);
			$tag = $etiqueta->tag;
            $ocorrencia = $this->assunto->GetLastNumAssunto($idEtiqueta);
        }
        elseif($item == NULL)
        {

            $MIOLO->Prompt(Prompt::Error("Por favor, selecione uma etiqueta.",$MIOLO->GetActionURL($module,$action)));
             
            //  REVER
            //$idAutor = $item;
            //$ocorrencia = $this->objAutor->GetNumAutor($item);
            //$idEtiqueta = $this->objAutor->GetEtiquetaById($idAutor);
            //$tag = $this->objEtiqueta->GetTagById($idEtiqueta);
        }

        $this->addInputFields($idEtiqueta, $ocorrencia, $tag);

        $sub = $this->subficha->idsubficha;
        if($tag == '600')
        {
            if($this->GetFieldValue($sub . '_IND_2') == '')
            {
                $this->SetFieldValue($sub . '_IND_2', '4');
            }
        }
        if($tag == '610')
        {
            if($this->GetFieldValue($sub . '_IND_2') == '')
            {
                $this->SetFieldValue($sub . '_IND_2', '4');
            }
        }
        if($tag == '611')
        {
            if($this->GetFieldValue($sub . '_IND_2') == '')
            {
                $this->SetFieldValue($sub . '_IND_2', '4');
            }
        }
        if($tag == '630')
        {
            if($this->GetFieldValue($sub . '_IND_2') == '')
            {
                $this->SetFieldValue($sub . '_IND_2', '4');
            }
        }
        if($tag == '650')
        {
            if($this->GetFieldValue($sub . '_IND_1') == '')
            {
                $this->SetFieldValue($sub . '_IND_1', '#');
            }
            if($this->GetFieldValue($sub . '_IND_2') == '')
            {
                $this->SetFieldValue($sub . '_IND_2', '4');
            }
        }
        if($tag == '651')
        {
            if($this->GetFieldValue($sub . '_IND_2') == '')
            {
                $this->SetFieldValue($sub . '_IND_2', '4');

            }
        }
        $this->SetFieldValue('selEtiqueta',$tag);
    }



    function btnChoose_click()
    {
        $go = $this->manager->getActionURL('biblioteca','main:catalogacao:assunto');
        $this->page->redirect($go);
    }



    function btnPost_click()
    {
        global $MIOLO, $module;
        $this->assunto = $MIOLO->GetBusiness('biblioteca','assunto');

        $classificacao = $this->getFormValue('classificacao');
        $idEtiqueta = $this->getFieldValue('idEtiqueta');
        $tag = $this->getFieldValue('txtTag');
        $ocorrencia = $this->assunto->GetLastNumAssunto($idEtiqueta);
        $idAssunto = $this->assunto->LastNumeroAssunto();

        $etiqueta_vazia = true;
        $fields = explode(',',$this->getFieldValue('hidFieldList'));
        
        foreach($fields as $field)
        {
            $value[] = array($field, $this->page->request($field));
        }        

        $ok = $this->assunto->insereFields($value,$idAssunto,$ocorrencia,$classificacao,$this->subficha->idsubficha,$idEtiqueta);

        if ($ok)
        {
            $MIOLO->Information("Assunto inserido com sucesso na base de dados",$MIOLO->GetActionURL('biblioteca',"main:catalogacao:assunto"));
        }     
        
    }



    function btnList_click()
    {
        global $MIOLO, $module, $self, $theme, $action, $page, $object;

        $this->assunto = $MIOLO->GetBusiness('biblioteca','assunto');

        $columns = array(
        new DataGridColumn('idassunto','Código','left',true, '10%',true, null, true,true),
		new DataGridColumn('tag','Etiqueta','left',true, '10%',true, null, true,true),
        new DataGridColumn('conteudo','Conteúdo','left',true, '80%',true, null, true,true),
        //new DataGridColumn('classificacao','Classificação','center',true, '10%',true, null, true,true),
        );

        $href_datagrid = $MIOLO->GetActionURL($module,$self,'', Array('event'=>'btnList_click'));
        $page->SetAction($href_datagrid);
        $query = $this->assunto->ListAssuntoWithLink();

        $datagrid = new DataGrid2($query, $columns, $href_datagrid,20);
        $datagrid->SetTitle('Relação de assuntos');
        $datagrid->SetLinkType('linkbutton');
        $datagrid->SetWidth('100%');
        $href_edit = $MIOLO->GetActionURL($module,$self,'%0%',Array('event'=>'btnEdit:click'));
        $href_dele = $MIOLO->GetActionURL($module,$self,'%0%',Array('event'=>'btnExcluir:click'));

        //$datagrid->AddActionIcon('Editar', 'edit', $href_edit);
        //$datagrid->AddActionIcon('Excluir', 'delete.gif', $href_dele);
        //$datagrid->HeaderLink('new', 'Novo Registro', $MIOLO->GetActionURL($module,$self,'',Array('event'=>'')));

        $theme->InsertContent($datagrid);
    }


    function btnExcluir_click()
    {
        global $MIOLO, $module, $item, $action;


        $obraAssunto = $this->assunto->getObrasDoAssunto($item);
	
		if($obraAssunto)
		{
		  $MIOLO->Error("Este assunto não pode ser apagado porque existe(m) obra(s) relacionada(s) com a mesma.", $MIOLO->GetActionURL($module,'main:catalogacao:assunto&event=btnList:click'));
		}
        $action_sim = $MIOLO->GetActionURL('biblioteca','main:catalogacao:assunto&event',$item,array('conf'=>'sim'));
        $action_nao = $MIOLO->GetActionURL('biblioteca','main:catalogacao:assunto&event=btnList:click',$item,array('conf'=>'nao'));
        $MIOLO->Question("Tem certeza que deseja excluir o assunto? <i><font color=red>O assunto será excluído mesmo que haja vínculo com alguma obra.</font></i>",$action_sim,$action_nao);
    }


    function btnUpdate_click()
    {
        global $MIOLO, $module, $ocorrencia, $item;
        $y=0;
        $this->assunto = $MIOLO->GetBusiness('biblioteca','assunto');
        $classificacao = $this->getFormValue('classificacao');
        $idEtiqueta = $this->getFieldValue('idEtiqueta');
        $tag = $this->getFieldValue('txtTag');
        $ocorrencia = $this->assunto->GetNumAssunto($item);
        $idAssunto = $item;

        $fields = explode(',',$this->getFieldValue('hidFieldList'));
        foreach($fields as $field)
        {
            $value[] = array($field, $this->page->request($field));
        }

        $ok = $this->assunto->updateFields($value,$idAssunto,$ocorrencia,$classificacao,$this->subficha->idsubficha,$idEtiqueta);                                        

        if ($ok)
        {
            $MIOLO->Information("Assunto atualizado com sucesso na base de dados",$MIOLO->GetActionURL('biblioteca','main:catalogacao:assunto&event=btnList:click'));
        } 
                
    }
	
	function btnDetails_click()
	{
		global $MIOLO, $module, $item;
		
		$this->setFieldAttr('selEtiqueta','visible',false);
		$this->setFieldAttr('btnEdit','visible',false);
		$this->setFieldAttr('btnLinkAssunto','visible',false);		
		
		$assunto = $MIOLO->GetBusiness($module,'assunto');
		
		$isobra = MIOLO::_REQUEST('object');
		
		if($isobra)
			$items = $assunto->getIdAssuntoByObra($item);
		else
			$items[0][0] = $item;
			
		$relacao = array();
		
		foreach($items as $itemkey => $item)
		{
			$item = $item[0];
		
			$obras = $assunto->getObrasDoAssunto($item);		
		
			$idetiqueta = $assunto->GetEtiquetaById($item);			
			
			/*echo 'obra: <br>';
			echo '<pre>';
			var_dump($obras);
			echo '</pre>';*/
			
			foreach($obras as $obra => $value)
			{
				//echo 'entrou '.$value[1].' '.$value[2].' '.$idetiqueta.' <br>';
			
				$sql = new sql('m.conteudo,m.subcampo,m.linha','bt_material m','m.idobra = '.$value[1].' AND m.idetiqueta = '.$idetiqueta.' AND m.ocorrencia = '.$value[2],'m.subcampo,m.linha');
				
				$query = $assunto->Query($sql);
				
				/*echo 'materiais: <br>';
				echo '<pre>';
				print_r($query->result);
				echo '</pre>';*/

				$ass = '';
				foreach($query->result as $k => $v)
				{
					$ass .= $v[0];
					
					if(isset($query->result[$k+1]))
						$ass .= ' -- ';
				}
					
				if(!isset($relacao[$ass]))
					$relacao[$ass]['obras'] = array();
					
				array_push($relacao[$ass]['obras'],array('idobra' => $value[1], 'numerodaobra' => $value[3]));
			}
		}
		
		foreach($relacao as $k => $v)
		{
			$this->addField(new MTextLabel('lblAss',$k,'Assunto'));
			$this->addField(new MTextLabel('lblQtde',count($v['obras']),'Quantidade de obras'));
			
			$obras = '';
			foreach($v['obras'] as $k1 => $v1)
			{
				$obras .= '<a href="'.
					$MIOLO->GetActionURL('biblioteca','main:catalogacao:catalogacao&item='.$v1['idobra'])
					.'">'.$v1['numerodaobra'].'</a>';				
				if(isset($v['obras'][$k1+1]))
					$obras .= ', ';
			}
			
			$this->addField(new MTextLabel('lblAssObras',$obras,'Obras'));
			$this->addField(new MHr());
		}		
		
	}

}
?>
