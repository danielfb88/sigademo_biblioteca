<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?php
/**
 * @package SIGA
 * @subpackage Biblioteca
 * @author SETEC/MEC
 */

class frmExemplarItem extends Form
{
    var $objExemplar;
    var $objEstado;
    var $objRegraCirculacao;
    var $objUnidade;
    var $objColecao;
    var $objObra;
    var $numerodaobra;

    function frmExemplarItem()  // construtor da Classe
    {
        global $MIOLO,$module,$item;

        //Instancia objetos
        $this->objExemplar = $MIOLO->GetBusiness($module,'exemplar');
        $this->objEstado = $MIOLO->GetBusiness($module,'estado');
        $this->objRegraCirculacao = $MIOLO->GetBusiness($module,'regracirculacao');
        $this->objUnidade = $MIOLO->GetBusiness($module,'unidade');
        $this->objColecao = $MIOLO->GetBusiness($module,'colecao');
        $this->objObra = $MIOLO->GetBusiness($module,'obra');

        // Título do Formulário
        $this->Form('Catalogação de Exemplares');

        //Chama o CreateFileds, etc.
        $this->EventHandler();

        // Botão "enviar" não aparece
        $this->defaultButton = false;

        // Botão 'fechar', direcionando para o handler biblioteca/main/catalogacao
        $this->SetClose($this->manager->GetActionURL($module, 'main:catalogacao'));
    }
     
    function CreateFields()
    {
        global $MIOLO,$module,$action,$item;

        // Buscando dados para as caixas de seleção
        $optEstado = $this->objExemplar->ListEstado();
        $optRegra = $this->objExemplar->ListRegraCirculacao();
        $optUnidade = $this->objExemplar->ListUnidade();
        $optCol = $this->objColecao->ListColecao();

        foreach($optCol->result as $o)
        {
            $optColecao[] = array($o[0], $o[1] . ' -- ' . $o[2]);
        }

        $optCodigo['1'] = 'Code 128A';
        $optCodigo['2'] = 'Code 128B';
        $optCodigo['3'] = 'Code 128C';
        $optCodigo['4'] = 'Code 3 of 9';
        $optCodigo['5'] = 'Interleave 2 of 5';
        //$optCodigo['6'] = 'Free 3 of 9';
        //$optCodigo['7'] = 'Free 3 of 9 Extended';
        //$optCodigo['8'] = 'Id Automation 3 of 9';
         
        //Obtendo o id da obra atraves do idexemplar
        $data = $this->objExemplar->GetAllByCodigo($item);

        //Na exclusão o $item é o numerodaobra
        if ( $data == NULL )
        {
            $data = $this->objExemplar->GetObraByCodigo($item);
        }
        $idobra = $data->idobra;
        $obraIni = $data->numerodaobra;
        $this->numerodaobra = $obraIni;

        if(!is_numeric($this->numerodaobra))
        {
            $path= $this->manager->GetActionURL($module, $self);
            $MIOLO->Error("Número de obra inválido!",$path);
        }

        $ui = $MIOLO->getUI();
        $fields = Array (
        new TextField('edtNumerodaObra','','Número da Obra',10),
        new TextField('edtTitulo','','Título',60),
        new HiddenField('hidKeyObra'),
        new HiddenField('hidKeyExemplar'), // controla incluir/editar
         

        new TextField('edtAutor','','Autor',60),
        new TextField('edtNumerodoTombo','','Número do Tombo',20),
        new FormButton('btnProximoTombo', 'Gerar Tombo'),
        new TextField('edtVolume','','Volume',20),
        new TextField('edtPreco','','Preço',20),
        new TextField('edtNotaInterna','','Nota Interna',60),
        new TextField('edtNotaOPAC','','Nota OPAC',60),
        new TextField('edtNotaCirculacao','','Nota de Circulação',60),
        new TextField('edtNumeroInventario','','Número do Inventário',20),
         
        new Selection('selEstado','Disponível','Estado',$optEstado),
        new Selection('selRegraCirculacao','','Regra de Circulação',$optRegra),
        new Selection('selUnidade','','Unidade',$optUnidade),
        new Selection('selColecao','','Areas de conhecimento',$optColecao),
        new TextField('edtQtdExemplar','','Quantidade',10,'Digite a quatidade de exemplares'),
        new Selection('codigo','','Codigo de Barra',$optCodigo),
        new MTextLabel('espaco1','&nbsp;' , '&nbsp;','&nbsp;'),
        new MTextLabel('dica','&nbsp; -Selecione um código de barra e clique em imprimir- &nbsp;','&nbsp;'),
        new MTextLabel('espaco2','&nbsp;' , '&nbsp;','&nbsp;'),
        new ImageForm('imgCodigoBarra','Codigo',$ui->getImage($module,'codigo.png'),'' ),

        new MTextLabel('dica2','&nbsp; -Selecione os campos que devem ser exibidos na etiqueta - &nbsp;','&nbsp;'),
        new TextField('edtTags','','TAG', '10'," Tag-Subcampo. <b>Ex: 245-a</b>"),
        new MButton('btnMais','Adicionar Tags','',$ui->getImage($module,'cartao_mini.png')),
        new HiddenField('listaTags',''),
        new MultiLineField('mlinTags','','Tags Selecionadas',35,7, 35,"<b>Só é possível inserir até 4 tags</b>"),
        new MTextLabel('dica3','&nbsp; -Outros Campos - &nbsp;','&nbsp;'),
        new CheckBox('chkVolume',true,'Volume',false,'','Volume do exemplar' ),
        new CheckBox('chkNumeroTombo',true,'Número do Tombo',false,'','Número do tombo do exemplar' ),
        );

        $this->SetFields($fields);

        $this->SetFieldAttr('dica', 'visible', false);
        $this->SetFieldAttr('espaco1', 'visible', false);
        $this->SetFieldAttr('espaco2', 'visible', false);

        // Botões que aparecem no formulário
        $buttons = Array(
        new FormButton('btnEnviar', 'Incluir'),
        new FormButton('btnImprimir', 'Imprimir','PDF'),
        new FormButton('btnVoltar', 'Voltar', $MIOLO->GetActionURL($module = $module, $action = $action)),
        new FormButton('btnVoltarCatal', "Voltar para a catalogação da obra $obraIni", $MIOLO->GetActionURL($module, 'main:catalogacao:exemplar', $obraIni,Array('event'=>'btnVoltarCatal:click')) ),
        new FormButton('btnCriar', 'Gerar Etiquetas','PDF'),
        new MButton('btnLimpar', 'Nova Etiqueta'),               
        );

        $this->SetButtons($buttons);

        //Escondendo os campos
        $this->SetFieldAttr('codigo','visible',false);
        $this->SetFieldAttr('imgCodigoBarra','visible',false);
        $this->SetFieldAttr('dica2', 'visible', false);
        $this->SetFieldAttr('edtTags', 'visible', false);
        $this->SetFieldAttr('btnMais', 'visible', false);
        $this->SetFieldAttr('dica3', 'visible', false);
        $this->SetFieldAttr('chkVolume', 'visible', false);
        $this->SetFieldAttr('chkNumeroTombo', 'visible', false);
        $this->SetFieldAttr('mlinTags', 'visible', false);

        $this->SetbuttonAttr('btnEnviar','label','Salvar');
        $this->SetbuttonAttr('btnImprimir','visible',false);
        $this->SetbuttonAttr('btnCriar','visible',false);
        $this->SetbuttonAttr('btnLimpar','visible',false);
        
         
        if($obraIni == null)
        {
            $obraIni = $this->GetFormValue('edtObraIni');
        }

        ////Aqui vou sugerir um numero de tombo para a obra
        $this->objExemplar = $MIOLO->GetBusiness($module,'exemplar');
        $verok = $this->objExemplar->Ultimotombo();

        if($verok == NULL)
        {
            $ultimotombo == 2011; //retirar
            $this->SetFieldValue('edtNumerodoTombo',2011);
        }



		//$ok = $this->objExemplar->GetObraByCodigo($this->numerodaobra);

        //verifica se a obra existe
        if($data == NULL)
        {
            $path= $this->manager->GetActionURL($module,$self);
            $MIOLO->Error("Obra não encontrada!",$path);
        }
        else
        {
             
            $this->SetData($data);
             
            //Inserindo os campos
            $this->SetFieldAttr('edtObraIni', 'visible', false);
            $this->SetFieldAttr('edtExemplarIni', 'visible', false);
            $this->SetFieldAttr('ou', 'visible', false);
            $this->SetFieldAttr('dica', 'visible', false);

            $this->SetFieldAttr('edtNumerodaObra','visible',true);
            $this->SetFieldAttr('edtTitulo','visible',true);
            $this->SetFieldAttr('edtAutor','visible',true);
            $this->SetFieldAttr('edtNumerodoTombo','visible',true);
            $this->SetFieldAttr('edtVolume','visible',true);
            $this->SetFieldAttr('edtPreco','visible',true);
            $this->SetFieldAttr('edtNotaInterna','visible',true);
            $this->SetFieldAttr('edtNotaOPAC','visible',true);
            $this->SetFieldAttr('edtNotaCirculacao','visible',true);
            $this->SetFieldAttr('edtNumeroInventario','visible',true);
            $this->SetFieldAttr('selEstado','visible',true);
            $this->SetFieldAttr('selRegraCirculacao','visible',true);
            $this->SetFieldAttr('selUnidade','visible',true);
            $this->SetFieldAttr('selColecao','visible',true);
            $this->SetFieldAttr('edtQtdExemplar','visible',false);


		   //Valores default
		   //$this->SetFieldValue('selEstado',$this->objEstado->GetIdByMnemonico('DISPONIVEL'));
		   //$this->SetFieldValue('selRegraCirculacao',$this->objRegraCirculacao->GetIdByDescricao('LIVRO - 2 SEMANAS'));
		   //$this->SetFieldValue('selUnidade',$this->objUnidade->GetIdByMnemonico('BCE'));
		   //$this->SetFieldValue('selColecao',$this->objColecao->GetIdByMnemonico('N-E'));
		
            // Campos readonly
            $this->SetFieldAttr('edtAutor','readonly',true);
            $this->SetFieldAttr('edtNumerodaObra','readonly',true);
            $this->SetFieldAttr('edtTitulo','readonly',true);

            // Atributos dos botões
            $this->SetbuttonAttr('btnEnviar','visible',true);
            $this->SetbuttonAttr('btnVoltar','visible',true);
            $this->SetbuttonAttr('btnConsultar','visible',false);
            $this->SetbuttonAttr('btnImprimir','visible',false);
            $this->SetFieldAttr('btnProximoTombo','visible',false);
            
            $this->Grid();
             
            $this->page->onLoad("MIOLO_GetElementById('edtNumerodoTombo').focus();");

        }

    }


    // pega os dados que estão no formulário
    function GetData()
    {
        $data = new FormData();
        $data->numerodaobra = $this->GetFieldValue('edtNumerodaObra');
        $data->titulo = $this->GetFieldValue('edtTitulo');
        $data->idobra = $this->GetFieldValue('hidKeyObra');
        $data->idexemplar = $this->GetFieldValue('hidKeyExemplar');
        $data->idautor = $this->GetFieldValue('edtAutor');
        $data->numerodotombo = $this->GetFieldValue('edtNumerodoTombo');
        $data->volume = $this->GetFieldValue('edtVolume');
        $data->preco = $this->GetFieldValue('edtPreco');
        $data->notainterna = $this->GetFieldValue('edtNotaInterna');
        $data->notaopac = $this->GetFieldValue('edtNotaOPAC');
        $data->notacirculacao = $this->GetFieldValue('edtNotaCirculacao');
        $data->numinventario = $this->GetFieldValue('edtNumeroInventario');
        $data->idestado = $this->GetFieldValue('selEstado');
        $data->idregracirculacao = $this->GetFieldValue('selRegraCirculacao');
        $data->idunidade = $this->GetFieldValue('selUnidade');
        $data->idcolecao = $this->GetFieldValue('selColecao');
        $data->codigo = $this->GetFieldValue('codigo');
        $data->qtdexemplar = $this->GetFieldValue('edtQtdExemplar');
        return $data;
    }


    // usada para inserir valores no formulário
    function SetData($data)
    {
        $this->SetFieldValue('edtNumerodaObra',$data->numerodaobra);
        $this->SetFieldValue('edtTitulo',$data->titulo);
        $this->SetFieldValue('hidKeyObra',$data->idobra);
        $this->SetFieldValue('hidKeyExemplar',$data->idexemplar);
        //	$this->SetFieldValue('edtAutor',$data->idautor); //Trago o Autor pelo Nome
        $this->SetFieldValue('edtAutor',$data->autor);
        $this->SetFieldValue('edtNumerodoTombo',$data->numerodotombo);

        $this->SetFieldValue('edtVolume',$data->volume);
        $this->SetFieldValue('edtPreco',$data->preco);
        $this->SetFieldValue('edtNotaInterna',$data->notainterna);
        $this->SetFieldValue('edtNotaOPAC',$data->notaopac);
        $this->SetFieldValue('edtNotaCirculacao',$data->notacirculacao);
        $this->SetFieldValue('edtNumeroInventario',$data->numinventario);

        $this->SetFieldValue('selEstado',$data->idestado);
        $this->SetFieldValue('selRegraCirculacao',$data->idregracirculacao);
        $this->SetFieldValue('selUnidade',$data->idunidade);
        $this->SetFieldValue('selColecao',$data->idcolecao);

        //Seta os valores default
        if ($data->idestado == null)
        {
            $this->SetFieldValue('selEstado',$this->objEstado->GetIdByMnemonico('DISPONIVEL'));
        }
        if ($data->idregracirculacao == null)
        {
            $this->SetFieldValue('selRegraCirculacao',$this->objRegraCirculacao->GetIdByDescricao('LIVRO - 2 SEMANAS'));
        }
        if ($data->idunidade == null)
        {
            $this->SetFieldValue('selUnidade',$this->objUnidade->GetIdByMnemonico('BCE'));
        }
        if($data->idcolecao == null)
        {
            $this->SetFieldValue('selColecao',$this->objColecao->GetIdByMnemonico('N-E'));
        }
    }



    //INICIO DA ALTERAÇÃO (29-04-2011 )

    function verificaTomboExistente(){

        global $MIOLO, $module, $item, $action;

        $numTombo=$this->GetFieldValue('edtNumerodoTombo');
        $this->objExemplar = $MIOLO->GetBusiness($module,'exemplar');
        $obra = $this->objExemplar->GetIdByTombo($numTombo);

        if($obra){
            $MIOLO->Error("Número de tombo ja existente!",$path);
        }

    }
    //FINAL DA ALTERAÇÃO (29-04-2011 SEXTA-FEIRA)



    // consulta2 retorna do grid
    function btnConsulta2_click()
    {
        global $MIOLO,$item,$theme,$module;

        $this->numerodaobra = $this->GetFieldValue('edtNumerodaObra');
        $idexemplar = $item;

        if($idexemplar == null)
        {
            $path= $this->manager->GetActionURL($module,$self);
            $MIOLO->Error("Exemplar não encontrado!",$path);
        }

        $ok = $this->objExemplar->GetAllByCodigo($idexemplar);

        $this->SetData($ok);

        //Inserindo os campos
        $this->SetFieldAttr('edtObraIni', 'visible', false);
        $this->SetFieldAttr('edtExemplarIni', 'visible', false);
        $this->SetFieldAttr('ou', 'visible', false);
        $this->SetFieldAttr('dica', 'visible', false);

        $this->SetFieldAttr('edtNumerodaObra','visible',true);
        $this->SetFieldAttr('edtTitulo','visible',true);
        $this->SetFieldAttr('edtAutor','visible',true);
        $this->SetFieldAttr('edtNumerodoTombo','visible',true);
        $this->SetFieldAttr('edtVolume','visible',true);
        $this->SetFieldAttr('edtPreco','visible',true);
        $this->SetFieldAttr('edtNotaInterna','visible',true);
        $this->SetFieldAttr('edtNotaOPAC','visible',true);
        $this->SetFieldAttr('edtNotaCirculacao','visible',true);
        $this->SetFieldAttr('edtNumeroInventario','visible',true);
        $this->SetFieldAttr('selEstado','visible',true);
        $this->SetFieldAttr('selRegraCirculacao','visible',true);
        $this->SetFieldAttr('selUnidade','visible',true);
        $this->SetFieldAttr('selColecao','visible',true);
        $this->SetFieldAttr('edtQtdExemplar','visible',false);

        // Campos readonly
        $this->SetFieldAttr('edtAutor','readonly',true);
        $this->SetFieldAttr('edtNumerodaObra','readonly',true);
        $this->SetFieldAttr('edtTitulo','readonly',true);

        // Atributos dos botões
        $this->SetbuttonAttr('btnConsultar','visible',false);
        $this->SetbuttonAttr('btnVoltar','visible',true);
        $this->SetbuttonAttr('btnImprimir','visible',false);
        $this->SetFieldAttr('btnProximoTombo','visible',false);
        
        $perms = $this->manager->getPerms();
        if ( $perms->checkAccess('bib_catalogacao',A_ACCESS) )
        {
            $this->SetbuttonAttr('btnEnviar','visible',true);
            $this->SetbuttonAttr('btnEnviar','label','Salvar');
        }
    }

    // Inserir ou editar dados
    function btnEnviar_click()
    {
        global $MIOLO, $module, $item, $action;

        $QuantidadeExemplares = $this->GetFieldValue('edtQtdExemplar');
         
        if( (Form::GetFormValue('edtNumerodaObra')!='') and preg_match("/\D/", Form::GetFormValue('edtNumerodaObra')) )
        {
            $this->AddError('O campo Numero da Obra deve ser um numerico.');
        }
        elseif( (Form::GetFormValue('edtNumerodaObra') == 0) )
        {
            $this->AddError('O campo Numero da Obra deve ser cadastrado.');
        }
        elseif( (Form::GetFormValue('selEstado') == 0) )
        {
            $this->AddError('Selecione o campo Estado da Obra.');
        }
        elseif( (Form::GetFormValue('selRegraCirculacao') == 0) )
        {
            $this->AddError('Selecione o campo Regra de Circulacao.');
        }
        elseif( strlen(trim(Form::GetFormValue('selUnidade'))) == 0)
        {
            $this->AddError('Selecione o campo "Unidade".');
        }
        else
        {
            //VERIFICO SE A QUANTIDADE FOR PREENCHIDA(GERANDO EXEMPLARES), SE NÃO É APENAS ALTERAÇÃO DO EXEMPLAR PESQUISADO não precisa testar
            if ($QuantidadeExemplares =!  1)
            {
                $this->verificaTomboExistente();
            }


            $data = $this->GetData();

            if ($data->idexemplar)
            {

                try
                {
                    $ok = $this->objExemplar->Update($data);

                    $MIOLO->Information("Exemplar ". $data->numerodotombo . " atualizado com sucesso. ", $MIOLO->GetActionURL($module,$action,$data->idexemplar,array('event'=>'btnConsultar_click')) );
                }
                catch (Exception $e)
                {
                    $this->addError($e->getMessage());
                }
            }
            else
            {
                try
                {
                    if( strlen(trim(Form::GetFormValue('edtQtdExemplar'))) == 0 )
                    {
                        $this->AddError('O campo "Quantidade" deve ser informado.');
                    }
                    elseif( strlen(trim(Form::GetFormValue('edtQtdExemplar'))) != 0  and preg_match("/\D/", Form::GetFormValue('edtQtdExemplar')))
                    {
                        $this->AddError('O campo "Quantidade" deve ser num&eacute;rico.');
                    }
                    elseif($data->qtdexemplar != null)
                    {
                        if($data->qtdexemplar > 0)
                        {
                            // TESTO SE O TOMBO JÁ EXISTE NO SISTEMA
                            $tombo = $data->numerodotombo;
                            //$data = $this->objExemplar->thisTomboExists($tombo);
                             
                            if ($this->objExemplar->thisTomboExists($tombo))
                            {
                                $MIOLO->Information("Numero do Tombo  $data->numerodotombo já existente no sistema! ");
                            }
                            else
                            {
                                $this->objExemplar->InsertMany($data);
                                $tomboFinal = $data->numerodotombo+$data->qtdexemplar -1;
                                $MIOLO->Information("Exemplares $data->numerodotombo - $tomboFinal  incluídos com sucesso. ", $MIOLO->GetActionURL($module = $module, $action = $action, '', array('event'=>'btnConsultar_click', 'edtNumerodaObra'=>$data->numerodaobra)) );
                            }
                        }
                        else
                        {
                            $go = $this->manager->GetActionURL('biblioteca','main:catalogacao:exemplar',$data->idexemplar,null);
                            $MIOLO->Error('Quantidade de exemplares invalida', $go );
                        }
                    }
                }
                catch (Exception $e)
                {
                    $this->addError($e->getMessage());
                }
            }
        }
    }

    function btnExcluir_click()
    {
        global $MIOLO,$item,$theme,$module;

        $data = $this->objExemplar->GetAllByCodigo($item);

        try
        {
            $ok = $this->objExemplar->Delete($item);
            $MIOLO->Information("Exemplar ". $data->numerodotombo . " excluído com sucesso.", $MIOLO->GetActionURL($module,$action,$data->numerodaobra) );
        }
        catch (Exception $e)
        {
            $this->addError($e->getMessage());
        }
    }

    function Grid()
    {
        global $MIOLO, $module, $self, $theme, $action, $page, $action,$item  ;
         
        $columns = array(
        new DataGridColumn('numerodotombo','Numero do Tombo','center', true, '20%'),
        new DataGridColumn('descregra','Regra de Circula&ccedil;&atilde;o','center', true, '30%'),
        new DataGridColumn('descunidade','Unidade','center', true, '25%'),
        new DataGridColumn('descestado','Estado','center', true, '25%'),
        );

        $href_datagrid = $MIOLO->GetActionURL($module,$action);

        $query = $this->objExemplar->ListExemplar($this->numerodaobra);


        $datagrid = new DataGrid2($query, $columns, $href_datagrid,0);
        $datagrid->SetTitle('Relação de exemplares da obra ' . $this->numerodaobra);
        $datagrid->SetLinkType('linkbutton');
        $datagrid->SetWidth('99%');

        $perms = $this->manager->getPerms();
        if ( $perms->checkAccess('bib_catalogacao',A_ACCESS) )
        {
            $href_edit = $MIOLO->GetActionURL($module,$action,'%0%',Array('event'=>'btnConsulta2:click'));
            $datagrid->AddActionIcon('Editar', 'edit', $href_edit);
        }


        if ( $perms->checkAccess('bib_catalog_exclusao',A_ACCESS) )
        {
            $href_dele = $MIOLO->GetActionURL($module,$action,'%0%',Array('event'=>'btnExcluir:click'));
            $datagrid->AddActionIcon('Excluir', 'delete.gif', $href_dele);
            $href_trans = $MIOLO->GetActionURL($module,"main:catalogacao:exemplar:transferencia",'%0%',Array('numeroObra'=>$this->numerodaobra));
            $datagrid->AddActionText('alt', 'Transferir', $href_trans);

            //			$datagrid->AddActionIcon('Transferir', 'edit', $href_trans);
        }

        if ( $perms->checkAccess('bib_catalogacao',A_ACCESS) )
        {
            $href_barcode = $MIOLO->GetActionURL($module,$action,'%0%',Array('event'=>'btnCodigoBarra:click'));
            $datagrid->AddActionIcon('C&oacute;digo Barra', 'C&oacute;digo Barra', $href_barcode);
            $href_etiqueta = $MIOLO->GetActionURL($module,$action,'%0%',Array('event'=>'btnEtiqueta:click'));
            $datagrid->AddActionIcon('Etiqueta', 'Etiqueta', $href_etiqueta);
        }
        $this->AddField($datagrid);


        //  var_dump  ($this->AddField($datagrid));

    }


    function btnCodigoBarra_click()
    {

        global $MIOLO,$item,$theme,$module,$action;
        $idexemplar = $item;
        $exemplar = $this->objExemplar->GetAllByCodigo($idexemplar);
        $this->SetFieldValue('edtNumerodoTombo',$exemplar->numerodotombo);
        $this->SetFieldAttr('imgCodigoBarra','visible',false);
        $this->SetFieldAttr('edtObraIni', 'visible', false);
        $this->SetFieldAttr('edtExemplarIni', 'visible', false);
        $this->SetFieldAttr('ou', 'visible', false);
        $this->SetFieldAttr('dica', 'visible', true);
        $this->SetbuttonAttr('btnConsultar','visible',false);
        $this->SetbuttonAttr('btnImprimir','visible',true);
        $this->SetFieldAttr('codigo','visible',true);
        $this->SetFieldAttr('espaco1', 'visible', true);
        $this->SetFieldAttr('espaco2', 'visible', true);
        $this->SetFieldAttr('edtNumerodoTombo','visible',true);
         
        $this->SetFieldAttr('edtNumerodoTombo','readonly',true);
    }

    function btnImprimir_click()
    {
        global $MIOLO,$module;
        $data = $this->getData();

        $codigo = $MIOLO->getBusiness($module,'codigobarra');

        //Code128A
        if($data->codigo == 1)
        {
            $codigo->draw($data->numerodotombo,'code128');
        }

        //Code128B
        if($data->codigo == 2)
        {
            $codigo->draw($data->numerodotombo,'code128');
        }

        //Code128C
        if($data->codigo ==3)
        {
            $codigo->draw($data->numerodotombo,'code128');
        }

        //Code 3 of 9
        if($data->codigo == 4)
        {
            $codigo->draw($data->numerodotombo,'code39');
        }

        //Interleave 2 of 5
        if($data->codigo == 5)
        {
            $codigo->draw($data->numerodotombo,'int25');
        }

        $ui = $MIOLO->GetUI();
        $report = $ui->GetReport($module,'repCodigoBarra',$data);
        $report->Generate();
    }

    function btnEtiqueta_click()
    {
        global $MIOLO,$module,$action,$item;
        $this->SetFieldValue('hidKeyExemplar',$item);
        $this->SetFieldAttr('edtObraIni', 'visible', false);
        $this->SetFieldAttr('edtExemplarIni', 'visible', false);
        $this->SetFieldAttr('ou', 'visible', false);

        $this->SetbuttonAttr('btnConsultar','visible',false);

        $this->SetFieldAttr('dica2', 'visible', true);
        $this->SetFieldAttr('edtTags', 'visible', true);
        $this->SetFieldAttr('btnMais', 'visible', true);
        $this->SetFieldAttr('mlinTags', 'visible', true);
        $this->SetFieldAttr('dica3', 'visible', true);
        $this->SetFieldAttr('chkVolume', 'visible', true);
        $this->SetFieldAttr('chkNumeroTombo', 'visible', true);
        $this->SetFieldAttr('mlinTags','readonly',true);
         
        $this->SetbuttonAttr('btnCriar','visible',true);
        $this->SetbuttonAttr('btnLimpar','visible',true);
        $etiqueta = $MIOLO->getBusiness($module,'etiquetaLombada');
        $escolhaAnterior = $etiqueta->getTagEscolhidas();
        if($escolhaAnterior->result)
        {
            $value = '';
            $num = 2;
            $lista = $escolhaAnterior->result[0][0].'-'.$escolhaAnterior->result[0][1];
            $valorTag2 = $etiqueta->getDescricaoMarcByTag($escolhaAnterior->result[0][0]);
            $value .= "1- ". $valorTag2."\n";

            for($i = 1 ; $i<count($escolhaAnterior->result);$i++){
                $tag1 = $escolhaAnterior->result[$i][0];
                $lista .= '[-]'.$tag1.'-'.$escolhaAnterior->result[$i][1];
                $valorTag2 = $etiqueta->getDescricaoMarcByTag($tag1);
                $value .= "$num- ". $valorTag2."\n";
                $num++;
            }

            $this->SetFieldValue('mlinTags',$value);
            $this->SetFieldValue('listaTags',$lista);
        }
    }

    function btnLimpar_click()
    {
        global $MIOLO,$module;
        $etiqueta = $MIOLO->getBusiness($module,'etiquetaLombada');
        $etiqueta->delete();
        $this->SetFieldValue('listaTags','');
        $this->SetFieldValue('mlinTags','');
    }

    function getDataEtiqueta()
    {
        $data = new FormData();
        $data->listaTags = $this->GetFieldValue('listaTags');
        $data->NumeroTombo = $this->GetFormValue('chkNumeroTombo');
        $data->VolumeExemplar = $this->GetFormValue('chkVolume');
        $data->idexemplar = $this->GetFieldValue('hidKeyExemplar');
        return $data;
    }
     
    function btnMais_click()
    {
        global $MIOLO,$module,$item;

        $this->SetFieldAttr('edtObraIni', 'visible', false);
        $this->SetFieldAttr('edtExemplarIni', 'visible', false);
        $this->SetFieldAttr('ou', 'visible', false);

        $this->SetbuttonAttr('btnConsultar','visible',false);

        $this->SetbuttonAttr('btnCriar','visible',true);
        $this->SetbuttonAttr('btnLimpar','visible',true);
        $this->SetFieldAttr('dica2', 'visible', true);
        $this->SetFieldAttr('edtTags', 'visible', true);
        $this->SetFieldAttr('btnMais', 'visible', true);
        $this->SetFieldAttr('mlinTags', 'visible', true);
        $this->SetFieldAttr('dica3', 'visible', true);
        $this->SetFieldAttr('chkVolume', 'visible', true);
        $this->SetFieldAttr('chkNumeroTombo', 'visible', true);
        $this->SetFieldAttr('mlinTags','readonly',true);

        $tag = $this->GetFieldValue('edtTags');
        $idexemplar = $this->GetFieldValue('hidKeyExemplar');
         
        $this->SetFieldValue('edtTags','');
        $lista = $this->GetFieldValue('listaTags');
        $etiqueta = $MIOLO->getBusiness($module,'etiquetaLombada');
        $tags = explode('-',$tag);
        $valorTag = $etiqueta->getDescricaoMarcByTag($tags[0]);

        if($valorTag != null)
        {
            if($lista =='')
            {
                $lista = $tag;
            }
            else
            {
                $lista .= '[-]'.$tag;
            }
            $tagsEscolhidas = explode('[-]',$lista);
            $this->SetFieldValue('listaTags',$lista);
            if(count($tagsEscolhidas) <= 4)
            {
                $valor = '';
                $num = 1;
                foreach($tagsEscolhidas as $tag1){
                    $tags = explode('-',$tag1);
                    $valorTag2 = $etiqueta->getDescricaoMarcByTag($tags[0]);
                    $valor .= "$num- ". $valorTag2."\n";
                    $num++;
                }
                $this->SetFieldValue('mlinTags',$valor);
            }
            else
            {
                $go = $this->manager->GetActionURL('biblioteca','main:catalogacao:exemplar',$idexemplar,array('event'=>'btnEtiqueta:click'));
                $MIOLO->Error('Não é possível inserir mais do que 4 tags na etiqueta', $go );
            }
        }
        else
        {
            $go = $this->manager->GetActionURL('biblioteca','main:catalogacao:exemplar',$idexemplar,array('event'=>'btnEtiqueta:click'));
            $MIOLO->Error("A tag " . $tag . " não foi encontrada", $go );
        }
    }

    function btnCriar_click()
    {
        global $MIOLO,$module;
        $this->SetbuttonAttr('btnConsultar','visible',false);
        $data = $this->getDataEtiqueta();
        $etiqueta = $MIOLO->getBusiness($module,'etiquetaLombada');
        $etiqueta->delete();
        $tagsEscolhidas = explode('[-]',$data->listaTags);
        $idetiqueta = 1 ;
        foreach($tagsEscolhidas as $tag1)
        {
            $tags = explode('-',$tag1);
            $etiqueta->insert($idetiqueta,'t',$tags[0],$tags[1]);
            $idetiqueta++;
        }
        $ui = $MIOLO->GetUI();
        $report = $ui->GetReport($module,'repEtiquetasLombada',$data);
        $report->gerarParaUMExemplar(19,380,450,$data);
        $report->Generate();
    }

    function btnVoltarCatal_click()
    {
        global $MIOLO,$module;
        $this->SetbuttonAttr('btnVoltarCatal','visible',false);
        $perms = $this->manager->getPerms();
        if ( $perms->checkAccess('bib_catalogacao',A_ACCESS) )
        {
            $this->SetbuttonAttr('btnEnviar','visible',true);
            $this->SetbuttonAttr('btnEnviar','label','Incluir');
        }

        $this->SetFieldAttr('edtQtdExemplar','visible',true);
        $this->SetFieldAttr('btnProximoTombo','visible',true);
        $this->SetFieldValue('edtNumerodoTombo',$this->objExemplar->Ultimotombo() + 1);

    }
    
    function btnProximoTombo_click()
    {
        global $MIOLO,$item,$theme,$module;
         
        $item = $this->getFieldValue('idobra');
        $go = $this->manager->GetActionURL($module = $module, $action = $action, '', array('event'=>'btnConsultar_click', 'edtNumerodaObra'=> $this->GetFieldValue('edtNumerodaObra') )) ;
         
        $this->page->redirect($go);
    }

}
?>
