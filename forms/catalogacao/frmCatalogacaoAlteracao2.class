<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versÃ£o 2 da Licença.
 *
 * Este programa é distribuí­do na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título "LICENCA.txt",
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

?>
<?
class frmCatalogacaoAlteracao extends Form
{

    var $objObra;
    var $objSimples;

    public $obra;
    public $operacao;
    public $logOperacao;
    public $usuario;
    public $idObra;
    public $material;
    public $assunto;
    
    

    
    function frmCatalogacaoAlteracao()  // construtor da Classe
    {
        global $MIOLO,$module;
//    function __construct($data)
  
        $this->idObra = $data->idobra;
            
        //Instancia os objetos
             $this->objObra = $MIOLO->GetBusiness($module,'obra');
             $this->objSimples = $MIOLO->GetBusiness($module,'pesquisasimples');

             $ideditora = $this->obra->ideditora;
    //function __construct($item)
         parent::__construct('Alteração da Obra');
        //$this->SetClose($this->manager->GetActionURL($module, 'main:catalogacao'));
        $this->EventHandler();
    }



    function CreateFields()
    {
        global $MIOLO, $module, $item,$action;

        
        
        $this->obra = $this->manager->getBusiness('biblioteca','obra',$item);
           //$this->obra = $this->manager->getBusiness('biblioteca','obra');
                
  //      $this->obra = $this->manager->getBusiness('biblioteca','obra',$this->idObra);
           //$this->idObra = $data->idobra;
 

  if ($item != null)
  {
      $numerodaobra = $item;
      $idobra = $this->obra->GetIdByNumero($numerodaobra);
      $titulo = $this->obra->GetTituloByNumero($numerodaobra);
      $subtitulo = $this->obra->subtitulo;
  }

        //$titulo= $this->obra->titulo;
        $idobra= $this->obra->GetIdByNumero($item);
        $titulo = $this->obra->titulo;          

        $isbn =  $this->obra->isbn;
        $subtitulo = $this->obra->subtitulo;

        $tipoClass = array('CDD','CDU');
        $numero = $this->obra->numeroDaObra;

        $autor = $this->obra->autor;
        $idautor = $this->obra->idautor;
        var_dump($idautor);
        $edicao = $this->obra->edicao;
        $localpublicacao = $this->obra->localPublicacao;
        $editora = $this->obra->editora;
        $ideditora = $this->obra->ideditora;

       // var_dump($ideditora);
        
        $cutter  = $this->obra->cutter;
        $dataPublicacao  = $this->obra->dataPublicacao;
        $descFisica  = $this->obra->descFisica;
        $assunto  = $this->obra->assunto;

        //  TRATANDO CDU E CDD
        $cdu = $this->obra->cdu;
        $cdd = $this->obra->cdd;
        $cducdd      = '';
        $valorcducdd = '';


        if ($cdu != NULL  )
        {
            $cducdd = "CDU";
            $valorcducdd = $cdu;
        }
        else
        {
            if ($cdd != NULL  )
            {
                $cducdd = "CDD";
                $valorcducdd = $cdd;
            }
        }

        
    $fields = Array (
                     new MTextLabel('numero', ($numerodaobra != null) ? $numero : '&nbsp;', 'Número da Obra'),
                    new TextField('edtTitulo',($titulo != null) ? $titulo : '&nbsp;', 'Título',60),
                    new TextField('edtSubtitulo',($subtitulo != null) ? $subtitulo : '&nbsp;', 'Subtítulo',60),
                    new TextField('edtISBN',($isbn != null) ? $isbn : '&nbsp;','ISBN',20),
                    new MlookupFieldValue('lkpautor',$autor,'Autor',45,'Pesquisar ou inserir novo autor'),
                    new HiddenField('idautor'),
                    new TextField('edtCutter',$cutter,'Cutter',9),
                    new TextField('edtEdicao',$edicao,'Edição',20),
                    new LookupTextField('lkpLocalDePublicacao',$localpublicacao,'Local de Publicação',50,'Pesquisar'),
                    new MlookupFieldValue('lkpEditora',$editora,'Editora',58,''),
                //new TextField('edtEditora','','Editora',60),

                new TextField('edtDataDePublicacao',$dataPublicacao,'Data de Publicação',20,'Somente o ano. Ex.: 1998'),
                new TextField('edtDescFisica',$descFisica,'Descrição Física',20),
                new HiddenField('ideditora'),
        //Inclusão CDD e CDU - 30/06/2010
                new TextField('edtTipo',$cducdd,'Tipo Classificação',10),
                new TextField('edtCddCdu',$valorcducdd,'Classificação',30),
                new MTextLabel('edtAssunto',$assunto,'Assunto ',40),

                    );
    
    $this->SetFields($fields);


            //As 4 propriedades de um lookup

            // module = módulo usado

            // item = A funcao que chama no arquivo classes/lookup.class

            // event = O evento relacionado quando o usuário clica em "acao"

            // related = Os campos retornados após a ação

            $this->SetFieldAttr('lkpautor','module','biblioteca');
            $this->SetFieldAttr('lkpautor','item','autor');                // Metodo
//          $this->SetFieldAttr('lkpautor','event','btnConsulta:click');        

            $this->SetFieldAttr('lkpautor','event','filler');     

            $this->SetFieldAttr('lkpautor','related','idautor,lkpautor,edtCutter');

    

            //Lookup Local de publicacao de obra

            $this->SetFieldAttr('lkpLocalDePublicacao','module','common');
            $this->SetFieldAttr('lkpLocalDePublicacao','item','municipio');
            $this->SetFieldAttr('lkpLocalDePublicacao','event','filler');
            $this->SetFieldAttr('lkpLocalDePublicacao','related','idMunicipio,lkpLocalDePublicacao');


         // 4 propiedades do lookup

        $this->SetFieldAttr('lkpEditora','module','biblioteca');
         $this->SetFieldAttr('lkpEditora','item','editora');
         $this->SetFieldAttr('lkpEditora','event','filler');
//            $this->SetFieldAttr('lkpEditora','event','btnConsulta:click');

            $this->SetFieldAttr('lkpEditora','related', 'ideditora,lkpEditora');




            // Insere os campos

                    $this->SetFields($fields);


            



            // Botões Do formulário 

                    $buttons = Array(
                                     new FormButton('btnAlterar', 'Alterar'),
                //-> 06/07/2010  RETIRADO BOTÃO POIS O MESMO ESTARÁ NO LOOKUP

                // new MButtonWindow('btnAutor', 'Novo Autor', $MIOLO->GetActionURL($module,'main:admin:autor', 'autor', '')),

                                    );
           

                //Comentado dia 02/06/2010 SOLICITADO QUE SE PERMITA CADASTRAR SEM AUTOR

                   //$this->AddValidator(new RequiredValidator('lkpautor'));

           $this->AddValidator(new RequiredValidator('edtCutter'));
           $this->AddValidator(new RequiredValidator('lkpEditora'));
            //Insere os Botões

                    $this->SetButtons($buttons);


            //Definindo o foco

                    if (!($this->GetFieldValue('edtTitulo')))
            {
                $this->page->onLoad("MIOLO_GetElementById('edtTitulo').focus();");
            }



    }
//}



function GetData()
{
    $data = new FormData();

       if  ($this->GetFieldValue('idautor') == NULL)
        {
            $data->idautor = $autor;
        }
        else
        {
            //$data->idautor = $this->GetFieldValue('idautor');
            $data->idautor = ($this->obra->idautor);
        }
        $data->idautor = ($this->obra->idautor);
        var_dump($this->obra->idautor);
        var_dump($idautor);


        $data->cutter = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('edtCutter')));
        $data->titulo = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('edtTitulo')));
        $data->subtitulo = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('edtSubtitulo')));
        $data->edicao = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('edtEdicao')));

        $data->localdepublicacao = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('lkpLocalDePublicacao')));
        //$data->editora = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('lkpEditora')));
        
  

        $data->datadepublicacao = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('edtDataDePublicacao')));

        $data->descfisica = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('edtDescFisica')));

        $data->edicao = eregi_replace("[ªº°]","",$data->edicao);
  //Inclusão CDD e CDU

         // $data->keytipo = $this->objSimples->$this->GetFieldValue('selClass');
          

  //  Preenche o Tipo de Classificação CDD ou CDU   01/07/2010

  $data->idgenero = 1;   // rever
  $data->keygenero = 1;   // rever
  $data->cdu = $this->GetFieldValue('edtCddCdu');
  $data->cdd = $this->GetFieldValue('edtCddCdu');
  $data->isbn = $this->GetFieldValue('edtISBN');
  //var_dump($this->GetFieldValue('ideditora'));
  $data->ideditora = ($this->obra->ideditora);
  
          
  return $data;
}


// usada para inserir valores no formulário

        function SetData($data)
{
        $this->SetFieldValue('edtCutter',$data->cutter);
        $this->SetFieldValue('idautor',$data->idautor);     //
        $this->SetFieldValue('ideditora',$data->ideditora);
        $this->SetFieldValue('lkpEditora',$data->descricao);
        $this->SetFieldValue('edtISBN',$data->isbn);

        
        
}



    // Alterar dados
            
      function btnAlterar_click()
{
    global $MIOLO,$module;

    $data = $this->GetData();
    var_dump($data->idobra);
    $data->idobra = $this->objObra->GetNextIdObra();
    $data->numerodaobra = $this->objObra->GetNextNumeroObra();

        //já grava o 008 na pré-catalogação
                $ficha008 = date('ymd') . '                 r               d';

        
        try
        {
            $this->objObra->saveObra($data);

            $this->objObra->saveSubFicha($ficha008, '008');
            $msg = "Obra " . $data->numerodaobra . " Obra alterada com sucesso. Deseja voltar para Catalogação?";


            $MIOLO->Prompt(Prompt::Question($msg,$MIOLO->GetActionURL($module,'main:catalogacao:catalogacao:catalogacaoobra:catalogacaofichaobra', $data->idobra, ''),$this->listURL));

            //var_dump($this->listURL);

            //$MIOLO->GetActionURL($module,'main:admin:autor', 'autor', '')
////$lookup->AddFilterField( new MButtonWindow('btnMarc', 'MARC', $MIOLO->GetActionURL($module = $module, 'marc', $this->idAutor)));
                   
            
        }
        catch (Exception $e)
        {
            $this->addError($e->getMessage());
        }


}




    
}
?>
