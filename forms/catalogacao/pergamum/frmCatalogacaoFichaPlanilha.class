<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?php
/**
* @package SIGA
* @subpackage Biblioteca
* @author SETEC/MEC
*/

class frmCatalogacaoFichaPlanilha extends MForm
{
    private $idObra;
    private $objObra;

    function __construct($idObra)
    {
        parent::__construct('Planilha');
        $this->EventHandler();
        $this->idObra = $idObra;    
        // Botão 'fechar', direcionando para o handler biblioteca/main/catalogacao
        $this->SetClose($this->manager->GetActionURL($module, 'main:catalogacao'));
    }
    
    function CreateFields()
    {
        global $MIOLO, $module, $item;
        $this->idObra = $item;
        $this->objObra = $MIOLO->GetBusiness($module,'obra');
        $fields = array(
            new MTextLabel('lblPlanilha', "<b>Selecione uma obra para ser Cadastrada.</b>"),
            
        ); 
        $this->SetFields($fields);
        if($item != null ){
            $this->SetFieldAttr('lblPlanilha','visible',false);
            $this->objObra->GetById($item);
            $idGenero = $this->objObra->idGenero;
            $array = $this->objObra->GetSubCamposByGenero($idGenero);
            $camposFixos = $this->objObra->getCamposFixosByIdobra($item);
            $camposVar = $this->objObra->getMaterialByIdobra($item);
            if($array->result != null){
                foreach($array->result as $subcampo){
                    if($subcampo[0]< '010'){
                        $data = $this->buscaCampoDescricaoFixo($subcampo[0],$camposFixos);
                        $this->addField(new MTextField("txt$subcampo[0]",$data,$subcampo[0].' '.$subcampo[2],35));
                    }else{
                        $data = $this->buscaCampoDescricaoVar($subcampo[0],$subcampo[1],$camposVar);
                        $this->addField(new MTextField("txt$subcampo[0]-$subcampo[1]",$data,$subcampo[0].' -'.$subcampo[2].' $'.$subcampo[1],35));
                    }
                }
                $this->addButton(new FormButton('btnAtualizarAcervo2', 'Atualizar Acervo'));
            }
        }
    }
    
    function buscaCampoDescricaoFixo($campo, $array){
        $data = null;
        foreach($array as $fixo){
            if($fixo[0] == $campo){
                $data = $fixo[1];
                break;
            }
        }
        return $data;
    }
    
    function buscaCampoDescricaoVar($campo, $subcampo, $array){
        $data = null;
        foreach($array as $var){
            if(($var[0] == $campo)&&($var[1] == '1')&&($var[2]== $subcampo)){
                $data = $var[4];
                break;
            }
        }
        return $data;
    }
    
    function GetData(){
        
        $idGenero = $this->objObra->idGenero;
        $array = $this->objObra->GetSubCamposByGenero($idGenero);
        $data = array();
        
        foreach($array->result as $subcampo){
            if($subcampo[0]<'010'){
                $data[] = array($subcampo[0],$this->GetFieldValue("txt$subcampo[0]"));
            }else{
                $data[] = array($subcampo[0],$subcampo[1],$this->GetFieldValue("txt$subcampo[0]-$subcampo[1]"));
            }
        }
        return $data;
        
    }
    function btnAtualizarAcervo2_click(){
        global $MIOLO,$module, $item;
        $data = $this->GetData();
        foreach($data as $campo){
           if($campo[0]<'010'){
              $this->objObra->saveSubFicha($campo[1],$campo[0]);
           }else{
              $objEtiqueta = $MIOLO->GetBusiness($module,'etiqueta');
              $objEtiqueta->GetByTag($campo[0]);  
              //Salva Material
              $this->objObra->saveMaterial($objEtiqueta->idEtiqueta,'1',$campo[1],'1',$campo[2],'1');
           }
        }
        $go = $this->manager->getActionURL('biblioteca','main:catalogacao:catalogacaoPergamum',$item,Array('event'=>'AtualizarAcervo'));
        $this->page->redirect($go);
    }
 
}

?>