<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versÃ£o 2 da Licença.
 *
 * Este programa é distribuí­do na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título "LICENCA.txt",
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */

?>
<?
class frmCatalogacaoAlteracao extends MFormAjax
{

    var $objObra;
    var $objSimples;
    var $objAutor;

    public $obra;
    public $operacao;
    public $logOperacao;
    public $usuario;
    public $idObra;
    public $material;
    public $assunto;



    function __construct()  // construtor da Classe
    {
        global $MIOLO,$module;


        $this->idObra = $data->idobra;
        //Instancia os objetos
        $this->objObra = $MIOLO->GetBusiness($module,'obra');
        $this->objAutor = $MIOLO->GetBusiness($module,'autor');
        $this->objSimples = $MIOLO->GetBusiness($module,'pesquisasimples');

        $ideditora = $this->obra->ideditora;

        parent::__construct('Alteração da Obra');
        $this->EventHandler();
        $this->SetClose($this->manager->GetActionURL($module, 'main:catalogacao'));
        
        $this->page->AddJsCode(file_get_contents(dirname(__FILE__) . '/../js/frmPreCatalogacao.js'));     

    }



    function CreateFields()
    {
        global $MIOLO, $module, $item,$action;


        $this->obra = $this->manager->getBusiness('biblioteca','obra',$item);

        $titulo = $this->obra->titulo;
        $numerodaobra = $this->obra->numeroDaObra;
        $isbn =  $this->obra->isbn;
        $subtitulo = $this->obra->subtitulo;

        $tipoClass = array('CDD','CDU');
        $numero = $this->obra->numeroDaObra;

        $autor = $this->obra->autor;
        $idautor = $this->obra->idautor;
        $edicao = $this->obra->edicao;
        $localpublicacao = $this->obra->localPublicacao;
        $editora = $this->obra->editora;
        $ideditora = $this->obra->ideditora;

        $cutter  = $this->obra->cutter;
        $dataPublicacao  = $this->obra->dataPublicacao;
        $descFisica  = $this->obra->descFisica;

        //Concatenação dos Assuntos da Obra , caso existam mais de uma ocorrência
         
        $assuntosArray = array();
        $obra =   $this->obra->idObra;

        $assuntos = $this->obra->GetAssuntoObra($obra);
        if($assuntos != null){
            foreach($this->obra->GetAssuntoObra($obra) as $a){
                $assuntosArray[] = $a[0];
            }

            $assunto = implode(", " , $assuntosArray); //separa todos os assuntos da obra por virgula
        }else{
            $assunto = null;
        }
         

        //  TRATANDO CDU E CDD
        $cdu = $this->obra->cdu;
        $cdd = $this->obra->cdd;
        $cducdd      = '';
        $valorcducdd = '';

        $aa =0;
        if ($cdu != NULL  )
        {
            $cducdd = "CDU";
            $valorcducdd = $cdu;
            $aa=1;
        }
        else
        {
            if ($cdd != NULL  )
            {
                $cducdd = "CDD";
                $valorcducdd = $cdd;

            }
        }

        $url = $this->manager->getActionUrl('biblioteca','ajaxhandler');
        $fields = Array (
        new MTextLabel('numero', $numero , 'Número da Obra'),
        new MHiddenField('hidFieldList',''),
        new MHiddenField('idassunto',''),
        new MHiddenField('ocorrencia',''),
        new MHiddenField('idetiqueta',''),
        new HiddenField('idobra'),
        new TextField('edtTitulo',$titulo , 'Título',60),
        new TextField('edtSubtitulo', $subtitulo , 'Subtítulo',60),
        new TextField('edtCutter',$cutter,'Cutter',6),
        new MButton('bntGeraCutter','Gerar Cutter',"buscaCutter('$url','lkpautor','edtTitulo','idobra');"),
        new TextField('edtISBN',$isbn,'ISBN',20),
        new LookupTextField('lkpautor',$autor,'Autor',45,'Pesquisar ou inserir novo autor'),
        new HiddenField('idautor'),
        new TextField('edtEdicao',$edicao,'Edição',20),
        new MlookupFieldValue('lkpEditora',$editora,'Editora',58,''),        
        new LookupTextField('lkpLocalDePublicacao',$localpublicacao,'Local de Publicação',50,'Pesquisar'),        
        new TextField('edtDataDePublicacao',$dataPublicacao,'Data de Publicação',10,'Somente o ano. Ex.: 2012'),
        new TextField('edtDescFisica',$descFisica,'Descrição Física',20),
        new HiddenField('ideditora'),
        new Selection('edtTipo','','Tipo Classificação',array('CDD','CDU')),
        new TextField('edtCddCdu',$valorcducdd,'Classificação',30),
        new MLookupFieldValue('lkpassunto','','Assunto',45,'Pesquisar Assunto'),
        new FormButton('btnAddAssunto', 'Adicionar Assunto'),
        );
         

        $this->SetFields($fields);        

        $this->edtTitulo->addAttribute("onChange","buscaCutter('$url','lkpautor','edtTitulo','idobra');");
        $this->gridAssuntos();

        $this->SetFieldValue('idobra',$this->obra->idObra);
        $this->SetFieldValue('idautor',$this->obra->idautor);
        $this->SetFieldValue('ideditora',$ideditora);
        $this->SetFieldValue('edtTipo',$aa);
        //As 4 propriedades de um lookup
        // module = módulo usado
        // item = A funcao que chama no arquivo classes/lookup.class
        // event = O evento relacionado quando o usuário clica em "acao"
        // related = Os campos retornados após a ação

        $this->SetFieldAttr('lkpautor','module','biblioteca');
        $this->SetFieldAttr('lkpautor','item','autor');                // Metodo
        $this->SetFieldAttr('lkpautor','event','filler');
        $this->SetFieldAttr('lkpautor','related','idautor,lkpautor');

        //Lookup Local de publicacao de obra
        $this->SetFieldAttr('lkpLocalDePublicacao','module','common');
        $this->SetFieldAttr('lkpLocalDePublicacao','item','municipio');
        $this->SetFieldAttr('lkpLocalDePublicacao','event','filler');
        $this->SetFieldAttr('lkpLocalDePublicacao','related','idMunicipio,lkpLocalDePublicacao');


        // 4 propiedades do lookup
        $this->SetFieldAttr('lkpEditora','module','biblioteca');
        $this->SetFieldAttr('lkpEditora','item','editora');
        $this->SetFieldAttr('lkpEditora','event','filler');
        $this->SetFieldAttr('lkpEditora','related', 'ideditora,lkpEditora');

        //Prorpiedades Lookup Assunto
        $this->SetFieldAttr('lkpassunto','module','biblioteca');
        $this->SetFieldAttr('lkpassunto','item','assunto');
        $this->SetFieldAttr('lkpassunto','event','filler');
        $this->SetFieldAttr('lkpassunto','related','idassunto,lkpassunto,ocorrencia,idetiqueta');
        $this->SetFieldAttr('lkpassunto','filter','lkpassunto');

        // Botões Do formulário
        $buttons = Array(
        new FormButton('btnAlterar', 'Alterar'),
        );

        $validators = array(
        new MRequiredValidator('edtISBN'),
        new MRequiredValidator('edtTitulo'),
        new MRequiredValidator('lkpEditora'),
        new MRequiredValidator('lkpLocalDePublicacao'),
        new MRequiredValidator('edtDataDePublicacao'),
        new MRequiredValidator('edtDescFisica'),
        new RequiredValidator('edtTipo','Tipo de classificação',15),
        new MRequiredValidator('edtCddCdu'),
        );
        $this->SetValidators($validators);

        //Insere os Botões
        $this->SetButtons($buttons);


        //Definindo o foco
        if (!($this->GetFieldValue('edtTitulo')))
        {
            $this->page->onLoad("MIOLO_GetElementById('edtTitulo').focus();");
        }
    }

    function GetData()
    {
        $data = new FormData();
        if($this->GetFieldValue('lkpautor')==''){
            $data->idautor = null;
        }else{
            $data->idautor = $this->GetFieldValue('idautor');
        }
        $data->autor = $this->GetFieldValue('lkpautor');
        $data->idobra = $this->GetFieldValue('idobra');
        $data->cutter = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('edtCutter')));
        $data->titulo = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('edtTitulo')));
        $data->subtitulo = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('edtSubtitulo')));
        $data->edicao = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('edtEdicao')));

        $data->localdepublicacao = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('lkpLocalDePublicacao')));
        $data->datadepublicacao = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('edtDataDePublicacao')));

        $data->descfisica = trim($this->objSimples->RetirarCaracteresEspeciais($this->GetFieldValue('edtDescFisica')));

        $data->edicao = eregi_replace("[ªº°]","",$data->edicao);
        //Inclusão CDD e CDU
        // $data->keytipo = $this->objSimples->$this->GetFieldValue('selClass');
        //  Preenche o Tipo de Classificação CDD ou CDU   01/07/2010
        $data->idgenero = 1;   // rever
        $data->tipoclassificacao = $this->GetFieldValue('edtTipo');
        $data->cdu = $this->GetFieldValue('edtCddCdu');
        $data->cdd = $this->GetFieldValue('edtCddCdu');
        $data->isbn = $this->GetFieldValue('edtISBN');
        $data->ideditora = ($this->GetFieldValue('ideditora'));
        //$data->assunto = $this->GetFieldValue('edtassunto');
        // $data->assunto = $this->GetFieldValue('lkpAssunto');

        return $data;
    }

    // usada para inserir valores no formulário
    function SetData($data)
    {
        $this->SetFieldValue('edtCutter',$data->cutter);
        $this->SetFieldValue('idautor',$data->idautor);
        $this->SetFieldValue('ideditora',$data->ideditora);
        $this->SetFieldValue('lkpEditora',$data->descricao);
        $this->SetFieldValue('edtISBN',$data->isbn);
    }

    // Alterar dados
    function btnAlterar_click()
    {
        global $MIOLO,$module;

        $data = $this->GetData();
        $this->obra = $this->manager->getBusiness('biblioteca','obra',$item);
        //já grava o 008 na pré-catalogação
        $ficha008 = date('ymd') . '                 r               d';
        try
        {
            $this->objObra->updateObra($data);
            if ($data->idautor != NULL)
            {
                // REVER--> DANDO ERRO        	$ocorrencia = $this->GetFieldValue('ocorrencia');
                //			$idetiqueta = $this->objAutor->GetEtiquetaById($data->idautor);
                //    	$this->objAutor->saveAutorObra($data->idautor,$data->idobra,$ocorrencia+1,$idetiqueta);
            }
        
        
            $msg = "Obra " . $data->titulo . " alterada com sucesso.";
            $MIOLO->Prompt(Prompt::Information($msg,$MIOLO->GetActionURL($module,'main:catalogacao:catalogacao', $data->idobra, ''),$this->listURL));
        }
        catch(Exception $e)
        {
            $this->addError($e->getMessage());
        }
    }

    function btnAddAssunto_click($idobra, $idassunto)
    {
        global $MIOLO, $self, $item;


        $this->assunto = $this->manager->getBusiness('biblioteca','assunto');
        $numerodaobra = $this->obra->numeroDaObra;
        if ($this->getFormValue('lkpassunto')==NULL)
        {
            $MIOLO->Information("Por favor, selecione um assunto a ser adicionado.", $MIOLO->GetActionURL($module,$self,$item));
        }

        $idobra = $this->obra->GetIdByNumero($numerodaobra);
        $idassunto = $this->GetFieldValue('idassunto');
        //Após inserir o assunto, se a página for atualizada, o assunto será inserido novamente. Por isso é verificado se o assunto já esta                     //cadastrado, caso positivo ocorre mensagem de erro
        $ok = $this->assunto->verificar($idobra, $idassunto);
        if ($ok)
        {
            $idassunto = null;
            $idobra=null;
            $MIOLO->Error("Assunto já vinculado a obra, por favor, selecione outro assunto.", $MIOLO->GetActionURL('biblioteca',$self,$item));
        }

        $ocorrencia = $this->GetFieldValue('ocorrencia');
        $idetiqueta = $this->GetFieldValue('idetiqueta');
        $arrayAssuntos = $this->assunto->GetAssuntoCompleto($idetiqueta,$ocorrencia,$idassunto);
        $arrayIndicadores = $this->assunto->GetIndicadorAssunto($idetiqueta,$ocorrencia,$idassunto);
        $ocorrencia = $this->obra->GetNextOcorrencia($idobra,$idetiqueta);
        for ($x=0;$x<sizeof($arrayAssuntos);$x++)
        {
            $idmaterial = $this->obra->saveMaterialAssunto($idobra,$idetiqueta,$arrayAssuntos[$x][0],$arrayAssuntos[$x][1],$arrayAssuntos[$x][2],$ocorrencia+1);
        }

        for ($x=0;$x<sizeof($arrayIndicadores);$x++)
        {
            $this->obra->saveIndicadorObra($idobra,$idetiqueta,$ocorrencia+1,$arrayIndicadores[$x][0],$arrayIndicadores[$x][1],0);
        }
        $this->assunto->saveAssuntoObra($idassunto,$idobra,$ocorrencia+1,$idetiqueta);
        $MIOLO->Information("Assunto adicionado com sucesso.", $MIOLO->GetActionURL($module,$self,$item));
    }

    function gridAssuntos(){
        global $MIOLO, $module, $self, $theme, $action, $page, $action, $item;
        $href_datagrid = $MIOLO->GetActionURL($module,$self,$item);
        $page->SetAction($href_datagrid);
        $query = $this->objObra->GetAssuntosObra($item);

        $columns = array(
        new DataGridColumn('idmaterial','Código','left',true, '0%',false, null, true,true),
        new DataGridColumn('tag','TAG','left',true, '25%',true, null, true,true),
        new DataGridColumn('conteudo','Conteúdo','left',true, '75%',true, null, true,true),
        );
        $datagrid = new DataGrid2($query, $columns, $href_datagrid,20);
        $datagrid->SetTitle('Relação de Assuntos');
        $datagrid->SetLinkType('linkbutton');
        $datagrid->SetWidth('100%');

        $this->addField($datagrid);
    }


}
?>
