<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?php
/**
* @package SIGA
* @subpackage Biblioteca
* @author SETEC/MEC
*/

class frmCatalogacaoFichas extends MTabbedForm
{
	function __construct($idObra)
    {
            
		parent::__construct('Title: TabbedForm Tutorial');
        $this->SetPainterMethod('javascript'); 
        $this->width = '100%';
        $obra = $this->manager->getBusiness('biblioteca','obra', $idObra);
        //$obra->GetById($idObra);
		$this->header = '<b>Categoria:&nbsp;</b>' . $obra->GetCategoria() . '&nbsp;&nbsp;&nbsp;' . '<b>Número da Obra:&nbsp;</b>' . $obra->numeroDaObra . '&nbsp;&nbsp;&nbsp;' . '<b>Título:&nbsp;</b>' . $obra->titulo;
        //$this->pagewidth = 140;
        //$this->pageheight = 350;
        $this->pagewidth = 200;
        $this->pageheight = 550;
        
        // Botão 'fechar', direcionando para o handler biblioteca/main/catalogacao
		$this->SetClose($this->manager->GetActionURL($module, 'main:catalogacao'));
		
        $ui = $this->manager->getUI();
        // insere ficha da obra
        $data = new FormData();
        $data->idobra = $idObra;
        $formObra = $ui->getForm('biblioteca',"frmCatalogacaoFichaObra", $data, 'catalogacao');
        $this->AddPage($formObra);
        // insere as demais fichas 
        $fichas = $obra->getFichas();
        while (! $fichas->eof)
        {
            $subficha = trim($fichas->fields('titulo'));
            switch ($subficha)
            {
                case 'Líder': $s = 'Leader'; break;
                case '006'  : $s = '006'; break;
                case '007'  : $s = '007'; break;
                case '008'  : $s = '008'; break;
                //case 'Campos Variáveis'  : $s = 'Var'; break;
            }
            $data = $fichas->getRowObject();
            
            if($subficha == 'Campos Variáveis')
            {
               $fichas->moveNext();
               continue;
            }
            
            $data->idobra = $idObra;
            $form[$fichas->fields('idsubficha')] = $ui->getForm('biblioteca',"frmCatalogacaoFicha$s", $data, 'catalogacao');
            $this->AddPage($form[$fichas->fields('idsubficha')]);
            $fichas->moveNext(); 
        }
		if ($this->page->IsPostBack())
		{
            $this->EventHandler();
		}
        else
        {
			// para pesquisa por termo catalogado, já abre na aba campos variáveis
			if($this->GetFormValue('event') == 'PesquisaCatalog')
			{
			    $this->SetCurrentPage(4);
			}
        }
        $this->defaultButton = false;
	}
    
}

?>
