<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?php
/**
* @package SIGA
* @subpackage Biblioteca
* @author SETEC/MEC
*/

class frmCatalogacaoAssunto extends MForm
{
    	public $obra;
    	public $etiqueta;
    	public $assunto;
	    public $item;
        

    	function __construct($item)
    	{
       		parent::__construct('Catalogação dos Assuntos da Obra');
		$this->SetClose($this->manager->GetActionURL($module, 'main:catalogacao'));       
		$this->EventHandler();
    	}


    	function CreateFields()
    	{
		global $item;

		$this->obra = $this->manager->getBusiness('biblioteca','obra');
        $this->etiqueta = $this->manager->getBusiness('biblioteca','etiqueta');
		
		$tagAssuntos = $this->etiqueta->ListAssuntos(1, 5)->result;

		$x = 0;
		while ($tagAssuntos[$x][0] <> null)
		{
			$resultTag[$x] = $tagAssuntos[$x][0];
			$x++;
		}

        
		$array = array( 
              		new MHiddenField('hidFieldList',''),
              		new MHiddenField('idassunto',''),
              		new MHiddenField('ocorrencia',''),
              		new MHiddenField('idetiqueta',''),
			new MTextLabel('lbl1','Obra',null,'black'),
			array(
		                new MTextField('numerodaobra','','Número',10),
		                new MTextLabel('ou','-OU-','&nbsp;'),
		                new MLookupTextField('lkpobra','','Título',30),
                  		),
			new MButton('btnEdit','Buscar'),
			new MButton('btnChoose','Outra Obra'),
                        
          //  new MButton('btnNovoAss','Novo Assunto'),

			new MTextLabel('lbl2','Pesquisar assunto:',null,'black'),
			array(
				//new LookupTextField('lkpassunto','',null,27,'Pesquisar'),
              new MLookupTextField('lkpassunto','',null,27,'Pesquisar'),
               	new MHiddenField('numero',''),
                
				),
            new MButton('btnAlterar','Associar'),
            new MButton('btnVoltar','Voltar'),
           
                                
i                                
        		);

        	$this->setFields($array);



	       	$tipo = $this->getFormValue('tipo');
		if ($tipo == 'indice')
		{
		   	$buttons = array(
           			new MButton('btnPost', '<b>Gravar</b>'),
                    
		   		);		   
           
		       $this->SetButtons($buttons);
		}			

            	$this->SetFieldAttr('lkpobra','module','biblioteca');
            	$this->SetFieldAttr('lkpobra','item','obra');
   		$this->SetFieldAttr('lkpobra','event','filler');     
   		$this->SetFieldAttr('lkpobra','related','numerodaobra,lkpobra');  

		$this->setFieldAttr('lbl2','visible',false);
		$this->setFieldAttr('lkpassunto','visible',false);
		$this->setFieldAttr('btnAlterar','visible',false);
		$this->setFieldAttr('btnVoltar','visible',false);		
		$this->setFieldAttr('btnChoose','visible',false);
        	$this->defaultButton = false;

		if ($item != null)
		{
			$numerodaobra = $item;
			$this->SetFieldValue('numerodaobra', $numerodaobra);
			$idobra = $this->obra->GetIdByNumero($numerodaobra);
			$titulo = $this->obra->GetTituloByNumero($numerodaobra);
			$this->SetFieldValue('lkpobra', $titulo);
		}  
		
	}


    	function btnEdit_click()
    	{
            global $MIOLO, $module, $self, $theme, $action, $page, $item;
            
   if   ( strlen(trim($this->getFormValue('numerodaobra'))) == 0)  
		{
			$this->AddError('Informe o campo "numero da obra" ou pesquise o Titulo.');
		}
		

	else
	
{
		
            if ($this->getFormValue('numerodaobra')==NULL)
            {
                $numerodaobra = $item;
                $this->SetFieldValue('numerodaobra', $numerodaobra);
                $idobra = $this->obra->GetIdByNumero($numerodaobra);
                $titulo = $this->obra->GetTituloByNumero($numerodaobra);
                $this->SetFieldValue('lkpobra', $titulo);
            }
            else
            {
                $numerodaobra = $this->GetFormValue('numerodaobra');
                $idobra = $this->obra->GetIdByNumero($numerodaobra);
            }

		/*if ($this->getFormValue('lkpobra') == null)
        {
            $MIOLO->Information("Por favor, selecione uma obra.", $MIOLO->GetActionURL($module,$action) );
        }*/

                $this->setFieldAttr('lbl1','readonly',true);
        $this->setFieldAttr('numerodaobra','readonly',true);
        $this->setFieldAttr('lkpobra','readonly',true);
        $this->setFieldAttr('btnEdit','visible',false);
        $this->setFieldAttr('btnChoose','visible',true);
        $this->setFieldAttr('lbl2','visible',true);
        $this->setFieldAttr('lkpassunto','visible',true);
        $this->setFieldAttr('btnIncluir','visible',true);
        $this->setFieldAttr('lblRep','visible',false);
        $this->setFieldAttr('numero','value',"$idobra");

        $this->SetFieldAttr('lkpassunto','module','biblioteca');
        $this->SetFieldAttr('lkpassunto','item','assunto');
        $this->SetFieldAttr('lkpassunto','event','filler');
        $this->SetFieldAttr('lkpassunto','related','idassunto,lkpassunto,ocorrencia,idetiqueta');
        $this->SetFieldAttr('lkpassunto','filter','lkpassunto,numero');
        $this->setFieldAttr('btnAlterar','visible',true);

        $columns = array(
                        new DataGridColumn('idmaterial','Código','left',true, '10%',false, null, true,true),
                        new DataGridColumn('tag','TAG','left',true, '15%',true, null, true,true),
                        new DataGridColumn('conteudo','Conteúdo','left',true, '90%',true, null, true,true),
                        );

        $href_datagrid = $MIOLO->GetActionURL($module,$self,'', Array('event'=>'btnEdit_click'));
        $page->SetAction($href_datagrid);
        $query = $this->obra->AssuntosPorObra($idobra);

        $datagrid = new DataGrid2($query, $columns, $href_datagrid,20);
        $datagrid->SetTitle('Relação de assuntos');
        $datagrid->SetLinkType('linkbutton');
        $datagrid->SetWidth('100%');
        $href_dele = $MIOLO->GetActionURL($module,$self,'%0%',Array('event'=>'btnExcluir:click'));
			
        $datagrid->AddActionIcon('Excluir', 'delete.gif', $href_dele);
		
        $this->addField($datagrid);

        /*global $MIOLO, $module, $self, $theme, $action, $page, $item;
		var_dump($numerodaobra);
        if ((($numerodaobra=="") or (!is_numeric($numerodaobra))) and ($this->GetFormValue('lkpobra')==""))
        {
                
            $MIOLO->Error("Por favor, preencha os campos corretamente.", $MIOLO->GetActionURL('biblioteca',"main:catalogacao:autor"));
             
        }
        else if ((($numerodaobra=="") or (!is_numeric($numerodaobra))) and ($this->GetFormValue('lkpobra')!=""))
        {
            $MIOLO->Information("Para pesquisar somente pelo título da obra, utilize a seta vermelha.", $MIOLO->GetActionURL('biblioteca',"main:catalogacao:autor"));
        }
        else{
                
                
            if($this->objObra->GetIdByNumero($numerodaobra)!=NULL){
                $idobra = $this->objObra->GetIdByNumero($numerodaobra);
            }else{
                $MIOLO->Error("Número de obra inválido.", $MIOLO->GetActionURL('biblioteca',"main:catalogacao:autor"));
            }
                
                
        }


        /*if ($this->getFormValue('numerodaobra')==NULL)
		{
			$numerodaobra = $item;
			$this->SetFieldValue('numerodaobra', $numerodaobra);
			$idobra = $this->obra->GetIdByNumero($numerodaobra);
			$titulo = $this->obra->GetTituloByNumero($numerodaobra);
			$this->SetFieldValue('lkpobra', $titulo);
		}
		else
		{
			$numerodaobra = $this->GetFormValue('numerodaobra');
			$idobra = $this->obra->GetIdByNumero($numerodaobra);
		} */


		/*if ($this->getFormValue('lkpobra') == null)
		{
			$MIOLO->Information("Por favor, selecione uma obra.", $MIOLO->GetActionURL($module,$action) );
		}

		$this->setFieldAttr('lbl1','readonly',true);
		$this->setFieldAttr('numerodaobra','readonly',true);
		$this->setFieldAttr('lkpobra','readonly',true);
        $this->setFieldAttr('btnEdit','visible',false);
        $this->setFieldAttr('btnChoose','visible',true);
		$this->setFieldAttr('lbl2','visible',true);
		$this->setFieldAttr('lkpassunto','visible',true);
		$this->setFieldAttr('btnAlterar','visible',true);
		$goto = $MIOLO->GetActionURL($module, 'main:catalogacao:catalogacao', $idobra);	
		$this->AddButton(new FormButton('btnVoltar', 'Voltar',$MIOLO->GetActionURL($module,$action)));
		$this->AddButton(new FormButton('btnVoltar',"Ir para Catalogação da obra {$numerodaobra}",$goto));
		
		$this->setFieldAttr('lblRep','visible',false);
		$this->setFieldAttr('numero','value',"$idobra");

        $this->SetFieldAttr('lkpassunto','module','biblioteca');
        $this->SetFieldAttr('lkpassunto','item','assunto');
   		$this->SetFieldAttr('lkpassunto','event','filler');     
		$this->SetFieldAttr('lkpassunto','related','idassunto,lkpassunto,ocorrencia,idetiqueta');
   		$this->SetFieldAttr('lkpassunto','filter','lkpassunto,numero');     

        
		$columns = array(
			//new DataGridColumn('idmaterial','Código','left',true, '10%',true, null, true,true),
            new DataGridColumn('classificacao','Classificação','left',true, '15%',true, null, true,true),
			new DataGridColumn('conteudo','Conteúdo','left',true, '75%',true, null, true,true),
			);

		$href_datagrid = $MIOLO->GetActionURL($module,$self,'', Array('event'=>'btnEdit_click'));
		$page->SetAction($href_datagrid);
		$query = $this->obra->AssuntosPorObra($idobra);

		$datagrid = new DataGrid2($query, $columns, $href_datagrid,20);
		$datagrid->SetTitle('Relação de assuntos');
		$datagrid->SetLinkType('linkbutton');
		$datagrid->SetWidth('100%');
		$href_dele = $MIOLO->GetActionURL($module,$self,'%0%',Array('event'=>'btnExcluir:click'));
			
		$datagrid->AddActionIcon('Excluir', 'delete.gif', $href_dele);
		
		$this->addField($datagrid);

        */
    	}
  }
  
  
  




    	function btnAlterar_click($idobra, $idassunto)
    	{
		global $MIOLO;
		
		$this->assunto = $this->manager->getBusiness('biblioteca','assunto');
		$numerodaobra = $this->GetFormValue('numerodaobra');

		if ($this->getFormValue('lkpassunto')==NULL) 
		{
			$MIOLO->Information("Por favor, selecione um assunto a ser adicionado.", $MIOLO->GetActionURL('biblioteca',"main:catalogacao:assunto&item=$numerodaobra"));
		}

		$idobra = $this->obra->GetIdByNumero($numerodaobra);			
		$idassunto = $this->GetFieldValue('idassunto');

		//Após inserir o assunto, se a página for atualizada, o assunto será inserido novamente. Por isso é verificado se o assunto já esta 			//cadastrado, caso positivo ocorre mensagem de erro
		$ok = $this->assunto->verificar($idobra, $idassunto);
		if ($ok)
		{
			$idassunto = null;
			$idobra=null;
			$MIOLO->Error("Assunto já vinculado a obra, por favor, selecione outro assunto.", $MIOLO->GetActionURL('biblioteca','main:catalogacao:assunto'));
		}

		$ocorrencia = $this->GetFieldValue('ocorrencia');
		$idetiqueta = $this->GetFieldValue('idetiqueta');

		$arrayAssuntos = $this->assunto->GetAssuntoCompleto($idetiqueta,$ocorrencia);
		$arrayIndicadores = $this->assunto->GetIndicadorAssunto($idetiqueta,$ocorrencia);
		$ocorrencia = $this->obra->GetNextOcorrencia($idobra,$idetiqueta);
		for ($x=0;$x<sizeof($arrayAssuntos);$x++)
		{
			$idmaterial = $this->obra->saveMaterialAssunto($idobra,$idetiqueta,$arrayAssuntos[$x][0],$arrayAssuntos[$x][1],$arrayAssuntos[$x][2],$ocorrencia+1);
		}
		for ($x=0;$x<sizeof($arrayIndicadores);$x++)
		{
			$this->obra->saveIndicadorObra($idobra,$idetiqueta,$ocorrencia+1,$arrayIndicadores[$x][0],$arrayIndicadores[$x][1],0);
		}	
		$this->assunto->saveAssuntoObra($idassunto,$idobra,$ocorrencia+1,$idetiqueta);
	}

	function btnExcluir_click()
    	{
		global $MIOLO, $module, $item, $action;
		$idmaterial = $item;
		$this->assunto = $this->manager->getBusiness('biblioteca','assunto');
		$ok = $this->assunto->desvinculaObra($idmaterial);
		$numerodaobra = $this->GetFormValue('numerodaobra');
		$idobra = $this->obra->GetIdByNumero($numerodaobra);
		if ( $ok )
			$MIOLO->Information("Registro deletado da base de dados", $MIOLO->GetActionURL('biblioteca',"main:catalogacao:assunto&item=$numerodaobra"));
		else
			$MIOLO->Error("As informações não foram deletadas", $MIOLO->GetActionURL('biblioteca',"main:catalogacao:assunto&item=$numerodaobra"));

		$MIOLO->GetActionURL($module,$action);
	}

    	function btnChoose_click()
    	{
		$go = $this->manager->getActionURL('biblioteca','main:catalogacao:assunto');
            	$this->page->redirect($go);
	}


// Solicitado incluir Novo Assunto na tela de Catalogação- Assuntos
        //
//        $buttons = array(
  //                       new MButtonWindow('btnAutor', 'Novo Autor', $MIOLO->GetActionURL($module,'main:admin:autor', 'autor', '')),
                //        );
    //        $this->SetButtons($buttons);


    

    
    
}
?>
