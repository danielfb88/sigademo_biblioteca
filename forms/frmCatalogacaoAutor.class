<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?php
/**
* @package SIGA
* @subpackage Biblioteca
* @author SETEC/MEC
*/

class frmCatalogacaoAutor extends MForm
{
        public $objObra;
        public $objEtiqueta;
        public $objAutor;
        
        

        function __construct($item)
        {
            parent::__construct('Catalogação dos Autores da Obra');
            $this->SetClose($this->manager->GetActionURL($module, 'main:catalogacao'));       
            $this->EventHandler();
        }


        function CreateFields()
        {
            global $MIOLO,$item;

            $this->objObra = $MIOLO->GetBusiness('biblioteca','obra');
            $this->objEtiqueta = $MIOLO->GetBusiness('biblioteca','etiqueta');
 
            $tagAutores = $this->objEtiqueta->ListAutor(1, 5)->result;

            $x = 0;
            while ($tagAutores[$x][0] <> null)
            {
                $resultTag[$x] = $tagAutores[$x][0];
                $x++;
            }

            $array = array( 
                    new MHiddenField('hidFieldList',''),
                    new MHiddenField('idautor',''),
                    new MHiddenField('ocorrencia',''),
                    new MHiddenField('idetiqueta',''),
                    new MTextLabel('lbl1','Obra',null,'black'),
                    array(
                        new MTextField('numerodaobra','','Número',10),
                        new MTextLabel('ou','-OU-','&nbsp;'),
                        new MLookupTextField('lkpobra','','Título',30),
                        ),
                    new MButton('btnEdit','Buscar'),
                    new MButton('btnChoose','Outra Obra'),
        
                    new MTextLabel('lbl2','Pesquisar autor:',null,'black'),
                    array(
                        //new LookupTextField('lkpassunto','',null,27,'Pesquisar'),
                        new MLookupTextField('lkpcatautor','','',27,'Pesquisar'),
                        new MHiddenField('numero',''),
                
                    ),
                    new MButton('btnAlterar','Associar'),            
                                
                );

            $this->setFields($array);



            $tipo = $this->getFormValue('tipo');
            if ($tipo == 'indice')
            {
                $buttons = array(
                    new MButton('btnPost', '<b>Gravar</b>'),    
                );         
           
               $this->SetButtons($buttons);
            }           

            $this->SetFieldAttr('lkpobra','module','biblioteca');
            $this->SetFieldAttr('lkpobra','item','obra');
            $this->SetFieldAttr('lkpobra','event','filler');     
            $this->SetFieldAttr('lkpobra','related','numerodaobra,lkpobra');  

            $this->setFieldAttr('lbl2','visible',false);
            $this->setFieldAttr('lkpcatautor','visible',false);
            $this->setFieldAttr('btnAlterar','visible',false);
            $this->setFieldAttr('btnChoose','visible',false);
            $this->defaultButton = false;

            if ($item != null)
            {
                $numerodaobra = $item;
                $this->SetFieldValue('numerodaobra', $numerodaobra);
                $idobra = $this->objObra->GetIdByNumero($numerodaobra);
                $titulo = $this->objObra->GetTituloByNumero($numerodaobra);
                $this->SetFieldValue('lkpobra', $titulo);                
            }  
        
        }


        function btnEdit_click()
        {
            global $MIOLO, $module, $self, $theme, $action, $page, $item;
            $numerodaobra = $this->GetFormValue('numerodaobra');
            
            if ((($numerodaobra=="") or (!is_numeric($numerodaobra))) and ($this->GetFormValue('lkpobra')==""))
            {
                
                        $MIOLO->Error("Por favor, preencha os campos corretamente.", $MIOLO->GetActionURL('biblioteca',"main:catalogacao:autor"));                       
            }
            else if ((($numerodaobra=="") or (!is_numeric($numerodaobra))) and ($this->GetFormValue('lkpobra')!=""))
            {
                $MIOLO->Information("Para pesquisar somente pelo título da obra, utilize a seta vermelha.", $MIOLO->GetActionURL('biblioteca',"main:catalogacao:autor"));
            }
            else{
                
                
                if($this->objObra->GetIdByNumero($numerodaobra)!=NULL){
                    $idobra = $this->objObra->GetIdByNumero($numerodaobra);
                }else{
                    $MIOLO->Error("Número de obra inválido.", $MIOLO->GetActionURL('biblioteca',"main:catalogacao:autor"));
                }
                
                
            }

            $this->setFieldAttr('lbl1','readonly',true);
            $this->setFieldAttr('numerodaobra','readonly',true);
            $this->setFieldAttr('lkpobra','readonly',true);
            $this->setFieldAttr('btnEdit','visible',false);
            $this->setFieldAttr('btnChoose','visible',true);
            $this->setFieldAttr('lbl2','visible',true);
            $this->setFieldAttr('lkpcatautor','visible',true);
            $this->setFieldAttr('btnAlterar','visible',true);
            $this->setFieldAttr('lblRep','visible',false);
            $this->setFieldAttr('numero','value',"$idobra");

            $this->SetFieldAttr('lkpcatautor','module','biblioteca');
            $this->SetFieldAttr('lkpcatautor','item','AutorCat');
            $this->SetFieldAttr('lkpcatautor','event','filler');
            $this->SetFieldAttr('lkpcatautor','related','idautor,lkpcatautor,idetiqueta, ocorrencia');
            $this->SetFieldAttr('lkpcatautor','filter','lkpcatautor,numero');

            $columns = array(
                //new DataGridColumn('idmaterial','Código','left',true, '10%',true, null, true,true),           
                
	    // ticiano.lima #35460 
		//new DataGridColumn('classificacao','Classificação','left',true, '15%',true, null, true,true),
		new DataGridColumn('cutter','Cutter','left',true, '15%',true, null, true, true),
	    // ticiano.lima #35460 
		new DataGridColumn('conteudo','Conteúdo','left',true, '75%',true, null, true,true),          
            );

            $href_datagrid = $MIOLO->GetActionURL($module,$self,'', Array('event'=>'btnEdit_click'));
            $page->SetAction($href_datagrid);
            $query = $this->objObra->AutoresPorObra($idobra);

            $datagrid = new DataGrid2($query, $columns, $href_datagrid,20);
            $datagrid->SetTitle('Relação de autores');
            $datagrid->SetLinkType('linkbutton');
            $datagrid->SetWidth('100%');
            $href_dele = $MIOLO->GetActionURL($module,$self,'%0%',Array('event'=>'btnExcluir:click'));
                
            $datagrid->AddActionIcon('Excluir', 'delete.gif', $href_dele);
            
            $this->addField($datagrid);
        }

        function btnAlterar_click($idobra, $idassunto)
        {
            global $MIOLO,$module;
            
            $this->objAutor = $MIOLO->GetBusiness($module,'autor');
            $numerodaobra = $this->GetFormValue('numerodaobra');

           
            if ($this->getFormValue('lkpcatautor')==NULL)
            {
                $MIOLO->Information("Por favor, selecione um autor a ser adicionado.", $MIOLO->GetActionURL('biblioteca',"main:catalogacao:autor&item=$numerodaobra"));
            }
            if ($this->getFormValue('idautor')==NULL)//obriga o uso do lookUp
            {
                $MIOLO->Information("Por favor, selecione um autor utilizando a Pesquisa.", $MIOLO->GetActionURL('biblioteca',"main:catalogacao:autor&item=$numerodaobra"));
            }
            
            $idobra = $this->objObra->GetIdByNumero($numerodaobra);            
            $idautor = $this->GetFieldValue('idautor');

            //Após inserir o assunto, se a página for atualizada, o assunto será inserido novamente. Por isso é verificado se o assunto já esta             //cadastrado, caso positivo ocorre mensagem de erro
            $ok = $this->objAutor->verificar($idobra, $idautor);
            if ($ok)
            {
                $idautor = null;
                $idobra = null;
                $MIOLO->Error("Autor já vinculado a obra, por favor, selecione outro autor.", $MIOLO->GetActionURL('biblioteca',"main:catalogacao:autor&item=$numerodaobra"));
            }

            $ocorrencia = $this->GetFieldValue('ocorrencia');
            $idetiqueta = $this->GetFieldValue('idetiqueta');

            $arrayAutores = $this->objAutor->GetAutorCompleto($idetiqueta,$ocorrencia);
            $arrayIndicadores = $this->objAutor->GetIndicadorAutor($idetiqueta,$ocorrencia);
            $ocorrencia = $this->objObra->GetNextOcorrencia($idobra,$idetiqueta);
            
            for ($x=0;$x<sizeof($arrayAutores);$x++)
            {
                $idmaterial = $this->objObra->saveMaterialAutor($idobra,$idetiqueta,$arrayAutores[$x][0],$arrayAutores[$x][1],$arrayAutores[$x][2],$ocorrencia+1);
            }

            for ($x=0;$x<sizeof($arrayIndicadores);$x++)
            {
                $this->objObra->saveIndicadorObra($idobra,$idetiqueta,$ocorrencia+1,$arrayIndicadores[$x][0],$arrayIndicadores[$x][1],0);
            }
            $this->objAutor->saveAutorObra($idautor,$idobra,$ocorrencia+1,$idetiqueta);
        }

        function btnExcluir_click()
        {
            global $MIOLO, $module, $item, $action;
            $idmaterial = $item;
            $this->objAutor = $MIOLO->GetBusiness($module,'autor');
            $ok = $this->objAutor->desvinculaObra($idmaterial);
            $numerodaobra = $this->GetFormValue('numerodaobra');
            $idobra = $this->objObra->GetIdByNumero($numerodaobra);
            if ( $ok )
                $MIOLO->Information("Registro deletado da base de dados", $MIOLO->GetActionURL('biblioteca',"main:catalogacao:autor&item=$numerodaobra"));
            else
                $MIOLO->Error("As informações não foram deletadas", $MIOLO->GetActionURL('biblioteca',"main:catalogacao:autor&item=$numerodaobra"));

            $MIOLO->GetActionURL($module,$action);
        }

        function btnChoose_click()
        {
            $go = $this->manager->getActionURL('biblioteca','main:catalogacao:autor');
            $this->page->redirect($go);
        }    
}
?>
