<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?
class frmPolitica extends Form
{

	var $objPolitica;

    function frmPolitica()  // construtor da Classe
    {
		global $MIOLO,$module;

		//Instancia o objeto politica
		$this->objPolitica = $MIOLO->GetBusiness($module,'politica');

		// Título do Formulário
		$this->Form('Política');

		//Chama o CreateFileds, etc.
		$this->EventHandler();

		// Botão "enviar" não aparece
		$this->defaultButton = false;
		
		// Botão 'fechar', direcionando para o handler biblioteca/main/admin
		$this->SetClose($this->manager->GetActionURL($module, 'main:admin'));
	 
	}


    
    function CreateFields()
    {
		// Campos que aparecem no formulário
		$fields = Array (
			new Selection('hidKeyGrupo','','Grupo'),
			new Selection('hidKeyRegraCirculacao','','Regra de Circulação'),
			//new Selection('hidKeyUnidade','','Unidade'),
			new TextField('edtHoraDevolucao','','Hora da Devolução',20),
			new HiddenField('hidKeyPolitica','','hidPolitica',20),
			new TextField('edtDiasEmprestimo','','Dias de Empréstimo',20),
			new TextField('edtLimiteEmprestimo','','Limite de Empréstimo',20),
			new TextField('edtLimiteRenovacao','','Limite de Renovação',20),
			new TextField('edtLimiteReserva','','Limite de Reserva',20),
			new TextField('edtValorMulta','','Valor da Multa',20),
			new TextField('edtDiasReserva','','Dias Reserva',20)
			);

		// Insere os campos
		$this->SetFields($fields);

		// Botões que aparecem no formulário
		$buttons = Array(
			new FormButton('btnEnviar', 'Incluir'),
			new FormButton('btnExcluir', 'Excluir'),
			//new FormButton('btnRelacao', 'Relação'),
			new MLink('btnLinkRelacao','Relação de Políticas',$this->manager->getActionURL($module,$self,'',array('event'=>'btnRelacao:click'))),
			);

		//Insere os Botões
		$this->SetButtons($buttons);


       $query = $this->objPolitica->ListGrupo();
	   $this->SetFieldAttr('hidKeyGrupo','options', $query->result);

       $query = $this->objPolitica->ListUnidade();
	   $this->SetFieldAttr('hidKeyUnidade','options', $query->result);

       $query = $this->objPolitica->ListRegraCirculacao();
	   $this->SetFieldAttr('hidKeyRegraCirculacao','options', $query->result);


		// Botão excluir nao aparece, pois o formulário está em branco
		$this->SetButtonAttr('btnExcluir','visible',false);	
		
		//Validators
		$this->AddValidator(new RequiredValidator('edtDiasEmprestimo'));
		$this->AddValidator(new RequiredValidator('edtLimiteEmprestimo'));
		$this->AddValidator(new RequiredValidator('edtLimiteRenovacao'));
		$this->AddValidator(new RequiredValidator('edtLimiteReserva'));

        //--- > 26/04/2011 retirada a validação do campo multa
        //$this->AddValidator(new RequiredValidator('edtValorMulta'));
		$this->AddValidator(new RequiredValidator('edtDiasReserva'));
        
        //--- > 06/04/2010 incluido a validação
        $this->AddValidator(new RequiredValidator('edtHoraDevolucao'));
		//$this->AddValidator(new RequiredValidator('edtHoraDevolucao'));
		
		// So pode inteiro
		$this->AddValidator(new MRegExpValidator('edtDiasEmprestimo','','(^-?[0-9][0-9]*$)'));
		$this->AddValidator(new MRegExpValidator('edtLimiteEmprestimo','','(^-?[0-9][0-9]*$)'));
		$this->AddValidator(new MRegExpValidator('edtLimiteRenovacao','','(^-?[0-9][0-9]*$)'));
		$this->AddValidator(new MRegExpValidator('edtLimiteReserva','','(^-?[0-9][0-9]*$)'));
		//$this->AddValidator(new MRegExpValidator('edtValorMulta','','(^-?[0-9][0-9][,]*$)'));
		$this->AddValidator(new MRegExpValidator('edtDiasReserva','','(^-?[0-9][0-9]*$)'));
        $this->AddValidator(new MRegExpValidator('edtHoraDevolucao','','^([0-1][0-9]|[2][0-3])(:([0-5][0-9])){1,2}$'));
        
        $this->AddValidator(new MRegExpValidator('edtDiasEmprestimo','','(^-?[0-9][0-9]*$)'));

	$this->AddValidator(new MRegExpValidator('edtValorMulta','','(^-?[0-9][0-9]*$)'));
	
   }
    
	// pega os dados que estão no formulário   
    function GetData()
    {
    $data = new FormData();
        //$data->idpolitica = $this->GetFieldValue('lkpPolitica');
		$data->keypolitica = $this->GetFormValue('hidKeyPolitica');
        $data->diasdeemprestimo = $this->GetFormValue('edtDiasEmprestimo');
        $data->limitedeemprestimo = $this->GetFormValue('edtLimiteEmprestimo');
        $data->limitederenovacao = $this->GetFormValue('edtLimiteRenovacao');
        $data->limitedereserva = $this->GetFormValue('edtLimiteReserva');
        // certo --> $data->valordamulta = $this->GetFormValue('edtValorMulta');
        $data->valordamulta = (($this->GetFormValue('edtValorMulta')== null)? 0 : $this->GetFormValue('edtValorMulta'));
        $data->diasdereserva = $this->GetFormValue('edtDiasReserva');
		$data->keygrupo = $this->GetFormValue('hidKeyGrupo');
		$data->keyregracirculacao = $this->GetFormValue('hidKeyRegraCirculacao');
        //$data->keyunidade = $this->GetFormValue('hidKeyUnidade');
		$data->horadevolucao = $this->GetFormValue('edtHoraDevolucao');
//        var_dump($data);
	return $data;
    }

	
	// usada para inserir valores no formulário
	function SetData($data)
	{
		//echo "<pre>";
		//var_dump($data);
        //$this->SetFieldValue('lkpPolitica',$data->idpolitica);
		$this->SetFieldValue('hidKeyPolitica',$data->idpolitica);
        $this->SetFieldValue('edtDiasEmprestimo',$data->diasdeemprestimo);
		$this->SetFieldValue('edtLimiteEmprestimo',$data->limitedeemprestimo);
		$this->SetFieldValue('edtLimiteRenovacao',$data->limitederenovacao);
		$this->SetFieldValue('edtLimiteReserva',$data->limitedereserva);
		$this->SetFieldValue('edtValorMulta',$data->valordamulta);
		$this->SetFieldValue('edtDiasReserva',$data->diasdereserva);
		$this->SetFieldValue('hidKeyGrupo',$data->keygrupo);
		$this->SetFieldValue('hidKeyRegraCirculacao',$data->keyregracirculacao);
		//$this->SetFieldValue('hidKeyUnidade',$data->keyunidade);
		$this->SetFieldValue('edtHoraDevolucao',$data->horadevolucao);
	}




	// Inserir dados
	function btnEnviar_click()
	{ global $MIOLO,$module,$action;
	
	$valormulta = substr(trim(Form::GetFormValue('edtValorMulta')), 0,1);
	
	echo $valormulta;
	
	echo (substr(trim(Form::GetFormValue('edtValorMulta')), 0,1));  
	

	if( strlen(trim(Form::GetFormValue('edtHoraDevolucao'))) == 0)
		{
			$this->AddError('Informe o campo "Hora de Devolução".');
		}
		elseif( $valormulta  == '-' )
		{
			$this->AddError('O Valor da Multa está com valor negativo.');
		}
		elseif( (Form::GetFormValue('valordamulta')!='') and preg_match("/\D/", Form::GetFormValue('valordamulta')) )
		{
			$this->AddError('O campo valor da multa deve ser um número positivo.');
		}
	else
	
	{
	
	
	  $data = $this->GetData();

		if ($data->keypolitica)
		{
			$what = " atualizada ";
			$ok = $this->objPolitica->Update($data);
			$this->objPolitica->Log(OP_UPD,'Politica alterada - id = '.$this->objPolitica->idpolitica);
		}
		else
		{
			$what = " inserida ";
			$ok = $this->objPolitica->Insert($data);
			$this->objPolitica->Log(OP_INS,'Politica inserida - id = '.$ok);
		}
		if ( $ok )
		{
       $go = $this->manager->GetActionURL('biblioteca','main:admin:politica',"");
       $MIOLO->Information("Política " . $data->idpolitica . " $what com sucesso. ", $go );
    }
  	else
  	{
		   $MIOLO->Error("Política " . $data->idpolitica  . " não foi $what. ", $go );
		}
	}

  }


	function btnConsulta_click($idpolitica)
	{ global $MIOLO,$module,$item;
	
		$idpolitica = ($idpolitica != '') ? $idpolitica : $item;

		$this->SetButtonAttr('btnExcluir','visible',true);	
 		$this->SetButtonAttr('btnEnviar','label','Salvar');
		$this->SetFieldAttr('lkpPolitica','readonly',true);

		$ok = $this->objPolitica->GetByPolitica($idpolitica);

		$this->SetData($ok);
		
	return true;	
	}

	function btnExcluir_click()
	{
		global $MIOLO, $module, $item, $action;

		$idpolitica = $item;

		
	/*$conf é a variável que confirma a exclusão do registro no momento 
	em que é questionado ao usuário se ele deseja relmente excluir o registro*/

	$conf = $this->GetFormValue('conf');
	  	  
		if( $conf == 'sim') //Caso o usuário tenha escolhido a opção sim
		{
			try
			{			
			    $this->objPolitica->Delete($idpolitica);
			    $this->objPolitica->Log(OP_DEL,'Politica deletada - id = '.$idpolitica);
			    $MIOLO->prompt(Prompt::information("Política " . $idpolitica . " deletada da base de dados", $MIOLO->GetActionURL($module,$action)));			    	
			} 
				catch(EMioloException $e)
				  {				
					$MIOLO->Error("As informações não foram deletadas", $MIOLO->GetActionURL($module,$action));
				  }		 
		}
		elseif( $conf == 'nao')
		{
		  $MIOLO->prompt(Prompt::information('Exclusão cancelada.', $MIOLO->GetActionURL($module,$action)));
		}else
		 {
		   /*Caso a variável não possua o valor "sim" nem o valor "não" significa que ainda não lhe foi atribuído um valor,
		   ou seja, deve-se perguntar ao usuário se deseja realmente excluir o registro */
	
			$msg = "Tem certeza que deseja realmente excluir esta política?";

			$action_sim = $MIOLO->getActionURL($module,'main:admin:politica&event=btnExcluir:click',$idpolitica, array('conf'=>'sim'));
			$action_nao = $MIOLO->getActionURL($module,'main:admin:politica&event=btnExcluir:click',$idpolitica, array('conf'=>'nao'));
			
			$MIOLO->prompt(Prompt::question($msg, $action_sim, $action_nao));	
		 }
	}

    function btnRelacao_click()
	{
		global $MIOLO, $module, $self, $theme, $action, $page;

		$columns = array(
			new DataGridColumn('idpolitica','Política','center', true, '10%',true, null, true, true),
			new DataGridColumn('diasdeemprestimo','Dias Emp','center', true, '10%',true, null, true,true),
			new DataGridColumn('limitedeemprestimo','L. Empr','center', true, '10%',true, null, true,true),
			new DataGridColumn('limitederenovacao','L. Renov.','center', true, '10%',true, null, true,true),
			new DataGridColumn('limitedereserva','L. Res.','center', true, '10%',true, null, true,true),
			new DataGridColumn('valordamulta','Valor Multa','center', true, '10%',true, null, true,true),
			new DataGridColumn('diasdereserva','Dias Reserva','center', true, '10%',true, null, true,true),
			new DataGridColumn('grupo','Grupo','center', true, '10%',true, null, true,true),
			new DataGridColumn('regracirculacao','Regra Circulação','center', true, '10%',true, null, true,true),
			new DataGridColumn('horadevolucao','Hora de Devolução','center', true, '10%',true, null, true,true),
			);

		$href_datagrid = $MIOLO->GetActionURL($module,$self,'', Array('event'=>'btnRelacao_click'));
		$page->SetAction($href_datagrid);

		$query = $this->objPolitica->ListPolitica();
		
		
		foreach ($query->result as $i => $resultado)
		{
		    $valordamulta = $resultado[3];
			$valordamulta = str_replace('.','.',$valordamulta);
			//settype($valordamulta,"float");
			//$valordamulta = str_replace('.',',',$valordamulta);
			
			$valordamulta = number_format($valordamulta,2,'.','.');
			
			
			$query->result[$i][3] = $valordamulta;
							
		}
		

		$datagrid = new DataGrid2($query, $columns, $href_datagrid,20);
		$datagrid->SetTitle('Relação de políticas - <i>Clique nos títulos para ordenar</i>');
		$datagrid->SetLinkType('linkbutton');
		$datagrid->SetWidth('100%');
		$href_dele = $MIOLO->GetActionURL($module,$self,'%0%',Array('event'=>'btnExcluir:click'));
		$href_edit = $MIOLO->GetActionURL($module,$self,'%0%',Array('event'=>'btnConsulta:click'));
		
		$datagrid->AddActionIcon('Salvar', 'edit.gif', $href_edit);
		$datagrid->AddActionIcon('Excluir', 'delete.gif', $href_dele);
		$datagrid->HeaderLink('new', 'Novo Registro',
		
		$MIOLO->GetActionURL($module,$self,'',Array('event'=>'')));

		$theme->InsertContent($datagrid);
	
	}

}

?>
