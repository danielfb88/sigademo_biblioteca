<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?
class frmUsuarioAltGrupo extends Form
{
	var $objUsuarioValidacao;
	var $objusuario;
	
	// construtor da Classe
    function frmUsuarioAltGrupo()
    {
		global $MIOLO,$module;

		// Título do Formulário
		$this->Form('Alteração do Grupo do Usuário');

		//Chama o CreateFileds, etc.
		$this->EventHandler();
		
		// Botão 'fechar', direcionando para o handler biblioteca/main/circulacao/usuario
		$this->SetClose($this->manager->GetActionURL($module, 'main:circulacao:usuario'));
	}
   
    function CreateFields()
    {	
		global $MIOLO,$module,$action;

		//Instancia o objeto usuariovalidacao
	    $this->objUsuarioValidacao = $MIOLO->GetBusiness($module,'usuariovalidacao');
		$query = $this->objUsuarioValidacao->ListGrupos();

		// Campos que aparecem no formulário
		$fields = Array (
			new LookupTextField('lkpUsuario','','Usuário',21),
			new TextField('edtNome','','Nome',60),
			new Selection('selGrupo','','Grupo',$query),
			new HiddenField('hidIDusuario'),
			new HiddenField('hidGrupo')
			);
		
		// Insere os campos
		$this->SetFields($fields);

		// Botões que aparecem no formulário
		$buttons = Array(
			new FormButton('btnEnviar', 'Procurar'),
			new FormButton('btnAlterar', 'Alterar'),
			new FormButton('btnVoltar', 'Voltar', $MIOLO->GetActionURL($module, $action)),
			);

		//Insere os Botões
		$this->SetButtons($buttons);

		//As 4 propriedades de um lookup
		// module = módulo usado
		// item = A funcao que chama no arquivo classes/lookup.class
		// event = O evento relacionado quando o usuário clica em "acao"
		// related = Os campos retornados após a ação
		$this->SetFieldAttr('lkpUsuario','module','biblioteca');
		$this->SetFieldAttr('lkpUsuario','item','usuariologin');
		$this->SetFieldAttr('lkpUsuario','event','filler');
		$this->SetFieldAttr('lkpUsuario','related','hidIDusuario,lkpUsuario',"","");

		//Esconde os campos exceto o lookup do usuario
		$this->SetFieldAttr('selGrupo','visible', false);
		$this->SetFieldAttr('edtNome','visible', false);
		$this->SetButtonAttr('btnVoltar','visible',false);
		$this->SetButtonAttr('btnAlterar','visible',false);

		$this->AddValidator(new MCompareValidator('selGrupo','','>=','1','i','required','No campo Grupo, por favor, escolha uma opção válida'));		

		$this->page->onLoad("MIOLO_GetElementById('lkpUsuario').focus();");
   }

	// pega os dados que estão no formulário   
    function GetData()
    {
		$data = new FormData();
        $data->usuario = $this->GetFieldValue('lkpUsuario');
        $data->idgrupo = $this->GetFieldValue('selGrupo');
		$data->idusuario = $this->GetFieldValue('hidIDusuario');
		$data->hidGrupo = $this->GetFieldValue('hidGrupo');
		$data->nome = $this->GetFieldValue('edtNome');
		
		if ( ($this->GetFieldValue('lkpUsuario') != null) and ($this->GetFieldValue('hidIDusuario') == null) )
		{
			$data->idusuario = $this->GetFieldValue('lkpUsuario');
		}

		return $data;
    }

	// usada para inserir valores no formulário
	function SetData($data)
	{
		$this->SetFieldValue('lkpUsuario',$data->usuario);
		$this->SetFieldValue('selGrupo',$data->idgrupo);
		$this->SetFieldValue('hidIDusuario',$data->idusuario);
		$this->SetFieldValue('hidGrupo',$data->hidGrupo);
		$this->SetFieldValue('edtNome',$data->nome);
	}

	function btnEnviar_click()
	{ 
	global $MIOLO,$theme,$module,$action;

	$this->SetButtonAttr('btnVoltar','visible',true);

				//$data = $this->GetData();
                $login = $this->GetFieldValue('lkpUsuario');
	
				/*
                if ($login == null)
				{
					$login = $data->idusuario;
				}
                */
                if ($login != NULL){
				//Instancia os objetos 
                    $this->objusuario = $MIOLO->GetBusiness($module,'usuario');
                    $dados = $this->objusuario->GetByLogin($login);

                    if ($dados != NULL){
					
                    //Retorna idgrupo de bt_vinculo
                        $objEmprestimo = $MIOLO->GetBusiness($module,'emprestimo');
                        //$checkvinculo = $objEmprestimo->ValidateVinculo($dados[0][2]);
                        //$checkvinculo = $objEmprestimo->ValidateVinculo($dados->idusuario);
                        $checkvinculo = $checkvinculo[0][0];

                        $this->SetFieldValue('hidIDusuario',$dados[0][2]);
                        //$this->SetFieldValue('hidIDusuario',$dados->idusuario);
                        $this->SetFieldValue('edtNome',$dados[0][1]);
                       //$this->SetFieldValue('edtNome',$dados->nome);
                        $this->SetFieldAttr('edtNome','visible',true);
                        $this->SetFieldAttr('edtNome','readonly',true);
                        $this->SetFieldValue('selGrupo',$checkvinculo);
                        $this->SetFieldAttr('selGrupo','visible',true);
                        $this->SetFieldValue('hidGrupo',$checkvinculo);
                        $this->SetFieldValue('lkpUsuario',$dados[0][0]);
                        //$this->SetFieldValue('lkpUsuario',$dados->login);
                        $this->SetFieldAttr('lkpUsuario','readonly',true);
						
                        $this->SetButtonAttr('btnAlterar','visible',true);
                        $this->SetButtonAttr('btnEnviar','visible',false);
                    } else {
                        $MIOLO->Prompt(Prompt::Error("Usuário inexistente.",$MIOLO->GetActionURL($module,$action)));
                    }

                } else {
                    $MIOLO->Prompt(Prompt::Error("Por favor, preencha o campo Usuário.",$MIOLO->GetActionURL($module,$action)));
                }
	}
	
	function btnAlterar_click()
	{
		global $MIOLO,$module,$theme;
		
		$data = $this->GetData();
		
		if ( $data->idgrupo <> $data->hidGrupo )
		{
			$this->objusuario = $MIOLO->GetBusiness($module,'usuariovalidacao');	
			$ok = $this->objUsuarioValidacao->UpdateGrupo($data);
			if ($ok)
			{
				$identificador = $data->idusuario;
				$ident1 = $data->hidGrupo;
				$ident2 = $data->idgrupo;
				$mnemonicogrupo = 'ALTGRUPO';
		
				// LOG
    			$log = $MIOLO->GetBusiness($module,'log');
    			$log->SetData($this->getDataLog($identificador,$ident1,$ident2,$mnemonicogrupo));
				$log->save();
				$theme->ClearContent();
				$MIOLO->Prompt(Prompt::Information("Grupo alterado com  sucesso.",$MIOLO->GetActionURL($module,$self)));
			}
		}
	}
	
	function getDataLog($Identificador,$Ident1,$Ident2,$Mnemonico)
	{
		global $MIOLO;
		$data = new FormData();
		$data->data = date("d/m/Y H:i:s");
		$data->identificador = $Identificador . '/De grupo ' . $Ident1 . ' para ' . $Ident2;
		$data->idusuario = $MIOLO->GetLogin()->idkey;
		$operacao = $MIOLO->GetBusiness('biblioteca','operacao');
		$operacao = $operacao->GetIdoperacaoByMnemonico($Mnemonico);
		$data->idoperacao = $operacao->GetIdoperacao();
		return $data;
	}
}
?>
