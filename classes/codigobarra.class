<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?php
/**
* @package SIGA
* @subpackage Biblioteca
* @author SETEC/MEC
*/

class BusinessBibliotecaCodigoBarra extends Business
{
	var $idcodigobarra;
	var $descricao;

	function BusinessBibliotecaCodigoBarra($data = null)
	{

       global $MIOLO, $module;

       $this->Business('sigaept', $data);

	}

	function GetData()
	{
		$data = new FormData();     
		$data->numcodigobarra =  $this->numerodotombo;
		$data->descricao     = $this->descricao;
		return $data;
	}

	function SetData($data)
	{
		$this->numerodotombo = $data->numcodigobarra;
		$this->descricao     = $data->descricao;

	}



   function Insert($numeroTombo,$tipo)
	{
		global $MIOLO,$module;
		$commands = array();
		$sql = new sql('numcodigobarra,descricao,idcodigobarra','bt_codigobarra');
		$values = array($numeroTombo,$tipo,1);        
		$commands[] = $sql->Insert($values);  
		$this->execute($commands);
      return 1; 
	}

	function Update($numeroTombo,$tipo)
	{

		global $MIOLO,$module;
		$commands = array();
		$sql = new sql('numcodigobarra,descricao','bt_codigobarra','idcodigobarra = 1');
		$values = array($numeroTombo,$tipo);
		$commands[] = $sql->Update($values);
		$this->execute($commands);
	}

   function GetLastCodigo(){
      $sql= new sql('numcodigobarra,descricao','bt_codigobarra');
      $query = $this->Query($sql);
      return $query;
   }
   
   function contaNumeroLinhas(){

      $sql= new sql('numcodigobarra','bt_codigobarra');
      $quantidade = $this->_db->Count($sql);
      return $quantidade;
   }

	
   public function draw($text, $type = 'int25', $imgtype = 'png', $bSendToBrowser = true)
   {

      if (!preg_match('/^[a-zA-Z0-9_-]+$/', $type)) {
         return new Exception('Invalid barcode type ' . $type);
      }
      if (!include_once($type . '.class')) {
         return new Exception($type . ' barcode is not supported');
      }

      $classname = 'Image_Barcode_' . $type;
      if (!in_array('draw',get_class_methods($classname))) {
         return new Exception("Unable to find draw method in '$classname' class");
      }
      
      @$obj =& new $classname();
    
      $img = &$obj->draw($text, $imgtype);
      
      imagepng($img,'/usr/local/miolo2/modules/biblioteca/html/images/codigo.png');
      return $img;
   }

}

?>
