<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?
/**
* Classe Exemplar<br>
* <p>Classe utilizada para o controle das exemplars da biblioteca</p>
* @author Equipe ADR Soluções(Adaptado por Emanuel Novais para periodico)
* @package biblioteca
* @subpackage exemplar
*/
class BusinessBibliotecaExemplarPeriodico extends Business
{
        private $allFields;
        var $idexemplarperiodico;
        var $idperiodico;
        //ISSN no banco
        var $issn;
        //titulo
        var $tituloedicao;
        var $tituloperiodico;
        var $observacao;
        var $volume;
	var $edicao;
        //numero do tombo
        var $numerodotombo;
        var $numero;
        var $ano;
        var $idestado;
        var $idregracirculacao;
        var $idunidade;
        var $idcolecao;
        var $preco;
        var $notaopac;
        var $objLog;
        var $notacirculacao;
        var $codigoexemplar;
        var $notainterna;
        
        function BusinessBibliotecaExemplarPeriodico($data = null)
        {
            global $MIOLO, $module;
            $this->Business('sigaept', $data);
            $this->objLog = $MIOLO->GetBusiness($module,'log');
            $this->allFields = "e.volume,e.preco,e.numero,e.ano,e.tituloedicao,e.numerodotombo,e.idexemplarperiodico ,e.idperiodico,e.idestado,e.idregracirculacao,e.idunidade,e.idcolecao,e.edicao,e.notaopac,e.notacirculacao,e.codigoexemplar,e.notainterna";
        }

        function GetData()
        {
                $data = new FormData();

                $data->idexemplarperiodico = $this->idexemplarperiodico;
                $data->idperiodico = $this->idperiodico;
                $data->issn = $this->issn; 
                $data->tituloedicao = $this->tituloedicao;
                $data->tituloperiodico = $this->tituloperiodico;
                $data->observacao = $this->observacao;
                $data->volume = $this->volume;
		$data->edicao = $this->edicao;
                $data->numerodotombo = $this->numerodotombo;
                $data->numero = $this->numero;
                $data->ano = $this->ano;
                $data->idestado = $this->idestado;
                $data->idregracirculacao = $this->idregracirculacao;
                $data->idunidade = $this->idunidade;
                $data->idcolecao = $this->idcolecao;
                $data->preco = $this->preco;
                $data->edicao = $this->edicao;
                $data->notaopac = $this->notaopac;
                $data->notacirculacao = $this->notacirculacao;
                $data->codigoexemplar = $this->codigoexemplar;
                $data->notainterna = $this->notainterna;
                
                return $data;
        }


        function SetData($data)
        {
                global  $MIOLO,$module;
                
                if($data->issn==null||$data->tituloperiodico==null){
                        $periodico = $MIOLO->GetBusiness($module,'periodico');
                        $periodico->GetById($data->idperiodico);

                        $this->idperiodico=$periodico->idPeriodico;
                        
                        $this->issn =$data->issn= $periodico->issn;
                        $this->tituloperiodico = $data->tituloperiodico=$periodico->titulo;
                }
                $this->idexemplarperiodico = $data->idexemplarperiodico ;
                $this->idperiodico = $data->idperiodico;
                $this->issn = $data->issn;
                $this->tituloedicao = $data->tituloedicao;
                $this->tituloperiodico = $data->tituloperiodico;
                $this->observacao = $data->observacao;
                $this->volume = $data->volume;
                $this->numerodotombo= $data->numerodotombo;
                $this->numero = $data->numero;
                $this->ano = $data->ano;
                $this->idestado = $data->idestado;
                $this->idregracirculacao = $data->idregracirculacao;
                $this->idunidade = $data->idunidade;
                $this->idcolecao = $data->idcolecao;
                $this->preco = $data->preco;
                $this->edicao = $data->edicao;
                $this->notaopac = $data->notaopac;
                $this->notacirculacao = $data->notacirculacao;
                $this->codigoexemplar = $data->codigoexemplar;
                $this->notainterna = $data->notainterna;
        }
        /*
        
        function GetNotaCirculacao($idexemplarPeriodico)
        {
                $criteria = $this->getCriteria();
                //$criteria->addColumnAttribute('notacirculacao');
                
                $criteria->addCriteria('idexemplar', '=', $idexemplarPeriodico);
                return $criteria->retrieveAsQuery();
                
        function GetNotaCirculacao($idexemplarPeriodico)
        {
                $sql = new sql('notacirculacao','bt_exemplarPeriodico','idexemplar = ?');
                $query = $this->Query($sql,$idexemplarPeriodico);
                return $query->result[0][0];
        }
        */

        function GetPeriodicoByCodigo($issn)
        {
                global  $MIOLO,$module;
//                 $etiqueta = $MIOLO->GetBusiness($module,'etiqueta');
//                 $etiqueta->GetByTag('022');
//                 $idEtiquetaIssn = $etiqueta->idEtiqueta;
//                 $etiqueta->GetByTag('245');
//                 $idEtiquetaTitulo = $etiqueta->idEtiqueta;
//                 $sql = new sql('p.idperiodico', 'bt_periodico p, bt_materialperiodico m', "(p.idperiodico = m.idperiodico) AND (m.idetiqueta = $idEtiquetaIssn) AND (m.conteudo = ?)");
//                 
//                 $query = $this->Query($sql,$issn);
//                 $idperiodico = $query->result[0][0];
//                 $sql1 = new sql('m.conteudo','bt_materialperiodico m',"(m.idperiodico = ?) AND (m.idetiqueta = ?) AND (m.subcampo = 'a')");
//                 $query1 = $this->Query($sql1,Array($idperiodico,$idEtiquetaTitulo));
// 
//                 $tituloPeriodico = $query1->result[0][0];
 
                $periodico = $MIOLO->GetBusiness($module,'periodico');
                $periodico->GetByIssn($issn);
                
                $this->idperiodico=$periodico->idPeriodico;
                $this->issn = $periodico->issn;
                $this->tituloperiodico = $periodico->titulo;

                return $this;
//                $resultado = Array ( Array($periodico->idPeriodico,$periodico->issn,$periodico->titulo));

  //              return $resultado;
        }

        function GetAllByCodigo($idExemplarPeriodico)
        {

                $sql = new sql('e.volume,e.preco,e.numero,e.ano,e.tituloedicao,e.numerodotombo,e.idexemplarperiodico ,e.idperiodico,e.idestado,e.idregracirculacao,e.idunidade,e.idcolecao,e.edicao,e.notaopac,e.notacirculacao,e.codigoexemplar,e.notainterna','bt_exemplarperiodico e, bt_periodico p','e.idexemplarperiodico = ? and e.idperiodico=p.idperiodico');
                
		$query = $this->Query($sql,$idExemplarPeriodico);
		if ( !$query->eof() ){
		                $result = $query->GetRowObject();
                                $this->SetData($query->GetRowObject());
                }
                
		return $result;
        }

        function GetIdByTombo($tombo)
        {
                $sql = new sql('idexemplar', 'bt_exemplarPeriodico', 'numerodotombo = ?');
                $query = $this->Query($sql,$tombo);
                return $query->result[0][0];
        }
        
        function GetObraIdExemplarByTombo($tombo)
        {
                global $MIOLO,$module;
                $etiqueta = $MIOLO->GetBusiness($module,'etiqueta');
                $etiqueta->GetByTag('022');
                //conteudo eh issn
                $sql = new sql('m.conteudo, e.idExemplarperiodico', 'bt_exemplarPeriodico e, bt_periodico p, bt_materialperiodico m', "(e.idperiodico = m.idperiodico) AND (e.numerodotombo = ?) AND (m.idetiqueta = $etiqueta->idEtiqueta)");
                $query = $this->Query($sql,$tombo);
                return $query->result[0];
        }

        function GetByNumeroTombo($issn)
        {
                $sql = new sql('

                ex.numerodotombo,ex.volume,ex.observacao,ex.numero,

                ex.idestado as keyestado,
                es.descricao as idestado,
                
                ex.idregracirculacao as keyregracirculacao,
                re.descricao as idregracirculacao,
                
                ex.idunidade as keyunidade,
                un.descricao as idunidade,
                
                ex.idcolecao as keycolecao,
                co.descricao as idcolecao,
                
                ex.idobra as keyobra,
                ob.titulo as idobra
                
                ','bt_estado es, bt_exemplarPeriodico ex, bt_regracirculacao re, bt_unidade un, bt_colecao co, bt_periodico ob','
                
                (   
                            (ex.numerodotombo = ?) 
                    and (ex.idestado = es.idestado) 
                        and (ex.idregracirculacao = re.idregracirculacao)
                        and (ex.idunidade = un.idunidade)
                        and (ex.idcolecao = co.idcolecao)
                        and (ex.idobra = ob.idobra)
                )
                ');

                //$sql->SetJoin('bt_exemplarPeriodico ex','bt_estado es','(ex.idestado = es.idestado)');
           
                $query = $this->Query($sql,$issn);
        
                if ( !$query->eof() )
                        $this->SetData($query->GetRowObject());

                $data = $this->GetData();

        return $data;
        }


        function LastNumeroExemplar()
        {	
                $id = $this->_db->getNewId('seq_bt_exemplar_periodico');
                return $id;
        }
                

        function Insert(& $data)
        {
                global $MIOLO,$module;

                $commands = array();
                //var_dump($data);
                
                $sql = new sql('idexemplarperiodico,preco,tituloedicao,edicao,numerodotombo,volume,ano,notainterna,numero,notaopac,notacirculacao,idestado,idregracirculacao,idunidade,idcolecao,idperiodico','bt_exemplarPeriodico');

                //$data->idexemplar = $this->LastNumeroExemplar();
                $data->idexemplar = $this->LastNumeroExemplar();

                if($data->idperiodico==null)
                        $data->idperiodico=$this->idperiodico;
                $values = array($data->idexemplar,$data->preco,$data->tituloedicao,$data->edicao,$data->numerodotombo,$data->volume,$data->ano,$data->notainterna,$data->numero,$data->notaopac,$data->notacirculacao,$data->idestado,$data->idregracirculacao,$data->idunidade,$data->idcolecao,$data->idperiodico);
 
                $commands[] = $sql->Insert($values);

                //LOG
                $log = $MIOLO->GetBusiness($module,'log');
                $sqlog = $log->Gravar("INCEXEMP",$data->idexemplar);
                $commands[] = $sqlog->Insert();

                $this->execute($commands);
        }

        function Update(& $data)
        {
                global $MIOLO,$module;

                $commands = array();

                $sql = new sql('preco,tituloedicao,edicao,numerodotombo,volume,ano,notainterna,numero,notaopac,notacirculacao,idestado,idregracirculacao,idunidade,idcolecao,idperiodico','bt_exemplarperiodico','idexemplarperiodico=?');

                //var_dump("idExemplarPeriodico: ".$data->exemplarperiodico)
                $values = array($data->preco,$data->tituloedicao,$data->edicao,$data->numerodotombo,$data->volume,$data->ano,$data->notainterna,$data->numero,$data->notaopac,$data->notacirculacao,$data->idestado,$data->idregracirculacao,$data->idunidade,$data->idcolecao,$data->idperiodico,$data->idexemplar);

                $commands[] = $sql->Update($values);

                //LOG
                $log = $MIOLO->GetBusiness($module,'log');
                $sqlog = $log->Gravar("EDTEXEMP",$data->idexemplar);
                $commands[] = $sqlog->Insert();

                $this->execute($commands);
        }
        
        function Delete($idExemplarPeriodico)
        {
                global $MIOLO,$module;
                $commands = array();
                
                $sql = new sql('','bt_materialartigo','idartigo in (SELECT idartigo FROM bt_artigo WHERE bt_artigo.idexemplarperiodico = ? )');
                $commands[] = $sql->Delete($idExemplarPeriodico);
                
                $sql = new sql('','bt_artigo','idexemplarperiodico = ?');
                $commands[] = $sql->Delete($idExemplarPeriodico);
                
                $sql = new sql('','bt_exemplarperiodico','idexemplarperiodico = ?');
                $commands[] = $sql->Delete($idExemplarPeriodico);
                
                //LOG
                $log = $MIOLO->GetBusiness($module,'log');
                $sqlog = $log->Gravar("EXCEXEMP",$idExemplarPeriodico);
                $commands[] = $sqlog->Insert();
                $this->execute($commands);
        }
        
        function Transfere($idExemplarPeriodico,$issn)
        {
                global $MIOLO,$module;

                $objPeriodico= $MIOLO->GetBusiness($module,'periodico');
                $periodico = $objPeriodico->GetByNumero($issn);

                $commands = array();

                $sql = new sql('idperiodico','bt_exemplarPeriodico','idexemplarperiodico = ?');
                $values = array($periodico->idPeriodico,$idExemplarPeriodico);
                $commands[] = $sql->Update($values);

                //LOG
                $log = $MIOLO->GetBusiness($module,'log');
                $sqlog = $log->Gravar("EDTEXEMP",$idExemplarPeriodico);
                $commands[] = $sqlog->Insert();

                $this->execute($commands);
        }
        /* Pega de um exemplar todos os atigos e seus dados.
         $sql = new sql('a.idartigo, e.tag, m.conteudo','bt_artigo a,bt_materialartigo m, bt_etiqueta e',"(a.idexemplarperiodico = ?) AND (a.idartigo=m.idartigo) AND (e.idetiqueta = m.idetiqueta )");
        */
	function ListArtigos($idexemplarperiodico){
	        global  $MIOLO,$module;
                
		$etiqueta = $MIOLO->GetBusiness($module,'etiqueta');
		$etiqueta->GetByTag('245');
		$sql = new sql('m.idartigo,m.conteudo as titulo','bt_artigo a,bt_materialartigo m',"(a.idexemplarperiodico = ?) AND (a.idartigo=m.idartigo) AND (m.idetiqueta = ".$etiqueta->idEtiqueta.")");
		
                if($idexemplarperiodico == null){
                        $query = $this->Query($sql,$this->idexemplarperiodico);
                }else{
                     $query = $this->Query($sql,$idexemplarperiodico);
                        
                }
                return $query;
	
	}
	
	
        function ListExemplar($issn)
        {
         
                global  $MIOLO,$module;
                $periodico = $MIOLO->GetBusiness($module,'periodico');
                $periodico->GetByIssn($issn);
                
                $sql = new sql('e.idexemplarperiodico,e.tituloedicao, e.numerodotombo, r.descricao as descregra, u.descricao as descunidade, c.descricao as descestado','bt_exemplarPeriodico e, bt_periodico p, bt_regracirculacao r, bt_unidade u, bt_estado c','(e.idperiodico = p.idperiodico) and (e.idregracirculacao = r.idregracirculacao) and (e.idunidade = u.idunidade) and (e.idestado = c.idestado) and (p.idperiodico=?)', 'descunidade, e.numerodotombo');

                $query = $this->Query($sql,$periodico->idPeriodico);
                return $query;
        }
    

        function ListEstado()
        {
                $sql = new sql('idestado,descricao','bt_estado','','descricao');
                $query = $this->Query($sql);
                return $query->result;
        }

        function ListRegraCirculacao()
        {
                $sql = new sql('idregracirculacao,descricao','bt_regracirculacao','','descricao');
                $query = $this->Query($sql);
                return $query->result;
        }

        function ListUnidade()
        {
        $sql = new sql('idunidade,descricao','bt_unidade','','descricao');
        $query = $this->Query($sql);
        return $query->result;
        }

        
        function ListColecao()
        {
        $sql=new sql('idcolecao,descricao','bt_colecao','','descricao');
        $query=$this->Query($sql);

        
        $array_antiga = $query->result;
        array_unshift($array_antiga,array('',''));
        
        return $array_antiga;
        }

        function ListMnemonicoColecao()
        {
                $sql=new sql('idcolecao,mnemonico','bt_colecao');
                $query=$this->Query($sql);
                return $query->result;
        }

        function thisTomboExists($tombo)
        {
                $sql = new sql('idexemplar','bt_exemplarPeriodico','numerodotombo = ?');
                $query = $this->Query($sql,$tombo);
                if($query->result <> NULL)
                return true;
                else
                return false;
        }
  
  function GetByTombo($tombo)
   {
     $tombo = "'".$tombo."'";
     //var_dump($tombo);
     $criteria = $this->getCriteria();
     $criteria->addCriteria('numerodotombo','=', $tombo);
         return $criteria->retrieveAsCursor();
   }
        
        function GetTituloByExemplar($tombo)
        {               
                //$sql = new sql('o.titulo','bt_estado e,bt_exemplarPeriodico x,bt_periodico o','(numerodotombo=?) AND (o.idobra = x.idobra) AND (e.idestado=x.idestado)');
                //return $this->Query($sql,array($tombo))->result[0][0];
                
                //$sql = new sql('titulo','bt_periodico','numerodaobra = ?');
                //return $this->Query($sql,$idPeriodico)->result[0][0];
                
                
                // parou de funcionar
                $sql = new sql('o.titulo','bt_periodico o, bt_exemplarPeriodico e','(e.numerodotombo = ?) and (e.idobra = o.idobra)');
                $query = $this->Query($sql,$tombo);
                return $query->result[0][0];
        }
        
        function GetEstadoByExemplar($tombo)
        {
                $sql = new sql('idestado','bt_exemplarPeriodico','numerodotombo = ?');
                $query = $this->Query($sql,$tombo);
                return $query->result[0][0];
        }

        function AlteraEstado($tombo, $estado){
                $sql = new sql('idestado', 'bt_exemplarPeriodico', 'numerodotombo = ?');

                $values = array($estado, $tombo);

                $ok = $this->Execute($sql->Update($values));

                return $ok;
        }
        
        function SQLAlteraEstado($tombo, $estado){
                $sql = new sql('idestado', 'bt_exemplarPeriodico', 'numerodotombo = ?');

                $values = array($estado, $tombo);

                return $sql->Update($values);
        }

        function PesquisaInventario($ids)
        {
                $sql = new sql('e.idexemplar, o.numerodaobra, e.numerodotombo, o.titulo, e.numero, u.descricao', 'bt_exemplarPeriodico e, bt_periodico o, bt_unidade u', "(e.idobra = o.idobra) and (e.idunidade = u.idunidade) and (e.idexemplar IN $ids)");
                $query = $this->Query($sql);
                return $query;
        }

        function GetById($id)
        {
                $this->idexemplar = $id;
                $this->retrieve();
                return $this;
        }
        
        function estaEmprestado($tombo)
        {
           $sql = new sql('e.idexemplar','bt_exemplarPeriodico e , bt_emprestimo em','e.idexemplar = em.idexemplar and e.numerodotombo = ? and em.datahoradadevolucao is NULL');
       $query = $this->Query($sql,$tombo);
       if($query->result <> NULL)
       return true;
       else
       return false;
        }
        
        function estaDisponivel($tombo)
        {
           $sql = new sql('e.idestado','bt_exemplarPeriodico e , bt_estado em',"e.idestado = em.idestado and e.numerodotombo = ? and em.mnemonico = 'DISPONIVEL'");
           $query = $this->Query($sql,$tombo);
       if($query->result <> NULL)
       return true;
       else
       return false;    
        }

        function motivoDaIndisponibilidade($tombo)
        {
       $sql = new sql('em.mnemonico','bt_exemplarPeriodico e , bt_estado em',"e.idestado = em.idestado and e.numerodotombo = ?");
       $query = $this->Query($sql,$tombo);
       switch($query->result[0][0])
       {
          case "CONGELADO":
            return "ESTE EXEMPLAR ESTÁ CONGELADO";
          break;
          
          case "EXTRAVIADO":
            return "ESTE EXEMPLAR FOI EXTRAVIADO";
          break;
          
          case "DESCARTADO":
            return "ESTE EXEMPLAR FOI DESCARTADO";
          break;
          
          case "RESERVADO":
            return "ESTE EXEMPLAR ESTÁ RESERVADO";
          break;
          
          case "RESTAURANDO":
            return "ESTE EXEMPLAR ESTÁ SENDO RESTAURADO";
          break;
          
          case "PERDIDO":
            return "ESTE EXEMPLAR FOI PERDIDO";
          break;
          
          case "DESTRUIDO":
            return "ESTE EXEMPLAR FOI DESTRUIDO";
          break;
          
          case "DESATUALIZADO":
            return "ESTE EXEMPLAR ESTÁ DESATUALIZADO";
          break;
          
          case "DOACAO":
            return "ESTE EXEMPLAR FOI DOADO";
          break;
          
          case "TROCASETOR":
            return "ESTE EXEMPLAR TROCOU DE SETOR";
          break;
          
          case "DESAPARECIDO":
            return "ESTE EXEMPLAR ESTÁ DESAPARECIDO";
          break;
          
          case "SETOR":
            return "ESTE EXEMPLAR FOI EMPRESTADO A OUTRO SETOR";
          break;
          
          case "DEPOSITO":
            return "ESTE EXEMPLAR ESTÁ NO DEPÓSITO";
          break;
          
          case "PROCESSAMENTO":
            return "ESTE EXEMPLAR ESTÁ SENDO PROCESSADO";
          break;
       }                
        }       

        function GetTitulo($idExemplarPeriodico)
        {
                $sql = new sql('o.titulo','bt_periodico o, bt_exemplarPeriodico e','(o.idobra = e.idobra) and (e.idexemplar = ?)');
                $query = $this->Query($sql,$idExemplarPeriodico);
                return $query->result[0][0];
        }

        function regraConsulta($idExemplarPeriodico)
        {
                $sql = new sql('e.idexemplar','bt_exemplarPeriodico e, bt_regracirculacao r',"(e.idregracirculacao = r.idregracirculacao) and (upper(r.descricao) like '%CONSULTA%') and (e.idexemplar = ?)");
                $query = $this->Query($sql,$idExemplarPeriodico);
                return $query->result;
        }

        function GetVolumeExemplar($issn)
        {
                $sql = new sql('volume', 'bt_exemplarPeriodico', "(numerodotombo = ?)");
                $query = $this->Query($sql,$issn);
                return $query->result[0][0];
        }
        
        
        function RelatorioExemplarPorPeriodoeOperacao($dataIni,$dataFim,$Operacao)
        {
                
                $sql = new sql('u.login,substr(u.nick,1,20) as Operador,count(l.identificador) as Exemplares', 'bt_logoperacao l, cm_usuario u', 'l.idoperacao='.$Operacao.' AND (l.data >= '.substr($this->_db->CharToTimestamp($dataIni),1).') AND (l.data <= '.substr($this->_db->CharToTimestamp($dataFim),1).') AND l.idusuario = u.idusuario','substr(u.nick,1,20)', 'u.login,substr(u.nick,1,20)');              
                $query = $this->Query($sql);
                return $query; 
        }

        function TotalExemplares($Genero)
        {
                if ($Genero == 0)
                {
                        $sql = new sql('count(idexemplar)', 'bt_exemplarPeriodico', '','', '');
                }
                else 
                {
                        $sql = new sql('count(e.idexemplar)', 'bt_exemplarPeriodico e, bt_periodico o', '(e.idobra=o.idobra) and (o.idgenero='.$Genero.')','','', '');
                }
                $query = $this->Query($sql);
                return $query; 
        }


        function GetGeneros()
        {
                $sql = new MSql($columns="descricao",$tables='bt_genero',$where='',$orderBy='idgenero');
                $query = $this->Query($sql);
                return $query;
        }


        function Ordem($var, $tab)
        {
                /* Essa função serve para colocar o resultado da consulta em Ordem para ser exibido na Relatório, pois a forma que retorna a consulta não                       tinha como aplicar ao relatório. A consulta retorna:    
                $var = array com o resultado da consulta
                $tab = número da linha na tabela*/
                $x = 0;
                $pos = 1;
                $totalGenero = 0;
                $tamanho = count($var);
                while ($x < $tamanho)
                {
                        if ($var[$x][0] == NULL)
                        {
                                $var[$x][0] = 0;
                        }
                        //Atribuindo o resultado da busca a posição correta no array
                        $result[$tab][$pos] = $var[$x][0];
                        //Somando o total de Generos
                        if ($var[$x][0])
                        {
                                $totalGenero = $var[$x][0] + $totalGenero;
                        }
                        $x++;
                        $pos++;
                }
                //Atribuindo o total a posição correta no array 
                $result[$tab][$pos] = $totalGenero;

                return $result;
        }


        function RelatorioCnpqExemplar()
        {
                /***** CIÊNCIAS HUMANAS *****/
                $sql1 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplarPeriodico e,bt_material m,bt_periodico o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '00' and m.conteudo < '004') or (m.conteudo >= '005' and m.conteudo < '007') or (m.conteudo >= '008' and m.conteudo < '02') or (m.conteudo >= '03' and m.conteudo < '07') or (m.conteudo >= '08' and m.conteudo < '33') or (m.conteudo >= '37' and m.conteudo < '379') or (m.conteudo >= '39' and m.conteudo < '5') or (m.conteudo >= '9' and m.conteudo < '999')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query1 = $this->Query($sql1);
                $humanas = $query1->result;
                $resultado = $this->Ordem($humanas, 0);
                $resultado[0][0] = "Ciencias Humanas";

                /***** SOCIAIS APLICADAS *****/
                $sql2 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplarPeriodico e,bt_material m,bt_periodico o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '02' and m.conteudo < '03') or (m.conteudo >= '07' and m.conteudo < '08') or (m.conteudo >= '33' and m.conteudo < '37') or (m.conteudo >= '379' and m.conteudo < '39') or (m.conteudo >= '65' and m.conteudo < '66') or (m.conteudo >= '71' and m.conteudo < '73')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query2 = $this->Query($sql2);
                $sociais = $query2->result;
                $resultado = array_merge($resultado,$this->Ordem($sociais, 1));
                $resultado[1][0] = "Ciencias Sociais Aplicadas";

                /***** EXATAS *****/
                $sql3 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplarPeriodico e,bt_material m,bt_periodico o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '004' and m.conteudo < '005') or (m.conteudo >= '007' and m.conteudo < '008') or (m.conteudo >= '51' and m.conteudo < '56') or (m.conteudo >= '68' and m.conteudo < '69')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query3 = $this->Query($sql3);
                $exatas = $query3->result;
                $resultado = array_merge($resultado,$this->Ordem($exatas, 2));
                $resultado[2][0] = "Ciencias Exatas e da Terra";

                /***** BIOLOGICAS *****/
                $sql4 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplarPeriodico e,bt_material m,bt_periodico o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '5' and m.conteudo < '51') or (m.conteudo >= '56' and m.conteudo < '6')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query4 = $this->Query($sql4);
                $biologicas = $query4->result;
                $resultado = array_merge($resultado,$this->Ordem($biologicas, 3));
                $resultado[3][0] = "Ciencias Biologicas";

                /***** SAUDE *****/
                $sql5 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplarPeriodico e,bt_material m,bt_periodico o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '6' and m.conteudo < '619') or (m.conteudo >= '64' and m.conteudo < '65') or (m.conteudo >= '796' and m.conteudo < '8')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query5 = $this->Query($sql5);
                $saude = $query5->result;
                $resultado = array_merge($resultado,$this->Ordem($saude, 4));
                $resultado[4][0] = "Ciencias da Saude";

                /***** AGRARIAS *****/
                $sql6 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplarPeriodico e,bt_material m,bt_periodico o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '63' and m.conteudo < '64') or (m.conteudo >= '619' and m.conteudo < '62')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query6 = $this->Query($sql6);
                $agrarias = $query6->result;
                $resultado = array_merge($resultado,$this->Ordem($agrarias, 5));
                $resultado[5][0] = "Ciencias Agrarias";
                
                /***** TECNOLOGIA *****/
                $sql7 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplarPeriodico e,bt_material m,bt_periodico o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '62' and m.conteudo < '63') or (m.conteudo >= '66' and m.conteudo < '68') or (m.conteudo >= '69' and m.conteudo < '7')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query7 = $this->Query($sql7);
                $tecnologia = $query7->result;
                $resultado = array_merge($resultado,$this->Ordem($tecnologia, 6));
                $resultado[6][0] = "Engenharia e Tecnologia";
        
                /***** LINGUISTICA *****/
                $sql8 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplarPeriodico e,bt_material m,bt_periodico o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '7' and m.conteudo < '71') or (m.conteudo >= '73' and m.conteudo < '796') or (m.conteudo >= '8' and m.conteudo < '9')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query8 = $this->Query($sql8);
                $linguistica = $query8->result;
                $resultado = array_merge($resultado,$this->Ordem($linguistica, 7));
                $resultado[7][0] = "Linguistica, letras e artes";

                /***** TOTAL *****/             
                $sql9 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplarPeriodico e,bt_material m,bt_periodico o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query9 = $this->Query($sql9);
                $total = $query9->result;
                $resultado = array_merge($resultado,$this->Ordem($total, 8));
                $resultado[8][0] = "Total";

                return $resultado;              
        }


        function RelatorioCnpqObra()
        {
                /***** CIÊNCIAS HUMANAS *****/
                $sql1 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m, bt_periodico o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '00' and m.conteudo < '004') or (m.conteudo >= '005' and m.conteudo < '007') or (m.conteudo >= '008' and m.conteudo < '02') or (m.conteudo >= '03' and m.conteudo < '07') or (m.conteudo >= '08' and m.conteudo < '33') or (m.conteudo >= '37' and m.conteudo < '379') or (m.conteudo >= '39' and m.conteudo < '5') or (m.conteudo >= '9' and m.conteudo < '999')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query1 = $this->Query($sql1);
                $humanas = $query1->result;
                $resultado = $this->Ordem($humanas, 0);
                $resultado[0][0] = "Ciencias Humanas";

                /***** SOCIAIS APLICADAS *****/
                $sql2 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_periodico o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '02' and m.conteudo < '03') or (m.conteudo >= '07' and m.conteudo < '08') or (m.conteudo >= '33' and m.conteudo < '37') or (m.conteudo >= '379' and m.conteudo < '39') or (m.conteudo >= '65' and m.conteudo < '66') or (m.conteudo >= '71' and m.conteudo < '73')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query2 = $this->Query($sql2);
                $sociais = $query2->result;
                $resultado = array_merge($resultado,$this->Ordem($sociais, 1));
                $resultado[1][0] = "Ciencias Sociais Aplicadas";

                /***** EXATAS *****/
                $sql3 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_periodico o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '004' and m.conteudo < '005') or (m.conteudo >= '007' and m.conteudo < '008') or (m.conteudo >= '51' and m.conteudo < '56') or (m.conteudo >= '68' and m.conteudo < '69')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query3 = $this->Query($sql3);
                $exatas = $query3->result;
                $resultado = array_merge($resultado,$this->Ordem($exatas, 2));
                $resultado[2][0] = "Ciencias Exatas e da Terra";

                /***** BIOLOGICAS *****/
                $sql4 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_periodico o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '5' and m.conteudo < '51') or (m.conteudo >= '56' and m.conteudo < '6')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query4 = $this->Query($sql4);
                $biologicas = $query4->result;
                $resultado = array_merge($resultado,$this->Ordem($biologicas, 3));
                $resultado[3][0] = "Ciencias Biologicas";

                /***** SAUDE *****/
                $sql5 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_periodico o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '6' and m.conteudo < '619') or (m.conteudo >= '64' and m.conteudo < '65') or (m.conteudo >= '796' and m.conteudo < '8')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query5 = $this->Query($sql5);
                $saude = $query5->result;
                $resultado = array_merge($resultado,$this->Ordem($saude, 4));
                $resultado[4][0] = "Ciencias da Saude";

                /***** AGRARIAS *****/
                $sql6 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_periodico o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '63' and m.conteudo < '64') or (m.conteudo >= '619' and m.conteudo < '62')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query6 = $this->Query($sql6);
                $agrarias = $query6->result;
                $resultado = array_merge($resultado,$this->Ordem($agrarias, 5));
                $resultado[5][0] = "Ciencias Agrarias";
                
                /***** TECNOLOGIA *****/
                $sql7 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_periodico o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '62' and m.conteudo < '63') or (m.conteudo >= '66' and m.conteudo < '68') or (m.conteudo >= '69' and m.conteudo < '7')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query7 = $this->Query($sql7);
                $tecnologia = $query7->result;
                $resultado = array_merge($resultado,$this->Ordem($tecnologia, 6));
                $resultado[6][0] = "Engenharia e Tecnologia";
        
                /***** LINGUISTICA *****/
                $sql8 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_periodico o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '7' and m.conteudo < '71') or (m.conteudo >= '73' and m.conteudo < '796') or (m.conteudo >= '8' and m.conteudo < '9')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query8 = $this->Query($sql8);
                $linguistica = $query8->result;
                $resultado = array_merge($resultado,$this->Ordem($linguistica, 7));
                $resultado[7][0] = "Linguistica, letras e artes";

                /***** TOTAL *****/             
                $sql9 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_periodico o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
                $query9 = $this->Query($sql9);
                $total = $query9->result;
                $resultado = array_merge($resultado,$this->Ordem($total, 8));
                $resultado[8][0] = "Total";

                return $resultado;              
        }


}
?>
