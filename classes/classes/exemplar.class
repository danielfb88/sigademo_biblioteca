<?PHP
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?
/**
* Classe Exemplar<br>
* <p>Classe utilizada para o controle das exemplars da biblioteca</p>
* @author Equipe ADR Soluções
* @package biblioteca
* @subpackage exemplar
*/
class BusinessBibliotecaExemplar extends Business
{

	var $idexemplar;
	var $numerodotombo;
//	var $codigodoexemplar;
	var $notainterna;
	var $volume;
	var $preco;
	var $notaopac;
	var $notacirculacao;
	var $numinventario;
	var $idestado;
	var $idregracirculacao;
	var $idunidade;
	var $idcolecao;
	var $idobra;
	var $objLog;
        var $idautor;
	var $autor;        

    var $numeroexemplar;

    
	function BusinessBibliotecaExemplar($data = null)
	{global $MIOLO, $module;
       $this->Business('sigaept', $data);

	   $this->objLog = $MIOLO->GetBusiness($module,'log');
	}




    // Retorna a descricao do Autor atraves do codigo.  ****     25/04/2009
        function GetDescByCodigoAutor($idautor)
    {
            $sql = new sql('conteudo','bt_autor',"(idautor = ?) AND (idetiqueta = 53) AND (subcampo = 'a')");
            $query = $this->Query($sql,$idautor);
            return $query->result[0][0];
    }
    // Retorna o codigo do Autor atraves da descricao do autor.  ****     25/04/2009
        function GetCodigoByDescAutor($nome)
    {
            $sql = new sql('idautor','bt_autor',"(conteudo = ?) AND (idetiqueta = 53) AND (subcampo='a') ");
            $query = $this->Query($sql,$nome);
            return $query->result[0][0];
    }
        
	function GetData()
	{
		$data = new FormData();

		$data->idobra = $this->idobra;
		$data->obra = $this->obra;
                
        //Modificado 20/04/2009 : retirada do campo texto "Autor" da tabela id_Obra
	//     $data->autor = $this->autor;
               $data->idautor = $this->idautor;


        // 25/04/2009 -> Busca a descricao do prenome do Autor
                $data->autor   = $this->autor;
        
		$data->numerodotombo = $this->numerodotombo;
        
        $data->numeroexemplar = $this->numeroexemplar;       //--->Inserido o numerodo EXEMPLAR  19 / 07 / 2011
                

		$data->volume = $this->volume;
		$data->preco = $this->preco;
		$data->notainterna = $this->notainterna;
		$data->notaopac = $this->notaopac;
		$data->notacirculacao = $this->notacirculacao;
		$data->numinventario = $this->numinventario;
		$data->idestado = $this->idestado;
		$data->idregracirculacao = $this->idregracirculacao;
		$data->idunidade = $this->idunidade;
		$data->idcolecao = $this->idcolecao;

		return $data;
	}


	function SetData($data)
	{

		$this->idobra = $data->idobra;
		$this->obra = $data->obra;

                //Modificado 20/04/2009 : retirada do campo texto "Autor" da tabela id_Obra e incluso campo idautor
		$this->idautor = $data->idautor;
                $this->autor   = $this->GetDescByCodigoAutor($data->idautor);
		$this->numerodotombo = $data->numerodotombo;
//		$this->codigoexemplar = $data->codigoexemplar;

        $this->numeroexemplar = $data->numeroexemplar;       //--->Inserido o numerodo EXEMPLAR  19 / 07 / 2011

    

		$this->volume = $data->volume;
		$this->preco = $data->preco;
		$this->notainterna = $data->notainterna;
		$this->notaopac = $data->notaopac;
		$this->notacirculacao = $data->notacirculacao;
		$this->numinventario = $data->numinventario;
		$this->idestado = $data->idestado;
		$this->idregracirculacao = $data->idregracirculacao;
		$this->idunidade = $data->idunidade;
		$this->idcolecao = $data->idcolecao;

	}
	
	function getNotaCirculacao($numerodotombo)
	{
		if ($numerodotombo)
		{
			$sql = new sql ('e.notacirculacao', 'bt_exemplar e', 'numerodotombo = ?');
			return $this->Query($sql,$numerodotombo);
		}
	}
	
	/*
	
	function GetNotaCirculacao($idexemplar)
	{
		$criteria = $this->getCriteria();
		//$criteria->addColumnAttribute('notacirculacao');
		
		$criteria->addCriteria('idexemplar', '=', $idexemplar);
		return $criteria->retrieveAsQuery();
		
	function GetNotaCirculacao($idexemplar)
	{
		$sql = new sql('notacirculacao','bt_exemplar','idexemplar = ?');
		$query = $this->Query($sql,$idexemplar);
		return $query->result[0][0];
	}
	*/




	function GetObraByCodigo($numerodaobra)
	{
                //Modificado 20/04/2009 : retirada do campo texto "Autor" da tabela id_Obra e incluso campo idautor
		
                $sql = new sql('o.idobra,o.numerodaobra,o.titulo,o.idautor,a.conteudo as autor',"bt_obra o left join bt_autor a on a.idautor=o.idautor and (a.idetiqueta >= 53  and a.idetiqueta <= 59)  and a.subcampo ='a'","numerodaobra = ? ");


                
	
		$query = $this->Query($sql,$numerodaobra);

        if ( !$query->eof() )
			$result = $query->GetRowObject();

		return $result;
	}




	function GetAllByCodigo($idexemplar)
	{
                
//Modificado 20/04/2009 : retirada do campo texto "Autor" da tabela id_Obra e incluso campo idautor
	//	$sql = new sql('e.idexemplar,o.numerodaobra,o.titulo,e.idobra,o.autor,e.numerodotombo,e.volume,e.preco,e.notainterna,e.notaopac,e.notacirculacao,e.numinventario,e.idestado,e.idregracirculacao,e.idunidade,e.idcolecao','bt_exemplar e, bt_obra o','e.idexemplar = ? and e.idobra=o.idobra');




/*
//  anterior  sem autor
            $sql = new sql('e.idexemplar,o.numerodaobra,o.titulo,e.idobra,o.idautor,e.numerodotombo,e.volume,e.preco,e.notainterna,e.notaopac,e.notacirculacao,e.numinventario,
            e.idestado,e.idregracirculacao,e.idunidade,e.idcolecao,es.mnemonico','bt_estado es,bt_exemplar e, bt_obra o','e.idexemplar = ? and e.idobra=o.idobra and es.idestado=e.idestado');
            
             ' e.idexemplar = ? and e.idobra=o.idobra and es.idestado=e.idestado and a.idautor=o.idautor and a.idetiqueta = 53 ');
            
            "e.idexemplar = ? and e.idobra=o.idobra and es.idestado=e.idestado and a.idautor=o.idautor and a.idetiqueta = 53 and a.subcampo ='a'    ");
           
*/
  
  
       
    
        $sql = new sql('e.idexemplar,o.numerodaobra,o.titulo,e.idobra,o.idautor,e.numerodotombo,e.volume,e.preco,e.notainterna,e.notaopac,e.notacirculacao
            ,e.numinventario,e.idestado,e.idregracirculacao,e.idunidade,e.idcolecao,es.mnemonico, e.idunidade,e.idcolecao,es.mnemonico, a.conteudo as autor' ,
           "bt_obra o inner join bt_exemplar e on e.idobra=o.idobra inner join bt_estado es on es.idestado=e.idestado left join bt_autor a on a.idautor=o.idautor and a.idetiqueta = 53 and a.subcampo ='a' " ,
             "e.idexemplar = ?  ");
    
		$query = $this->Query($sql,$idexemplar);
		
		
		
		

        if ( !$query->eof() )
			$result = $query->GetRowObject();

	return $result;
	}

	function GetIdByTombo($tombo)
	{
		$sql = new sql('idexemplar', 'bt_exemplar', 'numerodotombo = ?');
		$query = $this->Query($sql,$tombo);
		return $query->result[0][0];
	}
	
	
	
	function GetObraIdExemplarByTombo($tombo)
	{
	
	
		$sql = new sql('o.numerodaobra, e.idexemplar , a.conteudo as autor', "bt_obra o inner join bt_exemplar e on e.idobra = o.idobra left join bt_autor a on a.idautor=o.idautor and a.idetiqueta = 53 and a.subcampo ='a' ", "  e.numerodotombo =? ");
						
		$query = $this->Query($sql,$tombo);		
		
		return $query->result[0];	
	
		
	}
	
	
	

	function GetByNumeroTombo($numerodotombo)
	{
/*		$sql = new sql('

		ex.numerodotombo,ex.volume,ex.preco,ex.notainterna,ex.notaopac,ex.notacirculacao,ex.numinventario

		ex.idestado as keyestado,
		es.descricao as idestado,
		
		ex.idregracirculacao as keyregracirculacao,
		re.descricao as idregracirculacao,
		
		ex.idunidade as keyunidade,
		un.descricao as idunidade,
		
		ex.idcolecao as keycolecao,
		co.descricao as idcolecao,
		
		ex.idobra as keyobra,
		ob.titulo as idobra,
		ob.idautor as idautor
		','bt_estado es, bt_exemplar ex, bt_regracirculacao re, bt_unidade un, bt_colecao co, bt_obra ob','
		
		(   
		  	    (ex.numerodotombo = ?) 
		    and (ex.idestado = es.idestado) 
			and (ex.idregracirculacao = re.idregracirculacao)
			and (ex.idunidade = un.idunidade)
			and (ex.idcolecao = co.idcolecao)
			and (ex.idobra = ob.idobra)
		)
		');

		//$sql->SetJoin('bt_exemplar ex','bt_estado es','(ex.idestado = es.idestado)');
	   
		$query = $this->Query($sql,$numerodotombo);
*/       	
		$sql2 = new MSql ("ex.numerodotombo,ex.volume,ex.preco,ex.notainterna,ex.notaopac,ex.notacirculacao,ex.numinventario,ob.idautor, ex.idestado as keyestado,es.descricao as idestado,ex.idregracirculacao as keyregracirculacao,re.descricao as idregracirculacao,ex.idunidade as keyunidade,un.descricao as idunidade,ex.idcolecao as keycolecao,co.descricao as idcolecao,ex.idobra as keyobra,ob.titulo as idobra FROM bt_estado es,bt_exemplar ex,bt_regracirculacao re,bt_unidade un, bt_colecao co, bt_obra ob WHERE (ex.numerodotombo = ?) and (ex.idestado = es.idestado) and (ex.idregracirculacao = re.idregracirculacao) and (ex.idunidade = un.idunidade) and (ex.idcolecao = co.idcolecao) and (ex.idobra = ob.idobra)");
		$query2 = $this->Query($sql2,$numerodotombo);

		if ( !$query2->eof() )
			$this->SetData($query2->GetRowObject());

		$data = $this->GetData();

	return $data;
	}


	function LastNumeroExemplar()
	{
		$id = $this->_db->GetNewId('seq_bt_exemplar');
		return $id;
	}
		

	function Insert($data)
	{
		global $MIOLO,$module;

		$commands = array();

		$sql = new sql('idexemplar,numerodotombo,notainterna,volume,preco,notaopac,notacirculacao,numinventario,idestado,idregracirculacao,idunidade,idcolecao,idobra,numeroexemplar','bt_exemplar');

		$data->idexemplar = $this->LastNumeroExemplar();

        $values = array($data->idexemplar,$data->numerodotombo,$data->notainterna,$data->volume,$data->preco,$data->notaopac,$data->notacirculacao,$data->numinventario,$data->idestado,$data->idregracirculacao,$data->idunidade,$data->idcolecao,$data->idobra,$data->numeroexemplar);
 
		$commands[] = $sql->Insert($values);


        
		//LOG
		$log = $MIOLO->GetBusiness($module,'log');
		$sqlog = $log->Gravar("INCEXEMP",$data->idexemplar);
		$commands[] = $sqlog->Insert();

		$this->execute($commands);
	}
   
        function InsertMany($data)
	{
                $quantidade = 1;
                $data->numeroexemplar  = 1;
                
                while($quantidade <= $data->qtdexemplar){
                        $ok = $this->Insert($data);
                        $data->numerodotombo++;
                        // Atualiza o numero do exemplar nosistema 21/07/2011
                                
                        $data->numeroexemplar  = $quantidade +1;
                        
                        $quantidade++;
                }
                $data->numerodotombo = $data->numerodotombo - $data->qtdexemplar;
                
	}


    
	function Update(& $data)
	{
		global $MIOLO,$module;

		$commands = array();

		$sql = new sql('numerodotombo,notainterna,volume,preco,notaopac,notacirculacao,numinventario,idestado,idregracirculacao,idunidade,idcolecao,idobra','bt_exemplar','idexemplar=?');

		$values = array($data->numerodotombo,$data->notainterna,$data->volume,$data->preco,$data->notaopac,$data->notacirculacao,$data->numinventario,$data->idestado,$data->idregracirculacao,$data->idunidade,$data->idcolecao,$data->idobra,$data->idexemplar);

		$commands[] = $sql->Update($values);

		//LOG
		$log = $MIOLO->GetBusiness($module,'log');
		$sqlog = $log->Gravar("EDTEXEMP",$data->idexemplar);
		$commands[] = $sqlog->Insert();

		$this->execute($commands);
	}
	
	function Delete($idexemplar)
	{
		global $MIOLO,$module;

		$commands = array();
		$sql = new sql('','bt_exemplar','idexemplar = ?');
		$commands[] = $sql->Delete($idexemplar);

		//LOG
		$log = $MIOLO->GetBusiness($module,'log');
		$sqlog = $log->Gravar("EXCEXEMP",$idexemplar);
		$commands[] = $sqlog->Insert();

		$this->execute($commands);
	}
	
	function Transfere($idexemplar,$numobra)
	{
		global $MIOLO,$module;

		$objObra = $MIOLO->GetBusiness($module,'obra');
		$obra = $objObra->GetByNumero($numobra);

		$commands = array();

		$sql = new sql('idobra','bt_exemplar','idexemplar = ?');
		$values = array($obra->idObra,$idexemplar);
		$commands[] = $sql->Update($values);

		//LOG
		$log = $MIOLO->GetBusiness($module,'log');
		$sqlog = $log->Gravar("EDTEXEMP",$idexemplar);
		$commands[] = $sqlog->Insert();

		$this->execute($commands);
	}

	function ListExemplar($numerodaobra)
	{
		/*
		$sql = new sql('e.idexemplar, e.numerodotombo, r.descricao as descregra, u.descricao as descunidade, c.descricao as desccolecao','bt_exemplar e, bt_obra o, bt_regracirculacao r, bt_unidade u, bt_colecao c','(e.idobra = o.idobra) and (e.idregracirculacao = r.idregracirculacao) and (e.idunidade = u.idunidade) and (e.idcolecao = c.idcolecao) and (o.numerodaobra=?)', 'descunidade, e.numerodotombo');
		*/
        
                $sql = new sql('e.idexemplar, e.numerodotombo, r.descricao as descregra, u.descricao as descunidade, c.descricao as descestado ,e.numeroexemplar','bt_exemplar e, bt_obra o, bt_regracirculacao r, bt_unidade u, bt_estado c','(e.idobra = o.idobra) and (e.idregracirculacao = r.idregracirculacao) and (e.idunidade = u.idunidade) and (e.idestado = c.idestado) and (o.numerodaobra=?)', 'descunidade, e.numerodotombo');

		$query = $this->Query($sql,$numerodaobra);
        return $query;
	}

	function ListEstado()
	{
        $sql = new sql('idestado,descricao','bt_estado','','descricao');
        $query = $this->Query($sql);
        return $query->result;
	}

	function ListRegraCirculacao()
	{
        $sql = new sql('idregracirculacao,descricao','bt_regracirculacao','','descricao');
        $query = $this->Query($sql);
        return $query->result;
	}

	function ListUnidade()
	{
        $sql = new sql('idunidade,descricao','bt_unidade','','descricao');
        $query = $this->Query($sql);
        return $query->result;
	}

	
	function ListColecao()
	{
        $sql=new sql('idcolecao,descricao','bt_colecao','','descricao');
        $query=$this->Query($sql);

	
	$array_antiga = $query->result;
        array_unshift($array_antiga,array('',''));
	
        return $array_antiga;
	}

	function ListMnemonicoColecao()
	{
		$sql=new sql('idcolecao,mnemonico','bt_colecao');
		$query=$this->Query($sql);
		return $query->result;
	}

	function thisTomboExists($tombo)
	{
     $sql = new sql('idexemplar','bt_exemplar','numerodotombo = ?');
     $query = $this->Query($sql,$tombo);
     if($query->result <> NULL)
       return true;
     else
       return false;
    }
  
  function GetByTombo($tombo)
   {
     $tombo = "'".$tombo."'";
     //var_dump($tombo);
     $criteria = $this->getCriteria();
     $criteria->addCriteria('numerodotombo','=', $tombo);
	 return $criteria->retrieveAsCursor();
   }
	
	function GetTituloByExemplar($tombo)
	{		
		//$sql = new sql('o.titulo','bt_estado e,bt_exemplar x,bt_obra o','(numerodotombo=?) AND (o.idobra = x.idobra) AND (e.idestado=x.idestado)');
		//return $this->Query($sql,array($tombo))->result[0][0];
		
		//$sql = new sql('titulo','bt_obra','numerodaobra = ?');
		//return $this->Query($sql,$idobra)->result[0][0];
		
		
		// parou de funcionar
		$sql = new sql('o.titulo','bt_obra o, bt_exemplar e','(e.numerodotombo = ?) and (e.idobra = o.idobra)');
		$query = $this->Query($sql,$tombo);
		return $query->result[0][0];
	}
	
	function GetEstadoByExemplar($tombo)
	{
		$sql = new sql('idestado','bt_exemplar','numerodotombo = ?');
		$query = $this->Query($sql,$tombo);
		return $query->result[0][0];
	}

	function AlteraEstado($tombo, $estado){
		$sql = new sql('idestado', 'bt_exemplar', 'numerodotombo = ?');

		$values = array($estado, $tombo);

		$ok = $this->Execute($sql->Update($values));

		return $ok;
	}
	
	function SQLAlteraEstado($tombo, $estado){
		$sql = new sql('idestado', 'bt_exemplar', 'numerodotombo = ?');

		$values = array($estado, $tombo);

		return $sql->Update($values);
	}

	function PesquisaInventario($ids)
	{
		$sql = new sql('e.idexemplar, o.numerodaobra, e.numerodotombo, o.titulo, e.numinventario, u.descricao', 'bt_exemplar e, bt_obra o, bt_unidade u', "(e.idobra = o.idobra) and (e.idunidade = u.idunidade) and (e.idexemplar IN $ids)");
		$query = $this->Query($sql);
		return $query;
	}

	function GetById($id)
	{
		$this->idexemplar = $id;
		$this->retrieve();
		return $this;
	}
	
	function estaEmprestado($tombo)
	{
	   $sql = new sql('e.idexemplar','bt_exemplar e , bt_emprestimo em','e.idexemplar = em.idexemplar and e.numerodotombo = ? and em.datahoradadevolucao is NULL');
       $query = $this->Query($sql,$tombo);
       if($query->result <> NULL)
       return true;
       else
       return false;
	}
	
	
	function estaDisponivel($tombo)
	{
	$sql = new sql('e.idestado','bt_exemplar e , bt_estado em',"e.idestado = em.idestado and e.numerodotombo = ? and em.mnemonico = 'DISPONIVEL'");
	   $query = $this->Query($sql,$tombo);
       if($query->result <> NULL)
       return true;
       else
       return false;	
	}
		

	
	function estaDisponivelRecinto($tombo)
	{
	   $sql = new sql('e.idestado','bt_exemplar e , bt_emprestimo_temp tm',"e.idexemplar = tm.idexemplar and e.numerodotombo = ? and tm.datahoradadevolucao is not NULL");
	   $query = $this->Query($sql,$tombo);
       if($query->result <> NULL)
       return true;
       else
       return false;	
	}
	
	
	

	function motivoDaIndisponibilidade($tombo)
	{
       $sql = new sql('em.mnemonico','bt_exemplar e , bt_estado em',"e.idestado = em.idestado and e.numerodotombo = ?");
       $query = $this->Query($sql,$tombo);
       switch($query->result[0][0])
       {
          case "CONGELADO":
            return "ESTE EXEMPLAR ESTÁ CONGELADO";
          break;
          
          case "EXTRAVIADO":
            return "ESTE EXEMPLAR FOI EXTRAVIADO";
          break;
          
          case "DESCARTADO":
            return "ESTE EXEMPLAR FOI DESCARTADO";
          break;
          
          case "RESERVADO":
            return "ESTE EXEMPLAR ESTÁ RESERVADO";
          break;
          
          case "RESTAURANDO":
            return "ESTE EXEMPLAR ESTÁ SENDO RESTAURADO";
          break;
          
          case "PERDIDO":
            return "ESTE EXEMPLAR FOI PERDIDO";
          break;
          
          case "DESTRUIDO":
            return "ESTE EXEMPLAR FOI DESTRUIDO";
          break;
          
          case "DESATUALIZADO":
            return "ESTE EXEMPLAR ESTÁ DESATUALIZADO";
          break;
          
          case "DOACAO":
            return "ESTE EXEMPLAR FOI DOADO";
          break;
          
          case "TROCASETOR":
            return "ESTE EXEMPLAR TROCOU DE SETOR";
          break;
          
          case "DESAPARECIDO":
            return "ESTE EXEMPLAR ESTÁ DESAPARECIDO";
          break;
          
          case "SETOR":
            return "ESTE EXEMPLAR FOI EMPRESTADO A OUTRO SETOR";
          break;
          
          case "DEPOSITO":
            return "ESTE EXEMPLAR ESTÁ NO DEPÓSITO";
          break;
          
          case "PROCESSAMENTO":
            return "ESTE EXEMPLAR ESTÁ SENDO PROCESSADO";
          break;
       }		
	}	

	function GetTitulo($idexemplar)
	{
		$sql = new sql('o.titulo','bt_obra o, bt_exemplar e','(o.idobra = e.idobra) and (e.idexemplar = ?)');
		$query = $this->Query($sql,$idexemplar);
		return $query->result[0][0];
	}

	function regraConsulta($idexemplar)
	{
		$sql = new sql('e.idexemplar','bt_exemplar e, bt_regracirculacao r',"(e.idregracirculacao = r.idregracirculacao) and (upper(r.descricao) like '%CONSULTA%') and (e.idexemplar = ?)");
		$query = $this->Query($sql,$idexemplar);
		return $query->result;
	}

	function GetVolumeExemplar($numerodotombo)
	{
		$sql = new sql('volume', 'bt_exemplar', "(numerodotombo = ?)");
		$query = $this->Query($sql,$numerodotombo);
		return $query->result[0][0];
	}
	
	
	function RelatorioExemplarPorPeriodoeOperacao($dataIni,$dataFim,$Operacao)
	{
		
		$sql = new sql('u.login,substr(u.nick,1,20) as Operador,count(l.identificador) as Exemplares', 'bt_logoperacao l, cm_usuario u', 'l.idoperacao='.$Operacao.' AND (l.data >= '.substr($this->_db->CharToTimestamp($dataIni),1).') AND (l.data <= '.substr($this->_db->CharToTimestamp($dataFim),1).') AND l.idusuario = u.idusuario','substr(u.nick,1,20)', 'u.login,substr(u.nick,1,20)');		
		$query = $this->Query($sql);
		return $query; 
	}

	function TotalExemplares($Genero)
	{
		if ($Genero == 0)
		{
			$sql = new sql('count(idexemplar)', 'bt_exemplar', '','', '');		
		}
		else 
		{
			$sql = new sql('count(e.idexemplar)', 'bt_exemplar e, bt_obra o', '(e.idobra=o.idobra) and (o.idgenero='.$Genero.')','','', '');		
		}
		$query = $this->Query($sql);
		return $query; 
	}

//Pegar ultimo numero do tombo
    function Ultimotombo()
    {
        $sql = new sql('max(cast( cast(numerodotombo as text) as integer)) as ultimotombo', 'bt_exemplar', '','', '');
		
////////	no banco***	select max(cast( cast(numerodotombo as text) as integer))  as ultimotombo  from bt_exemplar



        $query = $this->Query($sql);
        return $query->result[0][0];
    }

	function GetGeneros()
	{
		$sql = new MSql($columns="descricao",$tables='bt_genero',$where='',$orderBy='idgenero');
		$query = $this->Query($sql);
		return $query;
	}


	function Ordem($var, $tab)
	{
		/* Essa função serve para colocar o resultado da consulta em Ordem para ser exibido na Relatório, pois a forma que retorna a consulta não 			tinha como aplicar ao relatório. A consulta retorna:	
		$var = array com o resultado da consulta
		$tab = número da linha na tabela*/
		$x = 0;
		$pos = 1;
		$totalGenero = 0;
		$tamanho = count($var);
		while ($x < $tamanho)
		{
			if ($var[$x][0] == NULL)
			{
				$var[$x][0] = 0;
			}
			//Atribuindo o resultado da busca a posição correta no array
			$result[$tab][$pos] = $var[$x][0];
			//Somando o total de Generos
			if ($var[$x][0])
			{
				$totalGenero = $var[$x][0] + $totalGenero;
			}
			$x++;
			$pos++;
		}
		//Atribuindo o total a posição correta no array 
		$result[$tab][$pos] = $totalGenero;

		return $result;
	}

	function RelatorioRetornaDatas($dataInicio,$dataFim)
	{
		$sql = new MSql("('$dataInicio'::date + s.a) as data from generate_series(0,('$dataFim'::date - '$dataInicio'::date)) as s(a)");
		$query = $this->Query($sql);
		return $query->result;
	}
	
	function RelatorioCnpqEmprestimo($dataInicio,$dataFim)
	{
		/***** CIÊNCIAS HUMANAS *****/
		$sql1 = new MSql("coalesce(teste.contagem,0) as Total FROM 
				(
					select ('$dataInicio'::date + s.a) as data from generate_series(0,('$dataFim'::date - '$dataInicio'::date)) as s(a)
				) bar(data)
				LEFT OUTER JOIN 
				(
					select (em.datahoradoemprestimo::date) as datas, count(consulta.exemplar) as contagem 
					FROM 	(
						SELECT idexemplar as exemplar FROM bt_exemplar e,bt_material m,bt_obra o 
						WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '00' and m.conteudo < '004') or (m.conteudo >= '005' and m.conteudo < '007') or (m.conteudo >= '008' and m.conteudo < '02') or (m.conteudo >= '03' and m.conteudo < '07') or (m.conteudo >= '08' and m.conteudo < '33') or (m.conteudo >= '37' and m.conteudo < '379') or (m.conteudo >= '39' and m.conteudo < '5') or (m.conteudo >= '9' and m.conteudo < '999')) 
						group by o.idgenero,e.idexemplar
						) as consulta, 
						bt_emprestimo em 
					where (em.idexemplar = consulta.exemplar)
					group by datas
				) as teste
				ON data = teste.datas GROUP BY data,teste.contagem ORDER BY data;
			");
		$query1 = $this->Query($sql1);
		$humanas = $query1->result;
		$resultado = $humanas;
		
		/***** SOCIAIS APLICADAS *****/
		$sql2 = new MSql("coalesce(teste.contagem,0) as Total FROM 
				(
					select ('$dataInicio'::date + s.a) as data from generate_series(0,('$dataFim'::date - '$dataInicio'::date)) as s(a)
				) bar(data)
				LEFT OUTER JOIN 
				(
					select (em.datahoradoemprestimo::date) as datas, count(consulta.exemplar) as contagem 
					FROM 	(
						SELECT idexemplar as exemplar FROM bt_exemplar e,bt_material m,bt_obra o 
						WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '02' and m.conteudo < '03') or (m.conteudo >= '07' and m.conteudo < '08') or (m.conteudo >= '33' and m.conteudo < '37') or (m.conteudo >= '379' and m.conteudo < '39') or (m.conteudo >= '65' and m.conteudo < '66') or (m.conteudo >= '71' and m.conteudo < '73')) 
						group by o.idgenero,e.idexemplar
						) as consulta, 
						bt_emprestimo em 
					where (em.idexemplar = consulta.exemplar)
					group by datas
				) as teste
				ON data = teste.datas GROUP BY data,teste.contagem ORDER BY data;");
		$query2 = $this->Query($sql2);
		$sociais = $query2->result;
		$resultado = array_merge($resultado,$sociais);

		
		/***** EXATAS *****/
		$sql3 = new MSql("coalesce(teste.contagem,0) as Total FROM 
				(
					select ('$dataInicio'::date + s.a) as data from generate_series(0,('$dataFim'::date - '$dataInicio'::date)) as s(a)
				) bar(data)
				LEFT OUTER JOIN 
				(
					select (em.datahoradoemprestimo::date) as datas, count(consulta.exemplar) as contagem 
					FROM 	(
						SELECT idexemplar as exemplar FROM bt_exemplar e,bt_material m,bt_obra o 
						WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '004' and m.conteudo < '005') or (m.conteudo >= '007' and m.conteudo < '008') or (m.conteudo >= '51' and m.conteudo < '56') or (m.conteudo >= '68' and m.conteudo < '69')) 
						group by o.idgenero,e.idexemplar
						) as consulta, 
						bt_emprestimo em 
					where (em.idexemplar = consulta.exemplar)
					group by datas
				) as teste
				ON data = teste.datas GROUP BY data,teste.contagem ORDER BY data;");
		$query3 = $this->Query($sql3);
		$exatas = $query3->result;
		$resultado = array_merge($resultado,$exatas);
		
		/***** BIOLOGICAS *****/
		$sql4 = new MSql("coalesce(teste.contagem,0) as Total FROM 
				(
					select ('$dataInicio'::date + s.a) as data from generate_series(0,('$dataFim'::date - '$dataInicio'::date)) as s(a)
				) bar(data)
				LEFT OUTER JOIN 
				(
					select (em.datahoradoemprestimo::date) as datas, count(consulta.exemplar) as contagem 
					FROM 	(
						SELECT idexemplar as exemplar FROM bt_exemplar e,bt_material m,bt_obra o 
						WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '5' and m.conteudo < '51') or (m.conteudo >= '56' and m.conteudo < '6'))  
						group by o.idgenero,e.idexemplar
						) as consulta, 
						bt_emprestimo em 
					where (em.idexemplar = consulta.exemplar)
					group by datas
				) as teste
				ON data = teste.datas GROUP BY data,teste.contagem ORDER BY data;");
		$query4 = $this->Query($sql4);
		$biologicas = $query4->result;
		$resultado = array_merge($resultado,$biologicas);
		
		/***** SAUDE *****/
		$sql5 = new MSql("coalesce(teste.contagem,0) as Total FROM 
				(
					select ('$dataInicio'::date + s.a) as data from generate_series(0,('$dataFim'::date - '$dataInicio'::date)) as s(a)
				) bar(data)
				LEFT OUTER JOIN 
				(
					select (em.datahoradoemprestimo::date) as datas, count(consulta.exemplar) as contagem 
					FROM 	(
						SELECT idexemplar as exemplar FROM bt_exemplar e,bt_material m,bt_obra o 
						WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '6' and m.conteudo < '619') or (m.conteudo >= '64' and m.conteudo < '65') or (m.conteudo >= '796' and m.conteudo < '8'))  
						group by o.idgenero,e.idexemplar
						) as consulta, 
						bt_emprestimo em 
					where (em.idexemplar = consulta.exemplar)
					group by datas
				) as teste
				ON data = teste.datas GROUP BY data,teste.contagem ORDER BY data;");
		$query5 = $this->Query($sql5);
		$saude = $query5->result;
		$resultado = array_merge($resultado,$saude);
		
		/***** AGRARIAS *****/
		$sql6 = new MSql("coalesce(teste.contagem,0) as Total FROM 
				(
					select ('$dataInicio'::date + s.a) as data from generate_series(0,('$dataFim'::date - '$dataInicio'::date)) as s(a)
				) bar(data)
				LEFT OUTER JOIN 
				(
					select (em.datahoradoemprestimo::date) as datas, count(consulta.exemplar) as contagem 
					FROM 	(
						SELECT idexemplar as exemplar FROM bt_exemplar e,bt_material m,bt_obra o 
						WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '63' and m.conteudo < '64') or (m.conteudo >= '619' and m.conteudo < '62'))  
						group by o.idgenero,e.idexemplar
						) as consulta, 
						bt_emprestimo em 
					where (em.idexemplar = consulta.exemplar)
					group by datas
				) as teste
				ON data = teste.datas GROUP BY data,teste.contagem ORDER BY data;");
		$query6 = $this->Query($sql6);
		$agrarias = $query6->result;
		$resultado = array_merge($resultado,$agrarias);
		
		/***** TECNOLOGIA *****/
		$sql7 = new MSql("coalesce(teste.contagem,0) as Total FROM 
				(
					select ('$dataInicio'::date + s.a) as data from generate_series(0,('$dataFim'::date - '$dataInicio'::date)) as s(a)
				) bar(data)
				LEFT OUTER JOIN 
				(
					select (em.datahoradoemprestimo::date) as datas, count(consulta.exemplar) as contagem 
					FROM 	(
						SELECT idexemplar as exemplar FROM bt_exemplar e,bt_material m,bt_obra o 
						WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '62' and m.conteudo < '63') or (m.conteudo >= '66' and m.conteudo < '68') or (m.conteudo >= '69' and m.conteudo < '7'))  
						group by o.idgenero,e.idexemplar
						) as consulta, 
						bt_emprestimo em 
					where (em.idexemplar = consulta.exemplar)
					group by datas
				) as teste
				ON data = teste.datas GROUP BY data,teste.contagem ORDER BY data;");
		$query7 = $this->Query($sql7);
		$tecnologia = $query7->result;
		$resultado = array_merge($resultado,$tecnologia);
		
		/***** LINGUISTICA *****/
		$sql8 = new MSql("coalesce(teste.contagem,0) as Total FROM 
					(
						select ('$dataInicio'::date + s.a) as data from generate_series(0,('$dataFim'::date - '$dataInicio'::date)) as s(a)
					) bar(data)
					LEFT OUTER JOIN 
					(
						select (em.datahoradoemprestimo::date) as datas, count(consulta.exemplar) as contagem 
					FROM 	(
						SELECT idexemplar as exemplar FROM bt_exemplar e,bt_material m,bt_obra o 
						 WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '7' and m.conteudo < '71') or (m.conteudo >= '73' and m.conteudo < '796') or (m.conteudo >= '8' and m.conteudo < '9'))  
						group by o.idgenero,e.idexemplar
						) as consulta, 
						bt_emprestimo em 
					where (em.idexemplar = consulta.exemplar)
					group by datas
				) as teste
				ON data = teste.datas GROUP BY data,teste.contagem ORDER BY data;");
		$query8 = $this->Query($sql8);
		$linguistica = $query8->result;

		//var_dump($resultado);die();
		$resultado = array_merge($resultado,$linguistica);
		
		return $resultado;		
	}

function RelatorioCnpqExemplar()
	{
		/***** CIÊNCIAS HUMANAS *****/
		$sql1 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplar e,bt_material m,bt_obra o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '00' and m.conteudo < '004') or (m.conteudo >= '005' and m.conteudo < '007') or (m.conteudo >= '008' and m.conteudo < '02') or (m.conteudo >= '03' and m.conteudo < '07') or (m.conteudo >= '08' and m.conteudo < '33') or (m.conteudo >= '37' and m.conteudo < '379') or (m.conteudo >= '39' and m.conteudo < '5') or (m.conteudo >= '9' and m.conteudo < '999')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query1 = $this->Query($sql1);
		$humanas = $query1->result;
		$resultado = $this->Ordem($humanas, 0);
		$resultado[0][0] = utf8_decode("Ciências Humanas");

		/***** SOCIAIS APLICADAS *****/

		$sql2 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplar e,bt_material m,bt_obra o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '02' and m.conteudo < '03') or (m.conteudo >= '07' and m.conteudo < '08') or (m.conteudo >= '33' and m.conteudo < '37') or (m.conteudo >= '379' and m.conteudo < '39') or (m.conteudo >= '65' and m.conteudo < '66') or (m.conteudo >= '71' and m.conteudo < '73')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query2 = $this->Query($sql2);
		$sociais = $query2->result;
		$resultado = array_merge($resultado,$this->Ordem($sociais, 1));
		$resultado[1][0] = utf8_decode("Ciências Sociais Aplicadas");

		/***** EXATAS *****/
		$sql3 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplar e,bt_material m,bt_obra o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '004' and m.conteudo < '005') or (m.conteudo >= '007' and m.conteudo < '008') or (m.conteudo >= '51' and m.conteudo < '56') or (m.conteudo >= '68' and m.conteudo < '69')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query3 = $this->Query($sql3);
		$exatas = $query3->result;
		$resultado = array_merge($resultado,$this->Ordem($exatas, 2));
		$resultado[2][0] = utf8_decode("Ciências Exatas e da Terra");

		/***** BIOLOGICAS *****/
		$sql4 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplar e,bt_material m,bt_obra o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '5' and m.conteudo < '51') or (m.conteudo >= '56' and m.conteudo < '6')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query4 = $this->Query($sql4);
		$biologicas = $query4->result;
		$resultado = array_merge($resultado,$this->Ordem($biologicas, 3));
		$resultado[3][0] = utf8_decode("Ciências Biológicas");

		/***** SAUDE *****/
		$sql5 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplar e,bt_material m,bt_obra o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '6' and m.conteudo < '619') or (m.conteudo >= '64' and m.conteudo < '65') or (m.conteudo >= '796' and m.conteudo < '8')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query5 = $this->Query($sql5);
		$saude = $query5->result;
		$resultado = array_merge($resultado,$this->Ordem($saude, 4));
		$resultado[4][0] = utf8_decode("Ciências da Saúde");

		/***** AGRARIAS *****/
		$sql6 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplar e,bt_material m,bt_obra o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '63' and m.conteudo < '64') or (m.conteudo >= '619' and m.conteudo < '62')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query6 = $this->Query($sql6);
		$agrarias = $query6->result;
		$resultado = array_merge($resultado,$this->Ordem($agrarias, 5));
		$resultado[5][0] = utf8_decode("Ciências Agrárias");
		
		/***** TECNOLOGIA *****/
		$sql7 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplar e,bt_material m,bt_obra o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '62' and m.conteudo < '63') or (m.conteudo >= '66' and m.conteudo < '68') or (m.conteudo >= '69' and m.conteudo < '7')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query7 = $this->Query($sql7);
		$tecnologia = $query7->result;
		$resultado = array_merge($resultado,$this->Ordem($tecnologia, 6));
		$resultado[6][0] = "Engenharia e Tecnologia";
	
		/***** LINGUISTICA *****/
		$sql8 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplar e,bt_material m,bt_obra o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '7' and m.conteudo < '71') or (m.conteudo >= '73' and m.conteudo < '796') or (m.conteudo >= '8' and m.conteudo < '9')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query8 = $this->Query($sql8);
		$linguistica = $query8->result;
		$resultado = array_merge($resultado,$this->Ordem($linguistica, 7));
		$resultado[7][0] = "Linguistica, letras e artes";

		/***** TOTAL *****/		
		$sql9 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(e.idexemplar) as contagem, o.idgenero FROM bt_exemplar e,bt_material m,bt_obra o WHERE o.idobra=e.idobra and m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query9 = $this->Query($sql9);
		$total = $query9->result;
		$resultado = array_merge($resultado,$this->Ordem($total, 8));
		$resultado[8][0] = "Total";

		return $resultado;		
	}
	
	function RelatorioCnpqObra()
	{
		/***** CIÊNCIAS HUMANAS *****/
		$sql1 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m, bt_obra o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '00' and m.conteudo < '004') or (m.conteudo >= '005' and m.conteudo < '007') or (m.conteudo >= '008' and m.conteudo < '02') or (m.conteudo >= '03' and m.conteudo < '07') or (m.conteudo >= '08' and m.conteudo < '33') or (m.conteudo >= '37' and m.conteudo < '379') or (m.conteudo >= '39' and m.conteudo < '5') or (m.conteudo >= '9' and m.conteudo < '999')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query1 = $this->Query($sql1);
		$humanas = $query1->result;
		$resultado = $this->Ordem($humanas, 0);
		$resultado[0][0] = utf8_decode("Ciências Humanas");

		/***** SOCIAIS APLICADAS *****/
		$sql2 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_obra o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '02' and m.conteudo < '03') or (m.conteudo >= '07' and m.conteudo < '08') or (m.conteudo >= '33' and m.conteudo < '37') or (m.conteudo >= '379' and m.conteudo < '39') or (m.conteudo >= '65' and m.conteudo < '66') or (m.conteudo >= '71' and m.conteudo < '73')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query2 = $this->Query($sql2);
		$sociais = $query2->result;
		$resultado = array_merge($resultado,$this->Ordem($sociais, 1));
		$resultado[1][0] = utf8_decode("Ciências Sociais Aplicadas");

		/***** EXATAS *****/
		$sql3 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_obra o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '004' and m.conteudo < '005') or (m.conteudo >= '007' and m.conteudo < '008') or (m.conteudo >= '51' and m.conteudo < '56') or (m.conteudo >= '68' and m.conteudo < '69')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query3 = $this->Query($sql3);
		$exatas = $query3->result;
		$resultado = array_merge($resultado,$this->Ordem($exatas, 2));
		$resultado[2][0] = utf8_decode("Ciências Exatas e da Terra");

		/***** BIOLOGICAS *****/
		$sql4 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_obra o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '5' and m.conteudo < '51') or (m.conteudo >= '56' and m.conteudo < '6')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query4 = $this->Query($sql4);
		$biologicas = $query4->result;
		$resultado = array_merge($resultado,$this->Ordem($biologicas, 3));
		$resultado[3][0] = utf8_decode("Ciências Biológicas");

		/***** SAUDE *****/
		$sql5 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_obra o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '6' and m.conteudo < '619') or (m.conteudo >= '64' and m.conteudo < '65') or (m.conteudo >= '796' and m.conteudo < '8')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query5 = $this->Query($sql5);
		$saude = $query5->result;
		$resultado = array_merge($resultado,$this->Ordem($saude, 4));
		$resultado[4][0] = utf8_decode("Ciências da Saúde");

		/***** AGRARIAS *****/
		$sql6 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_obra o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '63' and m.conteudo < '64') or (m.conteudo >= '619' and m.conteudo < '62')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query6 = $this->Query($sql6);
		$agrarias = $query6->result;
		$resultado = array_merge($resultado,$this->Ordem($agrarias, 5));
		$resultado[5][0] = utf8_decode("Ciências Agrárias");
		
		/***** TECNOLOGIA *****/
		$sql7 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_obra o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '62' and m.conteudo < '63') or (m.conteudo >= '66' and m.conteudo < '68') or (m.conteudo >= '69' and m.conteudo < '7')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query7 = $this->Query($sql7);
		$tecnologia = $query7->result;
		$resultado = array_merge($resultado,$this->Ordem($tecnologia, 6));
		$resultado[6][0] = "Engenharia e Tecnologia";
	
		/***** LINGUISTICA *****/
		$sql8 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_obra o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 and ((m.conteudo >= '7' and m.conteudo < '71') or (m.conteudo >= '73' and m.conteudo < '796') or (m.conteudo >= '8' and m.conteudo < '9')) group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query8 = $this->Query($sql8);
		$linguistica = $query8->result;
		$resultado = array_merge($resultado,$this->Ordem($linguistica, 7));
		$resultado[7][0] = "Linguistica, letras e artes";

		/***** TOTAL *****/		
		$sql9 = new MSql("consulta.contagem,g.idgenero FROM (SELECT count(o.idobra) as contagem, o.idgenero FROM bt_material m,bt_obra o WHERE m.idobra=o.idobra and m.idetiqueta=189 and m.subcampo='a' and m.ocorrencia=1 group by o.idgenero) as consulta right join bt_genero g ON g.idgenero=consulta.idgenero group by g.idgenero, consulta.contagem order by g.idgenero");
		$query9 = $this->Query($sql9);
		$total = $query9->result;
		$resultado = array_merge($resultado,$this->Ordem($total, 8));
		$resultado[8][0] = "Total";

		return $resultado;		
	}
	
	function GetObraIdExemplarByTomboGrid($tombo)
	{
		$sql = new sql('o.numerodaobra, e.idexemplar, o.titulo, a.conteudo, o.datapublicacao, u.descricao', "bt_obra o inner join bt_exemplar e on e.idobra = o.idobra inner join bt_unidade u on u.idunidade = e.idunidade left join bt_autor a on o.idautor = a.idautor and a.subcampo = 'a'", " (e.numeroexemplar = ?) ");
		$query = $this->Query($sql,$tombo);
		return $query;
	}


}
?>
