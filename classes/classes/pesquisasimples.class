<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?php
/**
* @package SIGA
* @subpackage Biblioteca
* @author SETEC/MEC
*/

MIOLO::IMPORT('modules::biblioteca::classes::pesquisa');

class BusinessBibliotecaPesquisaSimples extends Pesquisa
{
	var $objObra;
    

	function BusinessBibliotecaPesquisaSimples($data = null)
	{
	  $this->Business('sigaept', $data);
	}

	function Listar($data, $camposPesquisa,$filtro=null,$campo=null,$sql=null)
	{
		global $MIOLO,$module,$perms;
        $objEtiqueta = $MIOLO->GetBusiness($module,'etiqueta');
        $GeneroPeriodico = $MIOLO->GetBusiness($module,'genero');
        
        $GeneroPeriodico->GetByDescricao("PERIODICO");

        $ehPeriodico = false;

        if($data->Genero == $GeneroPeriodico->idgenero){
            $ehPeriodico = true;
            $objEtiqueta->GetByTag("022"); //pega o id da etiqueta ISSN (em obra seria Numero da obra)
        }
		// Se não for passada uma sql faz a sequencia abaixo para montar uma
		// Se for passada (a partir de pesquisamulticampo.class) passa pra frente
        /*
        var_dump(' !!!data ');
        var_dump($data);
        var_dump('<br> ###<br>');
        
        var_dump(" !!!camposPesquisa ");
        var_dump($camposPesquisa);
        var_dump("<br> ###<br>");
        
        var_dump(" !!!filtro ");
        var_dump($filtro);
        var_dump("<br> ###<br>");
        
        var_dump(" !!!campo ");
        var_dump($campo);
        var_dump("<br> ###<br>");
        var_dump(" !!!sql ");
        var_dump($sql);
        var_dump("<br> ###<br>");
        var_dump("OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO");
        */
		if (!isset($sql))
		{
/*			// Montagem do Filtro da Pesquisa Simples 

			// de acordo com $camposPesquisa, o script busca em bt_material nas
			// etiquetas, campos.subcampos configurados, retornando o idobra correspondente.
			// Com o idobra, pega os dados da obra e dos exemplares.

			   Verifica se usuário realizou uma pesquisa simples ou pesquisa detalhada
			if (isset($campo)) //pesquisa a partir de link em "detalhes da obra"
			{
    			$termo = strtoupper($this->RetirarCaracteresEspeciais($filtro));
    			$termo = $this->SubstituirPorBranco($termo);

				if(! $data->termo)
				{
					$data->termo = false;
				}

				$termos = explode(" ", $termo);
				$termos = $this->RetirarVazios($termos);

				$this->getEtiquetas($camposPesquisa);

				$campos = $this->GetCamposByTitulo($campo,$camposPesquisa);

				foreach ($campos as $campo_subcampo)
				{
		            $inBusca .= (($inBusca != '') ? ',' : '(') . '(' . $campo_subcampo[0] . ',' . "'" . $campo_subcampo[1] . "')";  
				}

				foreach ($this->etiquetas as $etiqueta)
				{
		            foreach($etiqueta as $key=>$subcampo)
	                {
    					// verifica se campo aparece no datagrid: propriedade "true"
				    	if ($subcampo[2])
					    {
		                    $inShow .= (($inShow != '') ? ',' : '(') . '(' . $subcampo[0] . ',' . "'$key')";
				        }
			        }
				}
			}
			else //pesquisa simples
			{

				$this->getEtiquetas($camposPesquisa);
				foreach ($this->etiquetas as $etiqueta)
				{
					foreach($etiqueta as $key=>$subcampo)
					{
						// verifica se campo aparece no datagrid: propriedade "true"
				    	if ($subcampo[2])
					    {
						    $inShow .= (($inShow != '') ? ',' : '(') . '(' . $subcampo[0] . ',' . "'$key')";  
				        }
				    }
				}
			}
*/


			$inShow .= (($inShow != '') ? ')' : '');
            $campos2 = $this->GetCamposByTitulo('Grid',$camposPesquisa);
/*
   var_dump("Campos2 ooooooooooo<br>");
   var_dump($campos2);
   var_dump("<br><br>");
*/
			foreach ($campos2 as $campo_subcampo)
			{
				$inShow .= (($inShow != '') ? ',' : '(') . '(' . $campo_subcampo[0] . ',' . "'" . $campo_subcampo[1] . "')";  
			}
			$inShow .= (($inShow != '') ? ')' : '');

			if ($filtro == 'indice')
			{
				$conteudo = "(conteudo = '" . $data->busca . "')";
			}
			else
			{
				// verifica se o usuário escolheu termo exato
				if ($data->termo)
				{
					$termos[0] = strtoupper($this->RetirarCaracteresEspeciais($data->busca));
					$busca = strtoupper($data->busca);
					if ($busca != $termos[0])
					{
						$termos2[0] = $busca;
					}
				}
				else
				{
					$termos = explode(" ", strtoupper($this->RetirarCaracteresEspeciais($data->busca)));
					$termos = $this->RetirarVazios($termos);
					$busca = explode(" ", strtoupper($data->busca));
					$busca = $this->RetirarVazios($busca);

					if ($busca != $termos)
					{
						$termos2 = $busca;
					}
				}

				$conteudo = "((";

				foreach($termos as $termo)
				{
					$termo = addslashes($termo);
					$conteudo .= "(upper(sem_acentos(conteudo)) LIKE '%$termo%') AND ";
				}
				$conteudo = substr($conteudo, 0, -5);

				if ($termos2)
				{
					foreach($termos2 as $termo2)
					{
						$termo2 = addslashes($termo2);
						$conteudo2 .= "(upper(sem_acentos(conteudo))  LIKE '%$termo2%') AND ";
					}
					$conteudo2 = substr($conteudo2, 0, -5);
					$conteudo = $conteudo . ') OR (' . $conteudo2;
				}
			}

                      
			$campos = $this->GetCamposByTitulo($data->ConsultarPor_1,$camposPesquisa);
            /*
            var_dump("Campos ooooooooooo<br>");
            var_dump($campos);
           var_dump("<br><br>");
            */
			foreach ($campos as $campo_subcampo)
			{
				$inBusca .= (($inBusca != '') ? ',' : '(') . '(' . $campo_subcampo[0] . ',' . "'" . $campo_subcampo[1] . "')";  
			}
			$inBusca .= (($inBusca != '') ? ')' : '');

			$where1 = "(idetiqueta,subcampo) IN $inBusca AND $conteudo";
            if(!$ehPeriodico){
                $sql1 = "SELECT distinct idobra FROM bt_material WHERE $where1";
                $from = "bt_obra o, bt_material mm, (SELECT distinct o.idobra FROM ";
            }else{
                $sql1 = "SELECT distinct idartigo FROM bt_materialartigo WHERE $where1";
                $from = "bt_artigo p, bt_materialartigo mm, (SELECT distinct a.idartigo  FROM ";
            }
			

			if ($filtro == 'indice')
			{
                if(!$ehPeriodico){
				    $from .= "($sql1) m, bt_obra o";
                }else{
                    $from .= "($sql1) m, bt_artigo a, bt_periodico";
                }
			}
			else
            {
                if(!$ehPeriodico){
				    $from .= "($sql1))) m, bt_obra o";
                }else{
                    $from .= "($sql1))) m, bt_artigo a, bt_periodico";
                }
			}

			if ($data->Unidade > 0)
			{
                if(!$ehPeriodico){
				    $from .= ", bt_exemplar e";
                }else{
                    $from .= ", bt_exemplarperiodico e";
                }
			}
            if(!$ehPeriodico){
                $from .= " WHERE  (m.idobra = o.idobra)";
            }else{
                $from .= " WHERE  (m.idartigo = a.idartigo)";
            }
            

			if ($data->Genero > 0)
			{
                if(!$ehPeriodico){
				    $from .= " AND (o.idgenero = " . $data->Genero . ")";
                }else{
                    //$from .= " AND (p.idgenero = " . $data->Genero . ")";
                    //nem precisa, pois todos periodicos são desse genero
                }
                

                
                if($ehPeriodico){
                   
           
                    
                }
			}

			if ($data->Unidade > 0) 
			{
                if(!$ehPeriodico){
				    $from .= " AND (o.idobra = e.idobra) AND (e.idunidade = " . $data->Unidade . ")";
                }else{
                    $from .= " AND (p.idperiodico = e.idperiodico) AND (e.idunidade = " . $data->Unidade . ")";
                }
			}
            if(!$ehPeriodico){
                $from .= ") m";
            }else{
               $from .= ") m";
            }

			//se usuario tiver perfil de BIB_PRECATALOGACAO, não haverá restrições. Se não tiver, só retornam obras com campo 852 (classificação, idetiqueta 189) preenchido.
			/*if(!$perms->CheckAccess('BIB_PRECATALOGACAO',A_ACCESS,false))
			{*/
                if(!$ehPeriodico){
                    $sql = new sql("mm.idobra,mm.idetiqueta,mm.subcampo,mm.conteudo,o.numerodaobra", $from, "mm.idobra = m.idobra AND (mm.idetiqueta,mm.subcampo) IN $inShow AND mm.idobra = o.idobra", "mm.idobra,mm.idetiqueta,mm.subcampo");
                }else{
                    $sql = new sql("mm.idartigo as idobra,mm.idetiqueta,mm.subcampo,mm.conteudo,mm.idartigo as numerodaobra", $from, "mm.idartigo = m.idartigo AND (mm.idetiqueta,mm.subcampo) IN $inShow AND mm.idartigo=p.idartigo", "mm.idartigo,mm.idetiqueta,mm.subcampo");
                 
                 
                }
//				$filtroPerfilWhere = '';
			/*}
			else
			{
                if(!$ehPeriodico){
                    $sql = new sql("mm.idobra,mm.idetiqueta,mm.subcampo,mm.conteudo,o.numerodaobra", $from, "mm.idobra = m.idobra AND (mm.idetiqueta,mm.subcampo) IN $inShow AND mm.idobra = o.idobra AND o.idobra in (SELECT distinct idobra FROM bt_material WHERE idetiqueta = 189 and subcampo='a')", "mm.idobra,mm.idetiqueta,mm.subcampo");
                }else{
                    $sql = new sql("mm.idartigo as idobra,mm.idetiqueta,mm.subcampo,mm.conteudo,mm.idartigo as numerodaobra", $from, "mm.idartigo = m.idartigo AND (mm.idetiqueta,mm.subcampo) IN $inShow AND mm.idartigo=p.idartigo AND p.idartigo in (SELECT distinct ma.idartigo FROM bt_materialperiodico mp,bt_exemplarperiodico ep, bt_artigo ma  WHERE mp.idetiqueta = 189 and mp.subcampo='a' and mp.idperiodico =ep.idperiodico and ma.idexemplarperiodico=ep.idexemplarperiodico)", "mm.idartigo,mm.idetiqueta,mm.subcampo");
                    
                }
//				$filtroPerfilWhere = " and (o.idobra IN (SELECT distinct m.idobra FROM bt_material m, bt_etiqueta e WHERE m.idetiqueta = //e.idetiqueta and e.tag = '852' and m.subcampo='a'))";
			}
			*/

		}
		else // a função ja recebeu uma sql
		{
//		    $this->getEtiquetas($camposPesquisa);
			$data->termo = true;
			$termos = $data->busca;
		}

		$this->getEtiquetas($camposPesquisa);
       /* var_dump("FROM<br><br>");
        var_dump($from);
        var_dump("<br><br>");
        var_dump("InShow<br><br>");
        var_dump($inShow);
        var_dump("<br><br>");
        */
   //     var_dump("SQL<br><br>");
//      var_dump($sql);
   //     var_dump("<br><br>");

		$query = $this->Query($sql);

		// verifica se obteve resultados:
		if (!$query->eof)
		{
		// Agora que tenho as obras que fazem parte do filtro que o usuário estipulou,
		// basta pegar os dados que são necessários para preencher o grid. Como os dados
		// estão em vários registros, é necessário primeiro, montar uma array com estes
		// registros e depois inserir este array no $query->result

            // cria a árvore de material
            $material = array();
            $idobra = ''; 

            foreach($query->result as $row)
            {
				if ($idobra != $row[0])
                {
                    $idobra = $row[0];
                    $material[$idobra] = array();
                    $material[$idobra]['0']['a'] = $row[4]; // numerodaobra
                }
				$sep = ($subcampo == ($row[1].$row[2])) ? '<br>' : '';
                $subcampo = ($row[1].$row[2]);

				if ( isset($material[$idobra][$row[1]][$row[2]]) )
				{
	                $material[$idobra][$row[1]][$row[2]] .= $sep . $row[3]; 
				}
				else
				{
	                $material[$idobra][$row[1]][$row[2]] = $sep . $row[3]; 
				}
			} 

			// percorre os materiais
            $i = 0;
    		foreach ($material as $idobra=>$subcampo)
	    	{
                $j = 1;
				// o primeiro campo, IDOBRA
       			$resultado[$i][$j] = $idobra;
       			$colunas['idobra']='idobra';
       			$colunas2[$j-1]=strtoupper('idobra');
       			$tipo[strtoupper('idobra')] = 'N';
       			$tamanho[strtoupper('idobra')] = 6;
       			$posicao[strtoupper('idobra')] = $j; 
                $j++;
                // para cada material, percorre os campos "mostráveis" 
    			foreach ($camposPesquisa as $campo)
	    		{
					if ($campo[4])
	    			{
                        $obj = $campo[1]->campo_e_subcampo;
                 		if (!(is_array($obj))) settype($obj,"array");
//						var_dump($obj);
                        $a = explode('.',$obj[0]);
//						var_dump($a);
                        $etiqueta = $this->etiquetas[$a[0]][$a[1]];
//						var_dump($etiqueta);
                        $conteudo = $subcampo[$etiqueta[0]][$a[1]];

            			// colorindo.... usado para destacar campos importantes
		        		// todo: implementar css ao invés de font color
				        $fontcolor = "<font color=$campo[7]>";

/*	Retirado o destaque em azul do termo pesquisado
			    		// o termo de busca que o usuário digita fique destacado no grid.
					    if ($campo[3])
					    {
	                 		if (!(is_array($termos))) settype($termos,"array");
							foreach($termos as $termo)
							{
								// "!@#$%¨&*()" é um termo auxiliar qualquer, apenas para garantir que o termo pesquisado não se confunda com a tag html usada para destacar o termo no texto
								$conteudo = str_ireplace($termo,"!@#$%¨&*()" . substr($conteudo, stripos($conteudo, $termo), strlen($termo)) . "</b>", $conteudo);
							}
							// precisa usar um padrão CSS ...  background-color:#ddeeff ninguém merece!
							$conteudo = str_ireplace("!@#$%¨&*()","<b style='background-color:#ddeeff'>", $conteudo);
    					}
*/
    					$resultado[$i][$j] .= $fontcolor . $conteudo;

         				// as variaveis abaixo configuram o datagrid
          				$colunas[$campo[2]] = $campo[2];
        				$colunas2[$j-1] = strtoupper($campo[2]);
        				$tipo[strtoupper($campo[2])] = 'C';
		        		$tamanho[strtoupper($campo[2])] = '100';
				        $posicao[strtoupper($campo[2])] = $j;

                        $j++;
                    }
                }
       			// o penúltimo campo, UNIDADE
//				$this->objObra = $MIOLO->GetBusiness($module,'obra');
//				$resultado[$i][$j] = $this->objObra->GetUnidades($resultado[$i][1]);
       			$colunas['unidade']='unidade';
       			$colunas2[$j-1]=strtoupper('unidade');
       			$tipo[strtoupper('unidade')] = 'C';
       			$tamanho[strtoupper('unidade')] = '100';
       			$posicao[strtoupper('unidade')] = $j; 
                $j++;
       			// o último campo, NUMERO DA OBRA
       			$resultado[$i][$j] = $subcampo['0']['a'];
       			$colunas['obra']='obra';
       			$colunas2[$j-1]=strtoupper('obra');
       			$tipo[strtoupper('obra')] = 'C';
       			$tamanho[strtoupper('obra')] = '100';
       			$posicao[strtoupper('obra')] = $j; 
                $i++;
            }
			unset($fontcolor);

	    	// Agora que temos $resultado, precisamos inserir ele no $query->result
    		$sql = new sql('idobra,conteudo','bt_material','idobra=47'); //qualquer id, apenas pra ter $query
	    	$query = $this->Query($sql);

			$rowCount = count($resultado);
			$col = count($colunas);

			$query->result = $resultado;
	    	$query->objSql->columns = $colunas;
    		$query->metadata["fieldname"] = $colunas2;
	    	$query->metadata["fieldtype"] = $tipo;
		    $query->metadata["fieldlength"] = $tamanho;
		    $query->metadata["fieldpos"] = $posicao;
		    $query->rowCount = $rowCount;
		    $query->colCount = $col;
	    	$query->row = 0;

			unset($campo);
            /*var_dump("Aqui<br>");
			var_dump($query->result);
            */
			return $query;
		}
		else
		{
            
			return false;
		}
	}

	function ListExemplares($item)
	{
		$sql = new sql('e.idexemplar,o.numerodaobra as obra, e.numerodotombo as exemplar,r.descricao as tipo,es.descricao as estado,u.descricao as unidade, volume','bt_exemplar e,bt_regracirculacao r,bt_estado es,bt_unidade u, bt_obra o',"e.idobra=$item and e.idregracirculacao = r.idregracirculacao and e.idestado = es.idestado and e.idunidade = u.idunidade and e.idobra = o.idobra",'');
        $query = $this->Query($sql);
        return $query;
	}

    function ListExemplaresPeriodico($item)
    {
        $sql = new sql('e.idexemplarperiodico,p.idperiodico as periodico, e.numerodotombo as exemplar,r.descricao as tipo,es.descricao as estado,u.descricao as unidade, e.volume','bt_exemplarperiodico e,bt_regracirculacao r,bt_estado es,bt_unidade u, bt_periodico p',"e.idperiodico=$item and e.idregracirculacao = r.idregracirculacao and e.idestado = es.idestado and e.idunidade = u.idunidade and e.idperiodico = p.idperiodico",'');
        $query = $this->Query($sql);
        return $query;
    }

	function ListExemplaresByIdObra($idobra)
	{
		$sql = new sql('distinct(e.idexemplar),o.numerodaobra as obra, e.numerodotombo as exemplar,r.descricao as tipo,es.descricao as estado,u.descricao as unidade, volume, volume as prevdev','bt_exemplar e,bt_regracirculacao r,bt_estado es,bt_unidade u, bt_obra o',"e.idobra=$idobra and e.idregracirculacao = r.idregracirculacao and e.idestado = es.idestado and e.idunidade = u.idunidade and e.idobra = o.idobra",'unidade, e.numerodotombo, volume');
        $query = $this->Query($sql);
		
		for($i=0; $i<count($query->result); $i++)
		{
			if($query->result[$i][4] == 'Emprestado')
			{
				$id = $query->result[$i][0];
				$sql2 = new sql($this->_db->TimestampToChar('datahoraprevisaodevolucao').' as datahoraprevisaodevolucao','bt_emprestimo', "(idexemplar=$id) and (datahoradadevolucao is null)");
				$query2 = $this->Query($sql2);
				$query->result[$i][7] = $query2->result[0][0];
			}
			else
			{
				$query->result[$i][7] = '';
			}
		}
        return $query;
	}
    
    function ListExemplaresByIdArtigo($idartigo)
    {
        
        
        $sql = new sql('distinct(e.idexemplarperiodico),e.tituloedicao as obra, e.numerodotombo as exemplar,r.descricao as tipo,es.descricao as estado,u.descricao as unidade, volume, volume as prevdev','bt_exemplarperiodico e,bt_regracirculacao r,bt_estado es,bt_unidade u, bt_artigo a',"a.idartigo=$idartigo and e.idregracirculacao = r.idregracirculacao and e.idestado = es.idestado and e.idunidade = u.idunidade and e.idexemplarperiodico=a.idexemplarperiodico",'unidade, e.numerodotombo, volume');
        $query = $this->Query($sql);

        for($i=0; $i<count($query->result); $i++)
        {
            if($query->result[$i][4] == 'Emprestado')
            {
                $id = $query->result[$i][0];
                $sql2 = new sql($this->_db->TimestampToChar('datahoraprevisaodevolucao').' as datahoraprevisaodevolucao','bt_emprestimo', "(idexemplar=$id) and (datahoradadevolucao is null)");
                $query2 = $this->Query($sql2);
                $query->result[$i][7] = $query2->result[0][0];
            }
            else
            {
                $query->result[$i][7] = '';
            }
        }

        return $query;
    }
    
    function ListExemplaresByIdPeriodico($idperiodico)
    {
        $sql = new sql('distinct(e.idexemplarperiodico),p.idperiodico as periodico, e.numerodotombo as exemplar,r.descricao as tipo,es.descricao as estado,u.descricao as unidade, volume, volume as prevdev','bt_exemplarperiodico e,bt_regracirculacao r,bt_estado es,bt_unidade u, bt_periodico p',"e.idperiodico=$idperiodico and e.idregracirculacao = r.idregracirculacao and e.idestado = es.idestado and e.idunidade = u.idunidade and e.idperiodico = p.idperiodico",'unidade, e.numerodotombo, volume');
        $query = $this->Query($sql);

        for($i=0; $i<count($query->result); $i++)
        {
            if($query->result[$i][4] == 'Emprestado')
            {
                $id = $query->result[$i][0];
                $sql2 = new sql($this->_db->TimestampToChar('datahoraprevisaodevolucao').' as datahoraprevisaodevolucao','bt_emprestimo', "(idexemplarperiodico=$id) and (datahoradadevolucao is null)");
                $query2 = $this->Query($sql2);
                $query->result[$i][7] = $query2->result[0][0];
            }
            else
            {
                $query->result[$i][7] = '';
            }
        }

        return $query;
    }

	function GetTitulo($item)
	{
	$sql = new sql('titulo','bt_obra','idobra=?');
	$query = $this->Query($sql,$item);
	return $query;
    }

    function GetTituloPeriodicoByIdArtigo($idArtigo)
    {
        global $MIOLO,$module,$perms;
        $objEtiqueta = $MIOLO->GetBusiness($module,'etiqueta');
        $objEtiqueta->GetByTag("245"); //pegua a etiqueta titulo

         $sql = new sql('mp.conteudo as titulo','','','mp.idperiodico');
         $sql->SetJoin('bt_materialperiodico mp','bt_exemplarperiodico e','mp.idperiodico = e.idperiodico');
         $sql->SetJoin('bt_exemplarperiodico e','bt_artigo a','e.idexemplarperiodico = a.idexemplarperiodico');
         $sql->SetWhere('mp.idetiqueta ='.$objEtiqueta->idEtiqueta.' AND a.idartigo ='.$idArtigo."  AND mp.subcampo='a'");
        $query = $this->Query($sql);
        return $query;
        
    }
    
    function GetEstadoExemplarById($idobra) {
    	$sql = new sql('idobra,idestado','bt_exemplar',"idobra = $idobra",'');
        $query = $this->Query($sql);
        return $query->result[0][1];
    }
    
    function GetCduById($idobra) {
    	$sql = new sql('conteudo','bt_material',"idobra = $idobra and idetiqueta = 47 and subcampo = 'a'",'');
    	$query = $this->query($sql);
    	return $query->result[0][0];
    }
    
  /*  
    
    function sem_acentos(character varying)
    {
       RETURNS character varying AS
     $BODY$
         SELECT TRANSLATE($1, 'áéíóúàèìòùãõâêîôôäëïöüçÁÉÍÓÚÀÈÌÒÙÃÕÂÊÎÔÛÄËÏÖÜÇ', 'aeiouaeiouaoaeiooaeioucAEIOUAEIOUAOAEIOOAEIOUC')
     $BODY$
       LANGUAGE 'sql' VOLATILE;
       }
    */
    
    
       
       
}
?>
