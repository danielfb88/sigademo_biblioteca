<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?php
/**
* @package SIGA
* @subpackage Biblioteca
* @author SETEC/MEC
*/

class BusinessBibliotecaUsuarioValidacao extends Business
{
	var $login;
	var $usuario;

	function BusinessBibliotecaUsuarioValidacao($data = null)
	{
       $this->Business('sigaept', $data);
	}

	
	function GetData()
	{
		$data = new FormData();
		$data->idusuario = $this->idusuario;
		$data->idgrupo = $this->idgrupo;
		$data->datadevalidade = $this->datadevalidade;
		$data->codigoacesso = $this->codigoacesso;
		$data->dtvalidacao = $this->dtvalidacao;
		$data->idusuarioopvalidacao = $this->idusuarioopvalidacao;
		return $data;
	}


	function SetData($data)
	{
		$this->usuario = $data->usuario;
		$this->idgrupo = $data->idgrupo;
		$this->datadevalidade = $data->datadevalidade;
		$this->codigoacesso = $data->codigoacesso;
		$this->dtvalidacao = $data->dtvalidacao;
		$this->idusuarioopvalidacao = $data->idusuarioopvalidacao;
	}


	function GetByCartao($cartao)
	{
		$sql = new sql('a.codigoacesso,a.idusuario','bt_validacao a','a.codigoacesso = ?');
		$query = $this->Query($sql,$cartao);
		return $query;
	}


	function LiberaCartao($cartao,$idusuario)
	{
		global $MIOLO,$module;
	
		$sql = new sql('','bt_validacao','codigoacesso = ?');
		$dados = array ($cartao);
		$ok = $this->Execute($sql->delete($dados));

		if ($ok)
		{
			//
			// LOG ;)
			//
			$log = $MIOLO->GetBusiness($module,'log'); 
			$sqlog = $log->Gravar("EXCCARTAO","Usuário: " . $idusuario . "/Cartão: " . $cartao);	
			$this->Execute($sqlog->Insert());
		}

    	return $ok;
	}


	function GetByCodigo($login)
	{
		$sql = new sql('idnotainfracao,idusuario,idinfracao,notainfracao','bt_notainfracao','idusuario = ?');
	
		$query = $this->Query($sql,$login);

		if ( !$query->eof() )
			$this->SetData($query->GetRowObject());

		return $this;
	}


	function ListGrupos()
	{
		$sql = new sql('idgrupo,descricao','bt_grupo','','idgrupo');
		
		$query = $this->Query($sql);

		return $query->result;
	}	


	function Update($data)
	{
		$data->dtvalidacao = ":TO_DATE('". $data->dtvalidacao . "','DD/MM/YYYY HH24:MI:SS')"; 
		
		$sql = new sql('codigoacesso,dtvalidacao','bt_validacao','(idvalidacao = ? ) AND (idusuario = ?)');
		
		// values é um array com cada campo do primeiro parametro do sql mais os 
		// parâmetros do where 
		$values = array($data->codigoacesso,$data->dtvalidacao,$data->idvalidacao,$data->idusuario);
		
		$ok = $this->Execute($sql->Update($values));

		return $ok;
	}


	function UpdateGrupo($data)
	{
		$sql = new sql('idgrupo','bt_vinculo','idusuario = ?');
		
		$values = array($data->idgrupo,$data->idusuario);
		
		$ok = $this->Execute($sql->Update($values));
		
		return $ok;
	}


	function Insert($data)
	{
		$data->dtvalidacao = ":TO_DATE('". $data->dtvalidacao . "','DD/MM/YYYY HH24:MI:SS')"; 
		
		$sql = new sql('idvalidacao,idusuario,codigoacesso,dtvalidacao', 'bt_validacao');
				
		$values = array($this->idvalidacao,$data->idusuario,$data->codigoacesso,$data->dtvalidacao);

		$ok = $this->Execute($sql->Insert($values));

		if($ok)
		{
			//verifica se usuario possui grupo em bt_vinculo
			$sql = new sql('idgrupo','bt_vinculo','idusuario = ?');
			$grupo = $this->Query($sql,$data->idusuario);
			if($grupo->result[0][0] == null)
			{
				//insert
				$sql = new sql('idusuario, idgrupo','bt_vinculo');
				$values = array($data->idusuario,$data->idgrupo);
				$ok = $this->Execute($sql->Insert($values));
			}
			elseif ($data->idgrupo <> $data->hidGrupo)
			{
				//update
				$ok = $this->UpdateGrupo($data);
			}
		}
		
		return $ok;
	}


	function verificaEstaValidado($data)
	{
		$sql = new sql('u.login','bt_validacao v,cm_usuario u','v.idusuario=u.idusuario and codigoacesso=?');		
		$query = $this->Query($sql,$data->codigoacesso);
		return $query;
	}
	
	
	function GetCartao($idusuario)
	{
		$sql = new sql('a.idvalidacao,a.codigoacesso,a.dtvalidacao','bt_validacao a, bt_vinculo b','(a.idusuario = ?) and (a.idusuario = b.idusuario)');

		$query = $this->Query($sql,$idusuario);
		
		return $query;
	}


	function GeraSequencia()
	{
		$this->idvalidacao = $this->_db->GetNewId('seq_bt_validacao');
		return $this->idvalidacao;
	}


}
?>
