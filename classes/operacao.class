<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?php
/**
* @package SIGA
* @subpackage Biblioteca
* @author SETEC/MEC
*/

class BusinessBibliotecaOperacao extends Business
{

	var $idoperacao;
	var $descricao;
	var $mnemonico;

	function BusinessBibliotecaOperacao($data = null)
	{
       $this->Business('sigaept', $data);
	}

	function GetData()
	{
		$data = new FormData();
		$data->idoperacao = $this->idoperacao;
		$data->descricao = $this->descricao;
		$data->mnemonico = $this->mnemonico;
		return $data;
	}


	function SetData($data)
	{
		$this->idoperacao = $data->idoperacao;
		$this->descricao = $data->descricao;
		$this->mnemonico = $data->mnemonico;
	}

	function GetByCodigo($idoperacao)
	{

		$sql = new sql('idoperacao,descricao,mnemonico','bt_operacao','idoperacao = ?');
	
		$query = $this->Query($sql,$idoperacao);

		if ( !$query->eof() )
			$this->SetData($query->GetRowObject());

	return $this;
	}

    function PesqOperacao($idoperacao)
    {
        $sql = new sql('o.idoperacao  as idoperacao ','bt_transicao t,  bt_operacao o','   t.idoperacao = o.idoperacao  and o.idoperacao = ?');
        //$values = array($data->idoperacao);
        $query = $this->Query($sql,$idoperacao);

      
        //var_dump($query->result[0][0]);
      
        return $query->result[0][0];
    }

	function LastNumeroOperacao()
	{    
	  $sql = new sql("nextval('seq_bt_operacao')");
      $query = $this->Query($sql);
	  return $query->result[0][0];
	}

	function Update($data)
	{
		
		$sql = new sql('idoperacao,descricao,mnemonico','bt_operacao','idoperacao = ?');
		
		// values é um array com cada campo do primeiro parametro do sql mais os 
		// parâmetros do where 
		$values = array($data->idoperacao,$data->descricao,$data->mnemonico,$data->idoperacao);
		
		$ok = $this->Execute($sql->Update($values));

	return $ok;

	}

	
	function Insert($data)
	{
		
		$sql = new sql('idoperacao,descricao,mnemonico','bt_operacao');

		$data->idoperacao = ($this->LastNumeroOperacao());

        $ultimo = ($data->idoperacao +1);
		
	//	$values = array($data->idoperacao,$data->descricao,$data->mnemonico);

    $values = array( $ultimo,$data->descricao,$data->mnemonico);

   
    
		$ok = $this->Execute($sql->Insert($values));
		if($ok){$ok = $data->idoperacao;}

	return $ok;

	}

	
	function Delete($data)
	{
		
		$sql = new sql('','bt_operacao','idoperacao = ?');
        
		$ok = $this->Execute($sql->Delete($data->idoperacao));

	return $ok;

	}

	function ListOperacao()
	{
		$sql = new sql('idoperacao,mnemonico,descricao','bt_operacao','','idoperacao');
        $query = $this->Query($sql);
        return $query;
	}
	
	function GetIdoperacaoByMnemonico($mne)
	{
        $criteria =  $this->getCriteria();
        $criteria->addCriteria('mnemonico','=', "'$mne'");
        $cursor = $criteria->retrieveAsCursor();
        return $cursor->getObject();
  }
  
  function GetIdoperacao()
  {
     return $this->idoperacao;
  }

}
?>
