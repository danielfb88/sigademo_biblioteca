<?php
/* Copyright 2006, 2007, 2008, 2009, 2010 do SETEC/MEC
 *
 * Este arquivo é parte do programa SigaEPT
 *
 * O SigaEPT é um software livre;  você pode redistribuí-lo e/ou modificá-lo dentro dos
 * termos da Licença Pública Geral GNU como publicada pela fundação do software livre (FSF);
 * na versão 2 da Licença.
 *
 * Este programa é distribuído na esperança que possa ser útil, mas SEM NENHUMA GARANTIA; sem
 * uma garantia implícita de ADEQUAÇÃO a qualquer MERCADO ou APLICAÇÃO EM PARTICULAR. Veja Licença
 * Pública Geral GNU/GPL em português para maiores detalhes.
 *
 * Você deve ter recebido uma cópia da Licença Pública Geral GNU, sob o título “LICENCA.txt”,
 * junto com este programa, se não, acesse o portal do Software Público Brasileiro no endereço
 * www.softwarepublico.gov.br ou escreva para Fundação do Software Livre (FSF) Inc.,51 Franklin
 * St, Fifth Floor, Boston, MA 02110-1301, USA
 */
?>
<?php
/**
* @package SIGA
* @subpackage Biblioteca
* @author SETEC/MEC
*/

    class repExemplaresPorPeriodoeOperacao extends MPDFReport
    {
        var $timestamp;
        var $img;
        var $level = array();
        var $dataInicio;
        var $dataFim;
        var $Operacao;
        var $OperacaoTx;
        var $total;
        var $resultado = array();

        function __construct($data)
        {
            global $MIOLO, $module, $page, $context, $self, $action, $perms;

            parent::__construct(NULL, NULL, 55);
            //var_dump($data);
            $this->dataInicio = $data->dataInicio;
            $this->dataFim = $data->dataFim;
            $this->Operacao = $data->Operacao;
            $total = 0;
            $exemplares = $MIOLO->GetBusiness($module, 'exemplar');
            $resultado = $exemplares->RelatorioExemplarPorPeriodoeOperacao($this->dataInicio,$this->dataFim,$this->Operacao);
            //var_dump($resultado->result);
            $ui = $MIOLO->GetUI();
            $this->img = $ui->GetImageSrc('logonet.png','biblioteca');
            $this->timestamp = date('d/m/Y G:i');
            $this->pdf->ezStartPageNumbers(520, 800, 10, 'rigth', utf8_decode('Página: {PAGENUM}'));
            $this->pdf->ezSetMargins(100, 30, 30, 30);
            $this->GeneratePageHeader();
            $this->GeneratePageFooter();
            
            switch ($this->Operacao)
            {
            	case '17':
            		
            		$this->OperacaoTx = utf8_decode('INCLUÍDOS');
            		break;
            	
            	case '18':
            		
            		$this->OperacaoTx = 'ALTERADOS';
            		break;
            		
            	case '19':
            		
            		$this->OperacaoTx = utf8_decode('EXCLUÍDOS');
            		break;
            }        
            if($resultado->result){		
                foreach ($resultado->result as $n)
                {
                        $this->total = $this->total + $n[2];
                }
            }else{
                    $this->total = 0;
            }
            // simula multiplos niveis de quebra
    
			$this->resultado = $resultado->result;
			
            $summary1[] = array(array("Total de Exemplares:", "<b>$this->total</b>"));
         

            // define as colunas da linha de detalhe
            $columns = array(
                new MPDFReportColumn('LOGIN', '<b><i>LOGIN</i></b>', 'left', false, 20, true),
                new MPDFReportColumn('NOME', '<b><i>NOME</i></b>', 'left', false, 40, true),
                new MPDFReportColumn('EXEMPLARES', '<b><i>EXEMPLARES</i></b>', 'right', false, 30, true),
               
            );

     
            // define as colunas da linha de grupo (level1)
            $sum1 = array(
                new MPDFReportColumn('texto', 'texto', 'right', false, 70, true),               
                new MPDFReportColumn('valor', 'valor', 'right', false, 20, true)
            );

            // Largura do report, em %
            $this->SetWidth(100);
            $this->SetColumns($columns);
            $colDetail = $this->columns;
            $this->SetColumns($sum1);
            $colSum1 = $this->columns;
             
             // gera o report
             $this->GenerateGroupHeader(1, $this->level);
             $this->columns = $colDetail; 
             $this->GenerateData($resultado->result);
             $this->SetOption('showHeadings', 0);
             $this->SetOption('showLines', 1);
             $this->columns = $colSum1;
             $this->GenerateData($summary1[0]);
          
          
        }

        function GenerateGroupHeader()
        {
            $this->pdf->SetStrokeColor(0, 0, 0);
            $x0 = $this->pdf->left;
          
            $this->pdf->ezSetDy(-32, 'makeSpace');
            $y = $this->pdf->y;
            $this->pdf->addText($x0, $y + 19, 10, utf8_decode('Período: ' .$this->dataInicio.' à '.$this->dataFim.''));
            $this->pdf->addText($x0, $y + 08, 10, 'Para Exemplares: ' .$this->OperacaoTx);
           
          
        }

        function GeneratePageHeader()
        {
            $x0 = $this->pdf->left;
            $x1 = $this->pdf->right;
            $h = $this->pdf->getFontHeight(12);
            $header = $this->pdf->openObject();
            $this->pdf->saveState();

		$x00=$this->pdf->left;
		$hh = $this->pdf->getFontHeight(12);
		$this->pdf->addText($x00, 800, 12, $this->manager->getConf('instituicao.sigla')." - ".$this->manager->getConf('instituicao.nome'));
		$this->pdf->addText($x00, 800 - $hh, 12, $this->manager->getConf('theme.system'));

/*
            $this->pdf->addPngFromFile($this->img, $x0, 770, 50, 50);
            $this->pdf->addText($x0 + 60, 800, 12, 'UFJF - Universidade Federal de Juiz de Fora');
            $this->pdf->addText($x0 + 60, 800 - $h, 12, utf8_decode('CGCO - Centro de Gestão do Conhecimento Organizacional'));
            $this->pdf->addText($x0 + 60, 800 - $h - $h, 12, utf8_decode('SIGA - Sistema Integrado de Gestão Acadêmica - Módulo Biblioteca'));
*/

            $y = 800 - $h - $h - 5;
            $this->pdf->SetColor(0.1,0.1,0.1);
            $this->pdf->filledRectangle($x0, $y-20, $x1-30, 16 );
            $this->pdf->SetColor(1,1,1);
            $this->pdf->addText($x0 + 5, $y - 16, 12, utf8_decode('RELATÓRIO DE EXEMPLARES POR PERÍODO E OPERACÃO'));
            $this->pdf->restoreState();
            $this->pdf->closeObject();
            $this->pdf->addObject($header, 'all');
        }

        function GeneratePageFooter()
        {
            $x0 = $this->pdf->left;
            $x1 = $this->pdf->right;
            $footer = $this->pdf->openObject();
            $this->pdf->saveState();
            $this->pdf->SetStrokeColor(0, 0, 0);
            $this->pdf->line($x0, 28, $x1, 28);
            $this->pdf->addText($x0, 19, 9, $this->timestamp . ' - CGCO/DSI');
            $this->pdf->restoreState();
            $this->pdf->closeObject();
            $this->pdf->addObject($footer, 'all');
        }

        function GenerateData($data)
        {
        	$this->pdf->ezSetDy(-5);
            $this->SetData($data);
            $this->rawdata = $this->GenerateTableData();
            $this->GenerateBody($this->rawdata);
        }

        function Generate()
        {
            $this->SetOutput();
            $this->Execute();
        }
    }
?>
